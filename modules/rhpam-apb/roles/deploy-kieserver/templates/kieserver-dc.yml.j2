kind: DeploymentConfig
apiVersion: v1
metadata:
  name: {{ kieserver_deployment_name }}
  namespace: {{ namespace }}
  labels:
    app: {{ kieserver_deployment_name }}
    application: {{ application_name }}
    service: {{ kieserver_service_name }}
    services.server.kie.org/kie-server-id: {{ kieserver_deployment_name }}
spec:
  revisionHistoryLimit: 10
  strategy:
    type: Rolling
    rollingParams:
      maxSurge: 100%
      maxUnavailable: 0
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - kieserver
        from:
{% if kieserver_s2i %}
          kind: ImageStream
          name: {{ kieserver_deployment_name }}
{% else %}
          kind: ImageStreamTag
          namespace: "{{ kieserver_image_namespace }}"
          name: "{{ kieserver_image_name }}:{{ kieserver_image_tag }}"
{% endif %}
    - type: ConfigChange
  replicas: {{ kieserver_replicas }}
  selector:
    deploymentConfig: {{ kieserver_deployment_name }}
  template:
    metadata:
      name: {{ kieserver_deployment_name }}
      labels:
        app: {{ kieserver_deployment_name }}
        application: {{ application_name }}
        service: {{ kieserver_service_name }}
        deploymentConfig: {{ kieserver_deployment_name }}
        services.server.kie.org/kie-server-id: {{ kieserver_deployment_name }}
    spec:
      serviceAccountName: {{ service_account_name }}
      terminationGracePeriodSeconds: 90
      containers:
        - name: kieserver
          image: ' '
          imagePullPolicy: "{{ kieserver_image_pull_policy }}"
          lifecycle:
            postStart:
              exec:
                command:
                - /bin/sh
                - /opt/eap/bin/launch/jboss-kie-kieserver-hooks.sh
            preStop:
              exec:
                command:
                - /bin/sh
                - /opt/eap/bin/launch/jboss-kie-kieserver-hooks.sh
          resources:
            limits:
              memory: "{{ kieserver_limits_memory }}"
          livenessProbe:
            httpGet:
              path: /services/rest/server/healthcheck
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
            timeoutSeconds: 2
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /services/rest/server/readycheck
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 36
          ports:
            - name: jolokia
              containerPort: 8778
              protocol: TCP
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
{% if _apb_plan_id != 'trial' %}
            - name: ping
              containerPort: 8888
              protocol: TCP
{% endif %}
          env:
            - name: WORKBENCH_SERVICE_NAME
              value: "{{ kieserver_businesscentral_svc }}"
            - name: KIE_SERVER_MODE
              value: "{{ kieserver_mode }}"
            - name: DATASOURCES
              value: "RHPAM"
            - name: RHPAM_DATABASE
              value: "{{ kieserver_db_name }}"
            - name: RHPAM_JNDI
              value: "java:/jboss/datasources/rhpam"
            - name: KIE_SERVER_PERSISTENCE_DS
              value: "java:/jboss/datasources/rhpam"
            - name: RHPAM_USERNAME
              value: "{{ kieserver_db_user }}"
            - name: RHPAM_PASSWORD
              value: "{{ kieserver_db_pwd }}"
            - name: RHPAM_JTA
              value: "true"
            - name: RHPAM_DRIVER
              value: "{{ kieserver_db[kieserver_db_type].driver }}"
            - name: KIE_SERVER_PERSISTENCE_DIALECT
              value: "{{ kieserver_db[kieserver_db_type].dialect }}"
{% if kieserver_db_type == 'H2' %}
            - name: RHPAM_NONXA
              value: "false"
            - name: RHPAM_XA_CONNECTION_PROPERTY_URL
              value: "jdbc:h2:/opt/kie/data/h2/rhpam;AUTO_SERVER=TRUE"
            - name: RHPAM_SERVICE_HOST
              value: "dummy_ignored"
            - name: RHPAM_SERVICE_PORT
              value: "12345"
{% else %}
            - name: RHPAM_SERVICE_HOST
              value: "{{ kieserver_db_host }}"
            - name: RHPAM_SERVICE_PORT
              value: "{{ kieserver_db[kieserver_db_type].port }}"
{% if kieserver_db_type == 'MySQL' %}
            - name: RHPAM_CONNECTION_CHECKER
              value: "org.jboss.jca.adapters.jdbc.extensions.mysql.MySQLValidConnectionChecker"
            - name: RHPAM_EXCEPTION_SORTER
              value: "org.jboss.jca.adapters.jdbc.extensions.mysql.MySQLExceptionSorter"
{% elif kieserver_db_type == 'PostgreSQL' %}
            - name: RHPAM_CONNECTION_CHECKER
              value: "org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker"
            - name: RHPAM_EXCEPTION_SORTER
              value: "org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLExceptionSorter"
{% endif %}
            - name: TIMER_SERVICE_DATA_STORE
              value: "{{ kieserver_db_host }}"
            - name: TIMER_SERVICE_DATA_STORE_REFRESH_INTERVAL
              value: "30000"
            - name: RHPAM_TX_ISOLATION
              value: "TRANSACTION_READ_COMMITTED"
{% endif %}
{% if kieserver_db_type == 'External' %}
            - name: RHPAM_XA_CONNECTION_PROPERTY_URL
              value: "{{ kieserver_db[kieserver_db_type].url }}"
{% endif %}
            - name: PROMETHEUS_SERVER_EXT_DISABLED
              value: "{{ kieserver_prometheus_ext_disabled }}"
            - name: DROOLS_SERVER_FILTER_CLASSES
              value: "true"
            - name: KIE_ADMIN_USER
              value: "{{ kie_admin_user }}"
            - name: KIE_ADMIN_PWD
              value: "{{ kie_admin_pwd }}"
            - name: KIE_MBEANS
              value: "enabled"
            - name: KIE_SERVER_BYPASS_AUTH_USER
              value: "false"
            - name: KIE_SERVER_CONTROLLER_USER
              value: "{{ controller_user }}"
            - name: KIE_SERVER_CONTROLLER_PWD
              value: "{{ controller_pwd }}"
            - name: KIE_SERVER_CONTROLLER_SERVICE
              value: "{{ controller_svc }}"
{% if has_external_controller %}
            - name: KIE_SERVER_CONTROLLER_HOST
              value: "{{ controller_host }}"
            - name: KIE_SERVER_CONTROLLER_PORT
              value: "{{ controller_port }}"
            - name: KIE_SERVER_CONTROLLER_PROTOCOL
              value: "{{ controller_protocol }}"
            - name: KIE_SERVER_CONTROLLER_TOKEN
              value: "{{ controller_token }}"
{% else %}
            - name: KIE_SERVER_CONTROLLER_PROTOCOL
              value: "ws"
{% endif %}
{% if has_router %}
            - name: KIE_SERVER_ROUTER_SERVICE
              value: "{{ router_svc }}"
            - name: KIE_SERVER_ROUTER_HOST
              value: "{{ router_host }}"
            - name: KIE_SERVER_ROUTER_PORT
              value: "{{ router_port }}"
            - name: KIE_SERVER_ROUTER_PROTOCOL
              value: "{{ router_protocol }}"
{% endif %}
            - name: KIE_SERVER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['services.server.kie.org/kie-server-id']
            - name: KIE_SERVER_ROUTE_NAME
              value: "{{ kieserver_deployment_name }}"
            - name: KIE_SERVER_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KIE_SERVER_USER
              value: "{{ kie_execution_user }}"
            - name: KIE_SERVER_PWD
              value: "{{ kie_execution_pwd }}"
{% if has_rhpamcentr %}
            - name: MAVEN_REPOS
              value: "RHPAMCENTR,EXTERNAL"
            - name: RHPAMCENTR_MAVEN_REPO_SERVICE
              value: "{{ kieserver_businesscentral_svc }}"
            - name: RHPAMCENTR_MAVEN_REPO_PATH
              value: "/maven2/"
            - name: RHPAMCENTR_MAVEN_REPO_USERNAME
              value: "{{ businesscentral_maven_repo_user }}"
            - name: RHPAMCENTR_MAVEN_REPO_PASSWORD
              value: "{{ businesscentral_maven_repo_pwd }}"
{% else %}
            - name: MAVEN_REPOS
              value: "EXTERNAL"
{% endif %}
{% if not kieserver_s2i %}
            - name: MAVEN_MIRROR_URL
              value: "{{ maven_mirror_url }}"
{% endif %}
{% if external_maven_repo_url != "" %}
            - name: EXTERNAL_MAVEN_REPO_URL
              value: "{{ external_maven_repo_url }}"
            - name: EXTERNAL_MAVEN_REPO_ID
              value: "{{ external_maven_repo_id }}"
            - name: EXTERNAL_MAVEN_REPO_USERNAME
              value: "{{ external_maven_repo_user }}"
            - name: EXTERNAL_MAVEN_REPO_PASSWORD
              value: "{{ external_maven_repo_pwd }}"
{% endif %}
{% if enable_kieserver_jms_integration %}
            - name: KIE_SERVER_EXECUTOR_JMS
              value: "{{ kieserver_jms_executor }}"
            - name: KIE_SERVER_EXECUTOR_JMS_TRANSACTED
              value: "{{ kieserver_jms_executor_transacted }}"
            - name: KIE_SERVER_JMS_QUEUE_REQUEST
              value: "{{ kieserver_jms_queue_request }}"
            - name: KIE_SERVER_JMS_QUEUE_RESPONSE
              value: "{{ kieserver_jms_queue_response }}"
            - name: KIE_SERVER_JMS_QUEUE_EXECUTOR
              value: "{{ kieserver_jms_queue_executor }}"
{% if kieserver_jms_enable_signal %}
            - name: KIE_SERVER_JMS_ENABLE_SIGNAL
              value: "{{ kieserver_jms_enable_signal }}"
            - name: KIE_SERVER_JMS_QUEUE_SIGNAL
              value: "{{ kieserver_jms_queue_signal }}"
{% endif %}
{% if kieserver_jms_enable_audit %}
            - name: KIE_SERVER_JMS_ENABLE_AUDIT
              value: "{{ kieserver_jms_enable_audit }}"
            - name: KIE_SERVER_JMS_QUEUE_AUDIT
              value: "{{ kieserver_jms_queue_audit }}"
            - name: KIE_SERVER_JMS_AUDIT_TRANSACTED
              value: "{{ kieserver_jms_audit_transacted }}"
{% endif %}
            - name: MQ_SERVICE_PREFIX_MAPPING
              value: "{{ kieserver_service_name }}-amq7=AMQ"
            - name: AMQ_USERNAME
              value: "{{ kieserver_jms_username }}"
            - name: AMQ_PASSWORD
              value: "{{ kieserver_jms_password }}"
            - name: AMQ_PROTOCOL
              value: "tcp"
            - name: AMQ_QUEUES
              value: "{{ kieserver_jms_amq_queues }}"
{% endif %}
            - name: KIE_SERVER_MGMT_DISABLED
              value: "{{ kieserver_mgmt_disabled }}"
            - name: KIE_SERVER_STARTUP_STRATEGY
              value: "{{ kieserver_startup_strategy }}"
            - name: HTTPS_KEYSTORE_DIR
              value: "/etc/kieserver-certs"
            - name: HTTPS_KEYSTORE
              value: "{{ kieserver_keystore_name }}"
            - name: HTTPS_NAME
              value: "{{ kieserver_keystore_alias }}"
            - name: HTTPS_PASSWORD
              value: "{{ kieserver_keystore_pwd }}"
            - name: KIE_SERVER_CONTAINER_DEPLOYMENT
              value: "{{ kieserver_container_deployment }}"
{% if sso_url != "" %}
            - name: SSO_URL
              value: "{{ sso_url }}"
            - name: SSO_OPENIDCONNECT_DEPLOYMENTS
              value: "ROOT.war"
            - name: SSO_REALM
              value: "{{ sso_realm }}"
            - name: SSO_CLIENT
              value: "{{ kieserver_sso_client }}"
            - name: SSO_SECRET
              value: "{{ kieserver_sso_client_secret }}"
            - name: SSO_USERNAME
              value: "{{ sso_user }}"
            - name: SSO_PASSWORD
              value: "{{ sso_pwd }}"
            - name: SSO_DISABLE_SSL_CERTIFICATE_VALIDATION
              value: "{{ sso_disable_ssl_cert_validation }}"
            - name: SSO_PRINCIPAL_ATTRIBUTE
              value: "{{ sso_principal_attribute }}"
            - name: HOSTNAME_HTTPS
              value: "{{ ks_host | default('') }}"
{% endif %}
{% if auth_ldap_url != "" %}
            - name: AUTH_LDAP_URL
              value: '{{ auth_ldap_url }}'
            - name: AUTH_LDAP_BIND_DN
              value: '{{ auth_ldap_bind_dn }}'
            - name: AUTH_LDAP_BIND_CREDENTIAL
              value: '{{ auth_ldap_bind_credential }}'
            - name: AUTH_LDAP_JAAS_SECURITY_DOMAIN
              value: '{{ auth_ldap_jaas_security_domain }}'
            - name: AUTH_LDAP_BASE_CTX_DN
              value: '{{ auth_ldap_base_ctx_dn }}'
            - name: AUTH_LDAP_BASE_FILTER
              value: '{{ auth_ldap_base_filter }}'
            - name: AUTH_LDAP_SEARCH_SCOPE
              value: '{{ auth_ldap_search_scope }}'
            - name: AUTH_LDAP_SEARCH_TIME_LIMIT
              value: '{{ auth_ldap_search_time_limit }}'
            - name: AUTH_LDAP_DISTINGUISHED_NAME_ATTRIBUTE
              value: '{{ auth_ldap_distinguished_name_attribute }}'
            - name: AUTH_LDAP_PARSE_USERNAME
              value: '{{ auth_ldap_parse_username }}'
            - name: AUTH_LDAP_USERNAME_BEGIN_STRING
              value: '{{ auth_ldap_username_begin_string }}'
            - name: AUTH_LDAP_USERNAME_END_STRING
              value: '{{ auth_ldap_username_end_string }}'
            - name: AUTH_LDAP_ROLE_ATTRIBUTE_ID
              value: '{{ auth_ldap_role_attribute_id }}'
            - name: AUTH_LDAP_ROLES_CTX_DN
              value: '{{ auth_ldap_roles_ctx_dn }}'
            - name: AUTH_LDAP_ROLE_FILTER
              value: '{{ auth_ldap_role_filter }}'
            - name: AUTH_LDAP_ROLE_RECURSION
              value: '{{ auth_ldap_role_recursion }}'
            - name: AUTH_LDAP_DEFAULT_ROLE
              value: '{{ auth_ldap_default_role }}'
            - name: AUTH_LDAP_ROLE_NAME_ATTRIBUTE_ID
              value: '{{ auth_ldap_role_name_attribute_id }}'
            - name: AUTH_LDAP_PARSE_ROLE_NAME_FROM_DN
              value: '{{ auth_ldap_parse_role_name_from_dn }}'
            - name: AUTH_LDAP_ROLE_ATTRIBUTE_IS_DN
              value: '{{ auth_ldap_role_attribute_is_dn }}'
            - name: AUTH_LDAP_REFERRAL_USER_ATTRIBUTE_ID_TO_CHECK
              value: '{{ auth_ldap_referral_user_attribute_id_to_check }}'
{% endif %}
{% if auth_role_mapper_roles_properties != "" %}
            - name: AUTH_ROLE_MAPPER_ROLES_PROPERTIES
              value: "{{ auth_role_mapper_roles_properties }}"
            - name: AUTH_ROLE_MAPPER_REPLACE_ROLE
              value: "{{ auth_role_mapper_replace_role }}"
{% endif %}
{% if _apb_plan_id != 'trial' %}
            - name: JGROUPS_PING_PROTOCOL
              value: "openshift.DNS_PING"
            - name: OPENSHIFT_DNS_PING_SERVICE_NAME
              value: "{{ kieserver_deployment_name }}-ping"
            - name: OPENSHIFT_DNS_PING_SERVICE_PORT
              value: "8888"
{% endif %}
          volumeMounts:
            - name: kieserver-certs
              mountPath: "/etc/kieserver-certs"
              readOnly: true
{% if kieserver_db_type == 'H2' %}
            - name: kie-storage
              mountPath: "/opt/kie/data"
{% endif %}
      volumes:
        - name: kieserver-certs
          secret:
            secretName: {{ ks_secret_name }}
{% if kieserver_db_type == 'H2' %}
        - name: kie-storage
{% if kieserver_db_size == "" %}
          emptyDir: {}
{% else %}
          persistentVolumeClaim:
            claimName: {{ kieserver_deployment_name }}-kie-data
{% endif %}
{% endif %}
{% if kieserver_db_type == 'MySQL' %}
      initContainers:
      - command: ['sh', '-c', 'until nslookup {{ kieserver_db_deployment }} && nc -vz {{ kieserver_db_deployment }} 3306; do echo waiting for {{ kieserver_db_service }}; sleep 2; done;']
        image: busybox
        imagePullPolicy: IfNotPresent
        name: {{ kieserver_db_deployment }}-init
        terminationMessagePolicy: FallbackToLogsOnError
{% endif %}
{% if kieserver_db_type == 'PostgreSQL' %}
      initContainers:
      - command: ['sh', '-c', 'until nslookup {{ kieserver_db_deployment }} && nc -vz {{ kieserver_db_deployment }} 5432; do echo waiting for {{ kieserver_db_service }}; sleep 2; done;']
        image: busybox
        imagePullPolicy: IfNotPresent
        name: {{ kieserver_db_deployment }}-init
        terminationMessagePolicy: FallbackToLogsOnError
{% endif %}
