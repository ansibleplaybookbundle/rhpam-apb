kind: DeploymentConfig
apiVersion: v1
metadata:
  name: {{ smartrouter_deployment_name }}
  namespace: {{ namespace }}
  labels:
    app: {{ smartrouter_deployment_name }}
    application: {{ application_name }}
    service: {{ smartrouter_service_name }}
spec:
  revisionHistoryLimit: 10
  strategy:
    type: Rolling
    rollingParams:
      maxSurge: 100%
      maxUnavailable: 0
  triggers:
  - type: ImageChange
    imageChangeParams:
      automatic: true
      containerNames:
      - smartrouter
      from:
        kind: ImageStreamTag
        namespace: '{{ smartrouter_image_namespace }}'
        name: '{{ smartrouter_image_name }}:{{ smartrouter_image_tag }}'
  - type: ConfigChange
  replicas: {{ smartrouter_replicas }}
  selector:
    deploymentConfig: '{{ smartrouter_deployment_name }}'
  template:
    metadata:
      name: {{ smartrouter_deployment_name }}
      labels:
        app: {{ smartrouter_deployment_name }}
        application: {{ application_name }}
        service: {{ smartrouter_service_name }}
        deploymentConfig: '{{ smartrouter_deployment_name }}'
    spec:
      serviceAccountName: {{ service_account_name }}
      terminationGracePeriodSeconds: 60
      containers:
      - name: smartrouter
        image: ' '
        imagePullPolicy: '{{ smartrouter_image_pull_policy }}'
        resources:
          limits:
            memory: '{{ smartrouter_limits_memory }}'
        ports:
        - name: http
          containerPort: 9000
          protocol: TCP
        env:
        - name: KIE_SERVER_ROUTER_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KIE_SERVER_ROUTER_PORT
          value: "9000"
        - name: KIE_SERVER_ROUTER_PORT_TLS
          value: "9443"
        - name: KIE_SERVER_ROUTER_URL_EXTERNAL
          value: "{{ smartrouter_hostname }}"
        - name: KIE_SERVER_ROUTER_ID
          value: "{{ smartrouter_id }}"
        - name: KIE_SERVER_ROUTER_NAME
          value: "{{ smartrouter_name }}"
{% if smartrouter_use_external_route %}
        - name: KIE_SERVER_ROUTER_ROUTE_NAME
          value: "{{ smartrouter_deployment_name }}"
{% endif %}
        - name: KIE_SERVER_ROUTER_SERVICE
          value: "{{ smartrouter_deployment_name }}"
        - name: KIE_SERVER_ROUTER_PROTOCOL
          value: "{{ smartrouter_protocol }}"
        - name: KIE_SERVER_ROUTER_TLS_KEYSTORE_KEYALIAS
          value: "{{ smartrouter_keystore_alias }}"
        - name: KIE_SERVER_ROUTER_TLS_KEYSTORE_PASSWORD
          value: "{{ smartrouter_keystore_pwd }}"
        - name: KIE_SERVER_ROUTER_TLS_KEYSTORE
          value: "/etc/smartrouter-certs/{{ smartrouter_keystore_name }}"
        - name: KIE_SERVER_CONTROLLER_USER
          value: "{{ controller_user }}"
        - name: KIE_SERVER_CONTROLLER_PWD
          value: "{{ controller_pwd }}"
        - name: KIE_SERVER_CONTROLLER_SERVICE
          value: "{{ controller_svc }}"
        - name: KIE_SERVER_CONTROLLER_PROTOCOL
          value: "http"
        - name: KIE_SERVER_ROUTER_REPO
          value: "/opt/rhpam-smartrouter/data"
        - name: KIE_SERVER_ROUTER_CONFIG_WATCHER_ENABLED
          value: "true"
        volumeMounts:
        - name: "smartrouter-data"
          mountPath: "/opt/rhpam-smartrouter/data"
        - name: "smartrouter-certs"
          mountPath: "/etc/smartrouter-certs"
      volumes:
      - name: "smartrouter-certs"
        secret:
          secretName: {{ sr_secret_name }}
      - name: "smartrouter-data"
{% if smartrouter_volume_size != "" %}
        persistentVolumeClaim:
          claimName: "{{ smartrouter_deployment_name }}-data"
{% else %}
        emptyDir: {}
{% endif %}
