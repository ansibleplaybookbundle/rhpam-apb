schema_version: 1

name: "rhpam-7/rhpam-rhel7-apb"
description: "Red Hat Business Central 7.5 OpenShift Ansible Playbook Bundle - Deprecated"
version: "7.5.1"
from: "openshift3/apb-base:v3.11"
labels:
  - name: "com.redhat.component"
    value: "rhpam-7-rhel7-apb"
  - name: "io.k8s.description"
    value: "Platform for running Red Hat Process Automation Manager"
  - name: "io.k8s.display-name"
    value: "Red Hat Process Automation Manager 7.5"
  - name: "io.openshift.tags"
    value: "javaee,eap,eap7,rhpam,rhpam7,apb"
  - name: "com.redhat.apb.spec"
    value: "LS0tCiMgQ29tbW9uIENyZWRlbnRpYWxzCl9hcGJfa2llX2FkbWluX3VzZXI6ICZfYXBiX2tpZV9hZG1pbl91c2VyCiAgbmFtZTogYXBiX2tpZV9hZG1pbl91c2VyCiAgdGl0bGU6IEFkbWluIFVzZXJuYW1lCiAgZGVzY3JpcHRpb246IEFkbWluIHVzZXIgbmFtZSBmb3IgQnVzaW5lc3MgQ2VudHJhbCBhbmQgUHJvY2VzcyBTZXJ2ZXIKICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IGFkbWluVXNlcgpfYXBiX2tpZV9hZG1pbl9wd2Q6ICZfYXBiX2tpZV9hZG1pbl9wd2QKICBuYW1lOiBhcGJfa2llX2FkbWluX3B3ZAogIHRpdGxlOiBBZG1pbiBQYXNzd29yZAogIGRlc2NyaXB0aW9uOiBBZG1pbiB1c2VyIHBhc3N3b3JkIGZvciBCdXNpbmVzcyBDZW50\
cmFsIGFuZCBQcm9jZXNzIFNlcnZlci4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAojIEltYWdlU3RyZWFtcwpfYXBiX2ltYWdlX3N0cmVhbV90YWc6ICZfYXBiX2ltYWdlX3N0cmVhbV90YWcKICBuYW1lOiBhcGJfaW1hZ2Vfc3RyZWFtX3RhZwogIHRpdGxlOiBJbWFnZSB2ZXJzaW9uCiAgZGVzY3JpcHRpb246IFRhZyB2ZXJzaW9uIG9mIHRoZSBSSFBBTSBJbWFnZVN0cmVhbSB0byB1c2UuIEl0IG11c3QgZXhpc3QgaW4gdGhlIG9wZW5zaGlmdCBuYW1lc3BhY2UuCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBzdHJpbmcKICBkZWZhdWx0OiAnNy41LjEnCiMgSEEKX2FwYl9yZXBsaWNhczogJl9hcGJfcmVwbGljYXMK\
ICB0aXRsZTogTnVtYmVyIG9mIHJlcGxpY2FzCiAgZGVzY3JpcHRpb246IE51bWJlciBvZiBSZXBsaWNhcyB0aGF0IHdpbGwgYmUgaW5pdGlhbGx5IGRlcGxveWVkCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBudW1iZXIKICBkZWZhdWx0OiAzCiMgTWF2ZW4KX2FwYl9tYXZlbl9taXJyb3JfdXJsOiAmX2FwYl9tYXZlbl9taXJyb3JfdXJsCiAgbmFtZTogYXBiX21hdmVuX21pcnJvcl91cmwKICB0aXRsZTogTWF2ZW4gTWlycm9yIFVSTAogIGRlc2NyaXB0aW9uOiBNYXZlbiBNaXJyb3IgdG8gdXNlIGJ5IEJ1c2luZXNzIENlbnRyYWwgYW5kIFByb2Nlc3MgU2VydmVyCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTWF2ZW4KX2FwYl9tYXZlbl9yZXBvX3VybDogJl9h\
cGJfbWF2ZW5fcmVwb191cmwKICBuYW1lOiBhcGJfbWF2ZW5fcmVwb191cmwKICB0aXRsZTogTWF2ZW4gUmVwb3NpdG9yeSBVUkwKICBkZXNjcmlwdGlvbjogRXh0ZXJuYWwgTWF2ZW4gUmVwb3NpdG9yeSBVUkwuIExlYXZlIGVtcHR5IHRvIHVzZSB0aGUgcmVwb3NpdG9yeSBwcm92aWRlZCBieSBCdXNpbmVzcyBDZW50cmFsCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTWF2ZW4KX2FwYl9tYXZlbl9yZXBvX2lkOiAmX2FwYl9tYXZlbl9yZXBvX2lkCiAgbmFtZTogYXBiX21hdmVuX3JlcG9faWQKICB0aXRsZTogTWF2ZW4gUmVwb3NpdG9yeSBJRAogIGRlc2NyaXB0aW9uOiBUaGUgSUQgdG8gdXNlIGZvciB0aGUgbWF2ZW4gcmVwb3NpdG9yeSwgaWYgc2V0LiBEZWZh\
dWx0IGlzIGdlbmVyYXRlZCByYW5kb21seS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBNYXZlbgpfYXBiX21hdmVuX3JlcG9fdXNlcjogJl9hcGJfbWF2ZW5fcmVwb191c2VyCiAgbmFtZTogYXBiX21hdmVuX3JlcG9fdXNlcgogIHRpdGxlOiBNYXZlbiBSZXBvc2l0b3J5IFVzZXJuYW1lCiAgZGVzY3JpcHRpb246IFVzZXJuYW1lIHRvIHVzZSB0byBpbnRlcmFjdCB3aXRoIHRoZSBleHRlcm5hbCBNYXZlbiByZXBvc2l0b3J5LgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IE1hdmVuCl9hcGJfbWF2ZW5fcmVwb19wd2Q6ICZfYXBiX21hdmVuX3JlcG9fcHdkCiAgbmFtZTogYXBiX21hdmVuX3JlcG9fcHdkCiAgdGl0bGU6IE1hdmVuIFJlcG9zaXRvcnkg\
UGFzc3dvcmQKICBkZXNjcmlwdGlvbjogUGFzc3dvcmQgdG8gdXNlIHRvIGludGVyYWN0IHdpdGggdGhlIGV4dGVybmFsIE1hdmVuIHJlcG9zaXRvcnkuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAogIGRpc3BsYXlfZ3JvdXA6IE1hdmVuCiMgR2VuZXJpYyBLZXlzdG9yZSBwYXJhbWV0ZXJzCl9hcGJfc2VjcmV0X25hbWU6ICZfYXBiX3NlY3JldF9uYW1lCiAgdGl0bGU6IFNlY3JldCBOYW1lCiAgZGVzY3JpcHRpb246IE5hbWUgb2YgdGhlIHNlY3JldCBjb250YWluaW5nIHRoZSBrZXlzdG9yZSB0byBiZSB1c2VkIGJ5IHRoZSBzZXJ2ZXIgdG8gYWNjZXB0IEhUVFBTIGNvbm5lY3Rpb25zLiBHZW5lcmF0ZWQgaWYgZW1wdHkKICB0eXBlOiBzdHJpbmcK\
X2FwYl9rZXlzdG9yZV9uYW1lOiAmX2FwYl9rZXlzdG9yZV9uYW1lCiAgdGl0bGU6IEtleXN0b3JlIEZpbGUgTmFtZQogIGRlc2NyaXB0aW9uOiBOYW1lIG9mIHRoZSBrZXlzdG9yZSBmaWxlIGNvbnRhaW5pbmcgdGhlIGNlcnRpZmljYXRlIHRvIGJlIHVzZWQgYnkgdGhlIHNlcnZlciB0byBhY2NlcHQgSFRUUFMgY29ubmVjdGlvbnMuIElmIGEgc2VjcmV0IG5hbWUgaXMgbm90IHByb3ZpZGVkLCB0aGUgc2VydmVyIGdlbmVyYXRlcyBhIHNlY3JldCB3aXRoIHRoaXMga2V5c3RvcmUgZmlsZSBuYW1lLgogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogc3RyaW5nCiAgZGVmYXVsdDoga2V5c3RvcmUuamtzCl9hcGJfa2V5c3RvcmVfYWxpYXM6ICZfYXBiX2tleXN0b3JlX2FsaWFzCiAg\
dGl0bGU6IEtleXN0b3JlIGNlcnRpZmljYXRlIGFsaWFzCiAgZGVzY3JpcHRpb246IE5hbWUgb2YgdGhlIGNlcnRpZmljYXRlIGFsaWFzIGluY2x1ZGVkIGluIHRoZSBrZXlzdG9yZSB0byBiZSB1c2VkIGJ5IHRoZSBzZXJ2ZXIgdG8gYWNjZXB0IEhUVFBTIGNvbm5lY3Rpb25zLiBJZiBhIHNlY3JldCBuYW1lIGlzIG5vdCBwcm92aWRlZCwgdGhlIHNlcnZlciBnZW5lcmF0ZXMgYSBzZXJldCB3aXRoIHRoaXMgYWxpYXMuCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBzdHJpbmcKICBkZWZhdWx0OiBqYm9zcwpfYXBiX2tleXN0b3JlX3B3ZDogJl9hcGJfa2V5c3RvcmVfcHdkCiAgdGl0bGU6IEtleXN0b3JlIGFuZCBDZXJ0aWZpY2F0ZSBQYXNzd29yZAogIGRlc2NyaXB0aW9uOiBQ\
YXNzd29yZCBwcm90ZWN0aW5nIGJvdGggdGhlIEtleXN0b3JlIGFuZCB0aGUgQ2VydGlmaWNhdGUuIEdlbmVyYXRlZCBpZiBlbXB0eQogIHR5cGU6IHN0cmluZwogIG1pbl9sZW5ndGg6IDYKICBkaXNwbGF5X3R5cGU6IHBhc3N3b3JkCl9hcGJfdm9sdW1lX3NpemU6ICZfYXBiX3ZvbHVtZV9zaXplCiAgdGl0bGU6IFdvcmtzcGFjZSBTdG9yYWdlIFNpemUKICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IHN0cmluZwogIHBhdHRlcm46ICJeWzAtOV0rW21NZ0d0VF1pPyQiCl9hcGJfaG9zdG5hbWU6ICZfYXBiX2hvc3RuYW1lCiAgdGl0bGU6IFB1YmxpYyBIb3N0bmFtZQogIHR5cGU6IHN0cmluZwojIEJ1c2luZXNzIENlbnRyYWwKX2FwYl9idXNpbmVzc2NlbnRyYWxfaG9zdG5hbWU6\
ICZfYXBiX2J1c2luZXNzY2VudHJhbF9ob3N0bmFtZQogIDw8OiAqX2FwYl9ob3N0bmFtZQogIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfaG9zdG5hbWUKICBkZXNjcmlwdGlvbjogUHVibGljIGhvc3RuYW1lIGZvciBCdXNpbmVzcyBDZW50cmFsLiBHZW5lcmF0ZWQgaWYgZW1wdHkKIyBPQ1AgRW5hYmxlbWVudApfYXBiX2NvbnRyb2xsZXJfZ2xvYmFsX2Rpc2NvdmVyeTogJl9hcGJfY29udHJvbGxlcl9nbG9iYWxfZGlzY292ZXJ5CiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfZ2xvYmFsX2Rpc2NvdmVyeQogIHRpdGxlOiBFbmFibGUgS0lFIFNlcnZlciBnbG9iYWwgZGlzY292ZXJ5CiAgZGVzY3JpcHRpb246IElmIHNldCB0byB0cnVlLCB0dXJucyBvbiBLSUUgc2VydmVyIGds\
b2JhbCBkaXNjb3ZlcnkgZmVhdHVyZS4gV2l0aCB0aGlzIGZlYXR1cmUsIEJ1c2luZXNzIENlbnRyYWwgaXMgYWJsZSB0byBkaXNjb3ZlciBhbGwgS0lFIHNlcnZlcnMgd2l0aCBPcGVuU2hpZnRTdGFydHVwU3RyYXRlZ3kgZGVwbG95ZWQgaW4gdGhlIHNhbWUgbmFtZXNwYWNlLiAgSWYgc2V0IHRvIGZhbHNlLCBCdXNpbmVzcyBDZW50cmFsIGNhbiBkaXNjb3ZlciBhIEtJRSBzZXJ2ZXIgb25seSBpZiBib3RoIGNvbXBvbmVudHMgYXJlIGRlcGxveWVkIHdpdGggdGhlIHNhbWUgYXBwbGljYXRpb24gbmFtZS4gKFNldHMgdGhlIG9yZy5raWUuc2VydmVyLmNvbnRyb2xsZXIub3BlbnNoaWZ0Lmdsb2JhbC5kaXNjb3ZlcnkuZW5hYmxlZCBzeXN0ZW0gcHJvcGVydHkpCiAgdHlwZTog\
Ym9vbGVhbgogIGRlZmF1bHQ6IGZhbHNlCiAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbApfYXBiX2NvbnRyb2xsZXJfcHJlZmVyX2tpZXNlcnZlcl9zdmM6ICZfYXBiX2NvbnRyb2xsZXJfcHJlZmVyX2tpZXNlcnZlcl9zdmMKICBuYW1lOiBhcGJfY29udHJvbGxlcl9wcmVmZXJfa2llc2VydmVyX3N2YwogIHRpdGxlOiBQcmVmZXIgUHJvY2VzcyBTZXJ2ZXIgT3BlblNoaWZ0IFNlcnZpY2UKICBkZXNjcmlwdGlvbjogRW5hYmxlcyBjb25uZWN0aW9uIHRvIFByb2Nlc3MgU2VydmVyIHZpYSBPcGVuU2hpZnQgaW50ZXJuYWwgU2VydmljZSBlbmRwb2ludCAoU2V0cyB0aGUgb3JnLmtpZS5zZXJ2ZXIuY29udHJvbGxlci5vcGVuc2hpZnQucHJlZmVyLmtpZXNlcnZlci5z\
ZXJ2aWNlIHN5c3RlbSBwcm9wZXJ0eSkKICB0eXBlOiBib29sZWFuCiAgZGVmYXVsdDogdHJ1ZQogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKX2FwYl9jb250cm9sbGVyX3RlbXBsYXRlX2NhY2hlX3R0bDogJl9hcGJfY29udHJvbGxlcl90ZW1wbGF0ZV9jYWNoZV90dGwKICBuYW1lOiBhcGJfY29udHJvbGxlcl90ZW1wbGF0ZV9jYWNoZV90dGwKICB0aXRsZTogUHJvY2VzcyBTZXJ2ZXIgVGVtcGxhdGUgQ2FjaGUgVFRMCiAgZGVzY3JpcHRpb246IFByb2Nlc3MgU2VydmVyIFRlbXBsYXRlIENhY2hlIFRUTCBpbiBtaWxsaXNlY29uZHMgKFNldHMgdGhlIG9yZy5raWUuc2VydmVyLmNvbnRyb2xsZXIudGVtcGxhdGUuY2FjaGUudHRsIHN5c3RlbSBwcm9wZXJ0eSkK\
ICB0eXBlOiBudW1iZXIKICBkZWZhdWx0OiA2MDAwMAogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKX2FwYl9idXNpbmVzc2NlbnRyYWxfc2VjcmV0X25hbWU6ICZfYXBiX2J1c2luZXNzY2VudHJhbF9zZWNyZXRfbmFtZQogIDw8OiAqX2FwYl9zZWNyZXRfbmFtZQogIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfc2VjcmV0X25hbWUKICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfbmFtZTogJl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX25hbWUKICA8PDogKl9hcGJfa2V5c3RvcmVfbmFtZQogIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfbmFtZQog\
IGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9hbGlhczogJl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX2FsaWFzCiAgPDw6ICpfYXBiX2tleXN0b3JlX2FsaWFzCiAgbmFtZTogYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9hbGlhcwogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9wd2Q6ICZfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9wd2QKICA8PDogKl9hcGJfa2V5c3RvcmVfcHdkCiAgbmFtZTogYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9wd2QKICBkaXNwbGF5X2dyb3Vw\
OiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKIyBHaXQgSG9va3MKX2FwYl9naXRfaG9va3NfZGlyOiAmX2FwYl9naXRfaG9va3NfZGlyCiAgbmFtZTogYXBiX2dpdF9ob29rc19kaXIKICB0aXRsZTogR2l0IGhvb2tzIGRpcmVjdG9yeQogIGRlc2NyaXB0aW9uOiBUaGUgZGlyZWN0b3J5IHRvIHVzZSBmb3IgZ2l0IGhvb2tzLCBpZiByZXF1aXJlZC4gZS5nLiAvb3B0L2tpZS9kYXRhL2dpdC9ob29rcwogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKX2FwYl9idXNpbmVzc2NlbnRyYWxfbWF2ZW5fcmVwb191c2VyOiAmX2FwYl9idXNpbmVzc2NlbnRyYWxfbWF2ZW5fcmVwb191c2VyCiAgbmFtZTogYXBiX2J1c2luZXNzY2VudHJhbF9t\
YXZlbl9yZXBvX3VzZXIKICB0aXRsZTogTWF2ZW4gUmVwb3NpdG9yeSBVc2VybmFtZQogIGRlc2NyaXB0aW9uOiBVc2VybmFtZSB0byB1c2UgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgQnVzaW5lc3MgQ2VudHJhbCBNYXZlbiByZXBvc2l0b3J5LgogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IG1hdmVuVXNlcgogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKX2FwYl9idXNpbmVzc2NlbnRyYWxfbWF2ZW5fcmVwb19wd2Q6ICZfYXBiX2J1c2luZXNzY2VudHJhbF9tYXZlbl9yZXBvX3B3ZAogIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfbWF2ZW5fcmVwb19wd2QKICB0aXRsZTogTWF2ZW4gUmVwb3NpdG9yeSBQYXNzd29yZAogIGRlc2NyaXB0aW9uOiBQYXNzd29yZCB0\
byB1c2UgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgQnVzaW5lc3MgQ2VudHJhbCBNYXZlbiByZXBvc2l0b3J5LiBHZW5lcmF0ZWQgaWYgZW1wdHkKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X3R5cGU6IHBhc3N3b3JkCiAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbAojIFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX21vZGU6ICZfYXBiX2tpZXNlcnZlcl9tb2RlCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9tb2RlCiAgdGl0bGU6IFByb2Nlc3MgU2VydmVyIE1vZGUKICBkZXNjcmlwdGlvbjogVGhlIEtJRSBzZXJ2ZXIgbW9kZS4gVmFsaWQgdmFsdWVzIGFyZSAnREVWRUxPUE1FTlQnIG9yICdQUk9EVUNUSU9OJy4gSW4gcHJvZHVjdGlvbiBtb2RlLCB5b3UgY2FuIG5v\
dCBkZXBsb3kgU05BUFNIT1QgdmVyc2lvbnMgb2YgYXJ0aWZhY3RzIG9uIHRoZSBLSUUgc2VydmVyIGFuZCBjYW4gbm90IGNoYW5nZSB0aGUgdmVyc2lvbiBvZiBhbiBhcnRpZmFjdCBpbiBhbiBleGlzdGluZyBjb250YWluZXIuIChTZXRzIHRoZSBvcmcua2llLnNlcnZlci5tb2RlIHN5c3RlbSBwcm9wZXJ0eSkuCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBlbnVtCiAgZW51bTogWydERVZFTE9QTUVOVCcsICdQUk9EVUNUSU9OJ10KICBkZWZhdWx0OiBERVZFTE9QTUVOVAogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX2ltYWdlX3N0cmVhbV9uYW1lOiAmX2FwYl9raWVzZXJ2ZXJfaW1hZ2Vfc3RyZWFtX25hbWUKICBuYW1lOiBhcGJfa2ll\
c2VydmVyX2ltYWdlX3N0cmVhbV9uYW1lCiAgdGl0bGU6IFByb2Nlc3MgU2VydmVyIEltYWdlIFN0cmVhbSBOYW1lCiAgZGVzY3JpcHRpb246IEltYWdlIFN0cmVhbSBOYW1lIHRvIHVzZSBmb3IgUHJvY2VzcyBTZXJ2ZXIuIElmIHlvdSBoYXZlIGdlbmVyYXRlZCBhIGN1c3RvbSBpbWFnZSAoZm9yIGV4YW1wbGUsIHRvIHByb3ZpZGUgYSBkYXRhYmFzZSBzZXJ2ZXIgZHJpdmVyKSwgeW91IGNhbiBjaGFuZ2UgdGhpcyBwYXJhbWV0ZXIgdG8gdXNlIGl0LgogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogc3RyaW5nCiAgZGVmYXVsdDogcmhwYW0ta2llc2VydmVyLXJoZWw4CiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfdXNlcjogJl9hcGJfa2ll\
c2VydmVyX3VzZXIKICBuYW1lOiBhcGJfa2llc2VydmVyX3VzZXIKICB0aXRsZTogUHJvY2VzcyBTZXJ2ZXIgVXNlcm5hbWUKICBkZXNjcmlwdGlvbjogVXNlciB0byBpbnRlcmFjdCB3aXRoIHRoZSBQcm9jZXNzIFNlcnZlciB1c2luZyB0aGUgUkVTVCBBUEkKICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IGV4ZWN1dGlvblVzZXIKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9wd2Q6ICZfYXBiX2tpZXNlcnZlcl9wd2QKICBuYW1lOiBhcGJfa2llc2VydmVyX3B3ZAogIHRpdGxlOiBQcm9jZXNzIFNlcnZlciBQYXNzd29yZAogIGRlc2NyaXB0aW9uOiBVc2VyIHBhc3N3b3JkIHRvIGludGVyYWN0IHdpdGggdGhl\
IFByb2Nlc3MgU2VydmVyIHVzaW5nIHRoZSBSRVNUIEFQSS4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX3NlY3JldF9uYW1lOiAmX2FwYl9raWVzZXJ2ZXJfc2VjcmV0X25hbWUKICA8PDogKl9hcGJfc2VjcmV0X25hbWUKICBuYW1lOiBhcGJfa2llc2VydmVyX3NlY3JldF9uYW1lCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfbmFtZTogJl9hcGJfa2llc2VydmVyX2tleXN0b3JlX25hbWUKICA8PDogKl9hcGJfa2V5c3RvcmVfbmFtZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfa2V5\
c3RvcmVfbmFtZQogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX2tleXN0b3JlX2FsaWFzOiAmX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfYWxpYXMKICA8PDogKl9hcGJfa2V5c3RvcmVfYWxpYXMKICBuYW1lOiBhcGJfa2llc2VydmVyX2tleXN0b3JlX2FsaWFzCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfcHdkOiAmX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfcHdkCiAgPDw6ICpfYXBiX2tleXN0b3JlX3B3ZAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfcHdkCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfaG9zdG5hbWU6ICZfYXBiX2tp\
ZXNlcnZlcl9ob3N0bmFtZQogIDw8OiAqX2FwYl9ob3N0bmFtZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfaG9zdG5hbWUKICBkZXNjcmlwdGlvbjogUHVibGljIGhvc3RuYW1lIGZvciBQcm9jZXNzIFNlcnZlci4gR2VuZXJhdGVkIGlmIGVtcHR5Cl9hcGJfa2llc2VydmVyX3N0YXJ0dXBfc3RyYXRlZ3k6ICZfYXBiX2tpZXNlcnZlcl9zdGFydHVwX3N0cmF0ZWd5CiAgbmFtZTogYXBiX2tpZXNlcnZlcl9zdGFydHVwX3N0cmF0ZWd5CiAgdGl0bGU6IFN0YXJ0dXAgU3RyYXRlZ3kKICBkZXNjcmlwdGlvbjogIldoZW4gc2V0IHRvIE9wZW5TaGlmdFN0YXJ0dXBTdHJhdGVneSwgYWxsb3dzIEtJRSBzZXJ2ZXIgdG8gc3RhcnQgdXAgaW5kZXBlbmRlbnRseSB1c2luZyBzaGFyZWQgc3Rh\
dGUgZnJvbSBPcGVuU2hpZnQgQVBJIHNlcnZpY2U7IHdoZW4gc2V0IHRvIENvbnRyb2xsZXJCYXNlZFN0YXJ0dXBTdHJhdGVneSwgYWxsb3dzIEtJRSBzZXJ2ZXIgdG8gc3RhcnQgdXAgYW5kIGZ1bmN0aW9uIHdpdGggY29uZmlndXJhdGlvbiBmcm9tIGEgY29udHJvbGxlci4gRGVmYXVsdDogT3BlblNoaWZ0U3RhcnR1cFN0cmF0ZWd5IgogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogZW51bQogIGVudW06IFsnT3BlblNoaWZ0U3RhcnR1cFN0cmF0ZWd5JywgJ0NvbnRyb2xsZXJCYXNlZFN0YXJ0dXBTdHJhdGVneSddCiAgZGVmYXVsdDogT3BlblNoaWZ0U3RhcnR1cFN0cmF0ZWd5CiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfcHJvbWV0aGV1\
c19leHRfZGlzYWJsZWQ6ICZfYXBiX2tpZXNlcnZlcl9wcm9tZXRoZXVzX2V4dF9kaXNhYmxlZAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfcHJvbWV0aGV1c19leHRfZGlzYWJsZWQKICB0aXRsZTogUHJvbWV0aGV1cyBTZXJ2ZXIgRXh0ZW5zaW9uIERpc2FibGVkCiAgZGVzY3JpcHRpb246IElmIHVuY2hlY2tlZCwgdGhlIHByb21ldGhldXMgc2VydmVyIGV4dGVuc2lvbiB3aWxsIGJlIGVuYWJsZWQuIChTZXRzIHRoZSBvcmcua2llLnByb21ldGhldXMuc2VydmVyLmV4dC5kaXNhYmxlZCBzeXN0ZW0gcHJvcGVydHkpCiAgcmVxdWlyZWQ6IGZhbHNlCiAgdHlwZTogYm9vbGVhbgogIGRlZmF1bHQ6IHRydWUKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNl\
cnZlcl9kYl90eXBlOiAmX2FwYl9raWVzZXJ2ZXJfZGJfdHlwZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfZGJfdHlwZQogIHRpdGxlOiBEYXRhYmFzZSBUeXBlCiAgZGVzY3JpcHRpb246IERhdGFiYXNlIFR5cGUgdG8gcGVyc2lzdCB0aGUgUHJvY2VzcyBTZXJ2ZXIgcnVudGltZSBpbmZvcm1hdGlvbi4gRE8gTk9UIFVTRSBIMiBmb3IgZGVwbG95aW5nIG1vcmUgdGhhbiAxIGluc3RhbmNlIG9mIFByb2Nlc3MgU2VydmVyLiBGb3IgSDIsIFBvc3RncmVTUUwsIGFuZCBNeVNRTCB0aGUgZGF0YWJhc2Ugc2VydmVyIHdpbGwgYmUgZGVwbG95ZWQgaW4gYSBwb2QuIFRvIHVzZSBhIGRhdGFiYXNlIHNlcnZlciB0aGF0IGlzIGRlcGxveWVkIGVsc2V3aGVyZSwgc2VsZWN0IEV4dGVybmFs\
LgogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogZW51bQogIGVudW06IFsgJ0gyJywgJ1Bvc3RncmVTUUwnLCAnTXlTUUwnLCAnRXh0ZXJuYWwnIF0KICBkZWZhdWx0OiBQb3N0Z3JlU1FMCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfZGJfc2l6ZTogJl9hcGJfa2llc2VydmVyX2RiX3NpemUKICA8PDogKl9hcGJfdm9sdW1lX3NpemUKICBuYW1lOiBhcGJfa2llc2VydmVyX2RiX3NpemUKICB0aXRsZTogRGF0YWJhc2UgU3RvcmFnZSBTaXplCiAgZGVzY3JpcHRpb246IFBlcnNpc3RlbnQgVm9sdW1lIENsYWltIHNpemUgdG8gY3JlYXRlIGZvciB0aGUgRGF0YWJhc2UuIEZvciBleGFtcGxlLCAxR2kuIElnbm9yZWQgaWYgRXh0ZXJuYWwgaXMg\
c2VsZWN0ZWQKICBkZWZhdWx0OiAxR2kKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kcml2ZXI6ICZfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kcml2ZXIKICBuYW1lOiBhcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RyaXZlcgogIHRpdGxlOiBEcml2ZXIgbmFtZQogIGRlc2NyaXB0aW9uOiBEYXRhYmFzZSBkcml2ZXIgdHlwZS4gUmVxdWlyZWQgZm9yIEV4dGVybmFsIGRhdGFiYXNlLiBGb3IgZXhhbXBsZSwgbXlzcWwgb3IgcG9zdGdyZXNxbAogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEV4dGVybmFsIERhdGFiYXNlIChvbmx5IGlmIERhdGFiYXNlIHR5cGUgaXMgRXh0ZXJuYWwpCl9hcGJfa2ll\
c2VydmVyX2V4dGVybmFsX2RiX2RpYWxlY3Q6ICZfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kaWFsZWN0CiAgbmFtZTogYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kaWFsZWN0CiAgdGl0bGU6IERpYWxlY3QgY2xhc3MKICBkZXNjcmlwdGlvbjogSGliZXJuYXRlIGRpYWxlY3QgY2xhc3MgdG8gdXNlLiBSZXF1aXJlZCBmb3IgRXh0ZXJuYWwgZGF0YWJhc2UuIEZvciBleGFtcGxlLCBvcmcuaGliZXJuYXRlLmRpYWxlY3QuTXlTUUw1N0RpYWxlY3QKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBFeHRlcm5hbCBEYXRhYmFzZSAob25seSBpZiBEYXRhYmFzZSB0eXBlIGlzIEV4dGVybmFsKQpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9ob3N0OiAmX2FwYl9r\
aWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfaG9zdAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfaG9zdAogIHRpdGxlOiBIb3N0CiAgZGVzY3JpcHRpb246IEV4dGVybmFsIGRhdGFiYXNlIHNlcnZlciBob3N0LiBSZXF1aXJlZCBmb3IgRXh0ZXJuYWwgZGF0YWJhc2UuIEZvciBleGFtcGxlLCAxMjcuMC4wLjEKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBFeHRlcm5hbCBEYXRhYmFzZSAob25seSBpZiBEYXRhYmFzZSB0eXBlIGlzIEV4dGVybmFsKQpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9wb3J0OiAmX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfcG9ydAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfcG9ydAogIHRpdGxlOiBQb3J0\
CiAgZGVzY3JpcHRpb246IEV4dGVybmFsIGRhdGFiYXNlIHNlcnZlciBwb3J0LiBSZXF1aXJlZCBmb3IgRXh0ZXJuYWwgZGF0YWJhc2UuIEZvciBleGFtcGxlLCAzMzA2CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogRXh0ZXJuYWwgRGF0YWJhc2UgKG9ubHkgaWYgRGF0YWJhc2UgdHlwZSBpcyBFeHRlcm5hbCkKX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfbmFtZTogJl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX25hbWUKICBuYW1lOiBhcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX25hbWUKICB0aXRsZTogRGF0YWJhc2UgTmFtZQogIGRlc2NyaXB0aW9uOiBFeHRlcm5hbCBEYXRhYmFzZSBuYW1lLiBSZXF1aXJlZCBmb3IgRXh0ZXJuYWwgZGF0YWJhc2UuIEZv\
ciBleGFtcGxlLCByaHBhbQogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEV4dGVybmFsIERhdGFiYXNlIChvbmx5IGlmIERhdGFiYXNlIHR5cGUgaXMgRXh0ZXJuYWwpCl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3VybDogJl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3VybAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfdXJsCiAgdGl0bGU6IERhdGFiYXNlIEpEQkMgVVJMCiAgZGVzY3JpcHRpb246IEV4dGVybmFsIGRhdGFiYXNlIHNlcnZlciBKREJDIFVSTC4gUmVxdWlyZWQgZm9yIEV4dGVybmFsIGRhdGFiYXNlLiBGb3IgZXhhbXBsZSwgamRiYzpteXNxbDoxMjcuMC4wLjE6MzMwNi9yaHBhbQogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlf\
Z3JvdXA6IEV4dGVybmFsIERhdGFiYXNlIChvbmx5IGlmIERhdGFiYXNlIHR5cGUgaXMgRXh0ZXJuYWwpCgojIEpNUyBlbnZzCl9hcGJfZW5hYmxlX2tpZXNlcnZlcl9qbXNfaW50ZWdyYXRpb246ICZfYXBiX2VuYWJsZV9raWVzZXJ2ZXJfam1zX2ludGVncmF0aW9uCiAgbmFtZTogYXBiX2VuYWJsZV9raWVzZXJ2ZXJfam1zX2ludGVncmF0aW9uCiAgdGl0bGU6IEVuYWJsZSBKTVMgaW50ZWdyYXRpb24KICBkZXNjcmlwdGlvbjogV2hlbiBzZXQgdG8gdHJ1ZSB3aWxsIGNvbmZpZ3VyZSB0aGUgS0lFIHNlcnZlciB3aXRoIEpNUyBpbnRlZ3JhdGlvbiwgaWYgbm8gY29uZmlndXJhdGlvbiBpcyBhZGRlZCwgdGhlIGRlZmF1bHQgd2lsbCBiZSB1c2VkLgogIHR5cGU6IGJvb2xlYW4K\
ICBkZWZhdWx0OiBmYWxzZQogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3I6ICZfYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3IKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19leGVjdXRvcgogIHRpdGxlOiBFbmFibGUgSk1TIEV4ZWN1dG9yCiAgZGVzY3JpcHRpb246IEVuYWJsZXMgdGhlIEpNUyBleGVjdXRvciwgdW5jaGVjayB0byBkaXNhYmxlIGl0LgogIHR5cGU6IGJvb2xlYW4KICBkZWZhdWx0OiB0cnVlCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9leGVjdXRvcjogJl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9leGVjdXRvcgogIG5hbWU6IGFwYl9r\
aWVzZXJ2ZXJfam1zX3F1ZXVlX2V4ZWN1dG9yCiAgdGl0bGU6IEtJRSBTZXJ2ZXIgSk1TIEV4ZWN1dG9yIFF1ZXVlCiAgZGVzY3JpcHRpb246IEpOREkgbmFtZSBvZiBleGVjdXRvciBxdWV1ZSBmb3IgSk1TLCBleGFtcGxlIHF1ZXVlL0NVU1RPTS5LSUUuU0VSVkVSLkVYRUNVVE9SLCBkZWZhdWx0IGlzIHF1ZXVlL0tJRS5TRVJWRVIuRVhFQ1VUT1IuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcl90cmFuc2FjdGVkOiAmX2FwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yX3RyYW5zYWN0ZWQKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19leGVjdXRvcl90cmFuc2FjdGVkCiAgdGl0bGU6IEtJ\
RSBTZXJ2ZXIgVHJhbnNhY3RlZCBFeGVjdXRvcgogIGRlc2NyaXB0aW9uOiBFbmFibGUgdHJhbnNhY3Rpb25zIGZvciBKTVMgZXhlY3V0b3IsIGRpc2FibGVkIGJ5IGRlZmF1bHQuCiAgdHlwZTogYm9vbGVhbgogIGRlZmF1bHQ6IGZhbHNlCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXF1ZXN0OiAmX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3JlcXVlc3QKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXF1ZXN0CiAgdGl0bGU6IEtJRSBTZXJ2ZXIgSk1TIFJlcXVlc3QgUXVldWUKICBkZXNjcmlwdGlvbjogSk5ESSBuYW1lIG9mIHJlcXVlc3QgcXVldWUgZm9yIEpNUywgZXhhbXBsZSBxdWV1ZS9DVVNU\
T00uS0lFLlNFUlZFUi5SRVFVRVNULCBkZWZhdWx0IGlzIHF1ZXVlL0tJRS5TRVJWRVIuUkVRVUVTVC4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3Jlc3BvbnNlOiAmX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3Jlc3BvbnNlCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVzcG9uc2UKICB0aXRsZTogS0lFIFNlcnZlciBKTVMgUmVzcG9uc2UgUXVldWUKICBkZXNjcmlwdGlvbjogSk5ESSBuYW1lIG9mIHJlc3BvbnNlIHF1ZXVlIGZvciBKTVMsIGV4YW1wbGUgcXVldWUvQ1VTVE9NLktJRS5TRVJWRVIuUkVTUE9OU0UsIGRlZmF1bHQgaXMgcXVldWUvS0lFLlNFUlZFUi5SRVNQ\
T05TRS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9zaWduYWw6ICZfYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX3NpZ25hbAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9zaWduYWwKICB0aXRsZTogRW5hYmxlIEtJRSBTZXJ2ZXIgSk1TIFNpZ25hbCBRdWV1ZQogIGRlc2NyaXB0aW9uOiBFbmFibGUgdGhlIFNpZ25hbCBjb25maWd1cmF0aW9uIHRocm91Z2ggSk1TLiBEZWZhdWx0IGlzIGZhbHNlLgogIHR5cGU6IGJvb2xlYW4KICBkZWZhdWx0OiBmYWxzZQogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfc2lnbmFsOiAm\
X2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3NpZ25hbAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3NpZ25hbAogIHRpdGxlOiBLSUUgU2VydmVyIEpNUyBTaWduYWwgUXVldWUKICBkZXNjcmlwdGlvbjogSk5ESSBuYW1lIG9mIHNpZ25hbCBxdWV1ZSBmb3IgSk1TLCBleGFtcGxlIHF1ZXVlL0NVU1RPTS5LSUUuU0VSVkVSLlNJR05BTCwgZGVmYXVsdCBpcyBxdWV1ZS9LSUUuU0VSVkVSLlNJR05BTC4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9hdWRpdDogJl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfYXVkaXQKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19lbmFibGVfYXVk\
aXQKICB0aXRsZTogRW5hYmxlIEtJRSBTZXJ2ZXIgSk1TIEF1ZGl0CiAgZGVzY3JpcHRpb246IEVuYWJsZSB0aGUgQXVkaXQgbG9nZ2luZyB0aHJvdWdoIEpNUy4gRGVmYXVsdCBpcyBmYWxzZS4KICB0eXBlOiBib29sZWFuCiAgZGVmYXVsdDogZmFsc2UKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2F1ZGl0OiAmX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2F1ZGl0CiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfYXVkaXQKICB0aXRsZTogS0lFIFNlcnZlciBKTVMgQXVkaXQgUXVldWUKICBkZXNjcmlwdGlvbjogSk5ESSBuYW1lIG9mIGF1ZGl0IGxvZ2dpbmcgcXVldWUgZm9yIEpNUywgZXhhbXBsZSBxdWV1\
ZS9DVVNUT00uS0lFLlNFUlZFUi5BVURJVCwgZGVmYXVsdCBpcyBxdWV1ZS9LSUUuU0VSVkVSLkFVRElULgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfYXVkaXRfdHJhbnNhY3RlZDogJl9hcGJfa2llc2VydmVyX2ptc19hdWRpdF90cmFuc2FjdGVkCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfYXVkaXRfdHJhbnNhY3RlZAogIHRpdGxlOiBLSUUgU2VydmVyIEpNUyBBdWRpdCBsb2dnZXIgdHJhbnNhY3RlZAogIGRlc2NyaXB0aW9uOiBEZXRlcm1pbmVzIGlmIEpNUyBzZXNzaW9uIGlzIHRyYW5zYWN0ZWQgb3Igbm90IC0gZGVmYXVsdCB0cnVlLgogIHR5cGU6IGJvb2xlYW4KICBkZWZhdWx0OiB0cnVl\
CiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc191c2VybmFtZTogJl9hcGJfa2llc2VydmVyX2ptc191c2VybmFtZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX3VzZXJuYW1lCiAgdGl0bGU6IEFNUSBVc2VybmFtZQogIGRlc2NyaXB0aW9uOiBBTVEgYnJva2VyIHVzZXJuYW1lIHRvIGNvbm5lY3QgZG8gdGhlIEFNUSwgZ2VuZXJhdGVkIGlmIGVtcHR5LgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfcGFzc3dvcmQ6ICZfYXBiX2tpZXNlcnZlcl9qbXNfcGFzc3dvcmQKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19wYXNzd29yZAogIHRpdGxlOiBBTVEgUGFz\
c3dvcmQKICBkZXNjcmlwdGlvbjogQU1RIGJyb2tlciBwYXNzd29yZCB0byBjb25uZWN0IGRvIHRoZSBBTVEsIGdlbmVyYXRlZCBpZiBlbXB0eS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X3R5cGU6IHBhc3N3b3JkCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19hbXFfcXVldWVzOiAmX2FwYl9raWVzZXJ2ZXJfam1zX2FtcV9xdWV1ZXMKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19hbXFfcXVldWVzCiAgdGl0bGU6IEFNUSBRdWV1ZXMKICBkZXNjcmlwdGlvbjogQU1RIGJyb2tlciBicm9rZXIgY29tbWEgc2VwYXJhdGVkIHF1ZXVlcywgaWYgc2V0IHRoZSBRVUVVRVMgbmFtZSB3aWxsIGJlIGlnbm9yZWQsIGlmIGVtcHR5IHRo\
ZSB2YWx1ZXMgZnJvbSBkZWZhdWx0IHF1ZXVlcyB3aWxsIGJlIHVzZWQuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCiMgQU1RIGtleXN0b3JlL3RydXRzdG9yZQpfYXBiX2FtcV9zZWNyZXRfbmFtZTogJl9hcGJfYW1xX3NlY3JldF9uYW1lCiAgbmFtZTogYXBiX2FtcV9zZWNyZXRfbmFtZQogIHRpdGxlOiBBTVEgU2VjcmV0IE5hbWUKICByZXF1aXJlZDogZmFsc2UKICBkZXNjcmlwdGlvbjogVGhlIG5hbWUgb2YgYSBzZWNyZXQgY29udGFpbmluZyBBTVEgU1NMIHJlbGF0ZWQgZmlsZXMuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfYW1xX3RydXN0c3RvcmVfbmFtZTogJl9hcGJfYW1x\
X3RydXN0c3RvcmVfbmFtZQogIG5hbWU6IGFwYl9hbXFfdHJ1c3RzdG9yZV9uYW1lCiAgdGl0bGU6IEFNUSBUcnVzdHN0b3JlIEZpbGUgTmFtZQogIGRlc2NyaXB0aW9uOiBUaGUgbmFtZSBvZiB0aGUgQU1RIFNTTCBUcnVzdCBTdG9yZSBmaWxlLiBJZiBhIHNlY3JldCBuYW1lIGlzIG5vdCBwcm92aWRlZCwgdGhlIHNlcnZlciBjbGllbnQgdHJ1c3RzdG9yZSB0aGF0IGltcG9ydHMgdGhlIGJyb2tlciBjZXJ0aWZpY2F0ZS4KICByZXF1aXJlZDogZmFsc2UKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9hbXFfdHJ1c3RzdG9yZV9wd2Q6ICZfYXBiX2FtcV90cnVzdHN0b3JlX3B3ZAogIG5hbWU6IGFwYl9hbXFfdHJ1c3RzdG9yZV9w\
d2QKICB0aXRsZTogQU1RIFRydXN0c3RvcmUgUGFzc3dvcmQKICBkZXNjcmlwdGlvbjogVGhlIHBhc3N3b3JkIGZvciB0aGUgQU1RIFRydXN0IFN0b3JlLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfdHlwZTogcGFzc3dvcmQKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9hbXFfa2V5c3RvcmVfbmFtZTogJl9hcGJfYW1xX2tleXN0b3JlX25hbWUKICBuYW1lOiBhcGJfYW1xX2tleXN0b3JlX25hbWUKICB0aXRsZTogS2V5c3RvcmUgRmlsZSBOYW1lCiAgZGVzY3JpcHRpb246IFRoZSBuYW1lIG9mIHRoZSBBTVEga2V5c3RvcmUgZmlsZS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9hbXFfa2V5c3RvcmVf\
cHdkOiAmX2FwYl9hbXFfa2V5c3RvcmVfcHdkCiAgbmFtZTogYXBiX2FtcV9rZXlzdG9yZV9wd2QKICB0aXRsZTogS2V5c3RvcmUgYW5kIENlcnRpZmljYXRlIFBhc3N3b3JkCiAgZGVzY3JpcHRpb246IFBhc3N3b3JkIHByb3RlY3RpbmcgYm90aCB0aGUgS2V5c3RvcmUgYW5kIHRoZSBDZXJ0aWZpY2F0ZS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X3R5cGU6IHBhc3N3b3JkCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCgoKIyBFeHRlcm5hbCBTZXJ2aWNlcyBJbnRlZ3JhdGlvbgpfYXBiX3N2YzogJl9hcGJfc3ZjCiAgdGl0bGU6IFNlcnZpY2UgbmFtZQogIGRlc2NyaXB0aW9uOiBOYW1lIG9mIHRoZSBTZXJ2aWNlCiAgdHlwZTogc3RyaW5nCl9hcGJfaG9zdDog\
Jl9hcGJfaG9zdAogIHRpdGxlOiBIb3N0CiAgZGVzY3JpcHRpb246IEhvc3QKICB0eXBlOiBzdHJpbmcKX2FwYl9wb3J0OiAmX2FwYl9wb3J0CiAgdGl0bGU6IEhvc3QgcG9ydAogIGRlc2NyaXB0aW9uOiBIb3N0IHBvcnQKICB0eXBlOiBzdHJpbmcKX2FwYl9wcm90b2NvbF90eXBlOiAmX2FwYl9wcm90b2NvbF90eXBlCiAgdGl0bGU6IEhvc3QgUHJvdG9jb2wKICBkZXNjcmlwdGlvbjogSG9zdCBwcm90b2NvbCAoaHR0cC9odHRwcykKICB0eXBlOiBlbnVtCiAgZW51bTogWyAnaHR0cCcsICdodHRwcycgXQojIFJvdXRlcgpfYXBiX3JvdXRlcl9zdmM6ICZfYXBiX3JvdXRlcl9zdmMKICA8PDogKl9hcGJfc3ZjCiAgbmFtZTogYXBiX3JvdXRlcl9zdmMKICBkaXNwbGF5X2dyb3Vw\
OiBSb3V0ZXIgSW50ZWdyYXRpb24KX2FwYl9yb3V0ZXJfaG9zdDogJl9hcGJfcm91dGVyX2hvc3QKICA8PDogKl9hcGJfaG9zdAogIG5hbWU6IGFwYl9yb3V0ZXJfaG9zdAogIGRpc3BsYXlfZ3JvdXA6IFJvdXRlciBJbnRlZ3JhdGlvbgpfYXBiX3JvdXRlcl9wb3J0OiAmX2FwYl9yb3V0ZXJfcG9ydAogIDw8OiAqX2FwYl9wb3J0CiAgbmFtZTogYXBiX3JvdXRlcl9wb3J0CiAgZGlzcGxheV9ncm91cDogUm91dGVyIEludGVncmF0aW9uCl9hcGJfcm91dGVyX3Byb3RvY29sOiAmX2FwYl9yb3V0ZXJfcHJvdG9jb2wKICA8PDogKl9hcGJfcHJvdG9jb2xfdHlwZQogIG5hbWU6IGFwYl9yb3V0ZXJfcHJvdG9jb2wKICBkaXNwbGF5X2dyb3VwOiBSb3V0ZXIgSW50ZWdyYXRpb24KIyBD\
b250cm9sbGVyCl9hcGJfY29udHJvbGxlcl9zdmM6ICZfYXBiX2NvbnRyb2xsZXJfc3ZjCiAgPDw6ICpfYXBiX3N2YwogIG5hbWU6IGFwYl9jb250cm9sbGVyX3N2YwogIGRpc3BsYXlfZ3JvdXA6IENvbnRyb2xsZXIgSW50ZWdyYXRpb24KX2FwYl9jb250cm9sbGVyX2hvc3Q6ICZfYXBiX2NvbnRyb2xsZXJfaG9zdAogIDw8OiAqX2FwYl9ob3N0CiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfaG9zdAogIGRpc3BsYXlfZ3JvdXA6IENvbnRyb2xsZXIgSW50ZWdyYXRpb24KX2FwYl9jb250cm9sbGVyX3BvcnQ6ICZfYXBiX2NvbnRyb2xsZXJfcG9ydAogIDw8OiAqX2FwYl9wb3J0CiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfcG9ydAogIGRpc3BsYXlfZ3JvdXA6IENvbnRyb2xsZXIgSW50\
ZWdyYXRpb24KX2FwYl9jb250cm9sbGVyX3Byb3RvY29sOiAmX2FwYl9jb250cm9sbGVyX3Byb3RvY29sCiAgPDw6ICpfYXBiX3Byb3RvY29sX3R5cGUKICBuYW1lOiBhcGJfY29udHJvbGxlcl9wcm90b2NvbAogIGRpc3BsYXlfZ3JvdXA6IENvbnRyb2xsZXIgSW50ZWdyYXRpb24KX2FwYl9jb250cm9sbGVyX3Rva2VuOiAmX2FwYl9jb250cm9sbGVyX3Rva2VuCiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfdG9rZW4KICB0aXRsZTogQ29udHJvbGxlciBBdXRoIFRva2VuCiAgZGVzY3JpcHRpb246IENvbnRyb2xsZXIgYXV0aGVudGljYXRpb24gVG9rZW4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBDb250cm9sbGVyIEludGVncmF0aW9uCl9hcGJfY29udHJvbGxlcl91\
c2VyOiAmX2FwYl9jb250cm9sbGVyX3VzZXIKICBuYW1lOiBhcGJfY29udHJvbGxlcl91c2VyCiAgdGl0bGU6IENvbnRyb2xsZXIgVXNlcm5hbWUKICBkZXNjcmlwdGlvbjogVXNlcm5hbWUgdG8gYWNjZXNzIHRoZSBDb250cm9sbGVyCiAgdHlwZTogc3RyaW5nCiAgZGVmYXVsdDogbW9uaXRvclVzZXIKX2FwYl9jb250cm9sbGVyX3B3ZDogJl9hcGJfY29udHJvbGxlcl9wd2QKICBuYW1lOiBhcGJfY29udHJvbGxlcl9wd2QKICB0aXRsZTogQ29udHJvbGxlciBQYXNzd29yZAogIGRlc2NyaXB0aW9uOiBVc2VyIHBhc3N3b3JkIHRvIGFjY2VzcyB0aGUgQ29udHJvbGxlci4gR2VuZXJhdGVkIGlmIGVtcHR5LgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfdHlwZTogcGFzc3dvcmQK\
IyBSSC1TU08KX2FwYl9zc29fdXJsOiAmX2FwYl9zc29fdXJsCiAgbmFtZTogYXBiX3Nzb191cmwKICB0aXRsZTogUkgtU1NPIFVSTAogIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIChTU08pIFVSTC4gTGVhdmUgZW1wdHkgdG8gYXZvaWQgdXNpbmcgU1NPLiBGb3IgZXhhbXBsZSwgaHR0cHM6Ly9yaHNzby5leGFtcGxlLmNvbS9hdXRoCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogUmVkIEhhdCAtIFNpbmdsZSBTaWduLU9uIChPcHRpb25hbCkKX2FwYl9zc29fcmVhbG06ICZfYXBiX3Nzb19yZWFsbQogIG5hbWU6IGFwYl9zc29fcmVhbG0KICB0aXRsZTogUkgtU1NPIFJlYWxtCiAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24g\
UmVhbG0gbmFtZS4gRm9yIGV4YW1wbGUsIHJocGFtCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogUmVkIEhhdCAtIFNpbmdsZSBTaWduLU9uIChPcHRpb25hbCkKX2FwYl9zc29fY2xpZW50OiAmX2FwYl9zc29fY2xpZW50CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogUmVkIEhhdCAtIFNpbmdsZSBTaWduLU9uIChPcHRpb25hbCkKX2FwYl9zc29fY2xpZW50X3NlY3JldDogJl9hcGJfc3NvX2NsaWVudF9zZWNyZXQKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X3R5cGU6IHBhc3N3b3JkCiAgZGlzcGxheV9ncm91cDogUmVkIEhhdCAtIFNpbmdsZSBTaWduLU9uIChPcHRpb25hbCkKX2FwYl9zc29fdXNlcjogJl9hcGJfc3NvX3VzZXIKICBuYW1lOiBhcGJf\
c3NvX3VzZXIKICB0aXRsZTogUkgtU1NPIEFkbWluIFVzZXIKICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBVc2VyIHRvIGJlIHVzZWQgdG8gY3JlYXRlIHRoZSBDbGllbnQgaWYgaXQgZG9lc24ndCBleGlzdC4gVGhlIHVzZXIgbXVzdCBiZSBhYmxlIHRvIGNyZWF0ZSBzZWNyZXRzIG9uIHRoZSBnaXZlbiByZWFsbS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBSZWQgSGF0IC0gU2luZ2xlIFNpZ24tT24gKE9wdGlvbmFsKQpfYXBiX3Nzb19wd2Q6ICZfYXBiX3Nzb19wd2QKICBuYW1lOiBhcGJfc3NvX3B3ZAogIHRpdGxlOiBSSC1TU08gQWRtaW4gUGFzc3dvcmQKICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBQYXNzd29y\
ZCB0byB1c2UgdG8gY3JlYXRlIHRoZSBDbGllbnQgaWYgaXQgZG9lc24ndCBleGlzdC4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X3R5cGU6IHBhc3N3b3JkCiAgZGlzcGxheV9ncm91cDogUmVkIEhhdCAtIFNpbmdsZSBTaWduLU9uIChPcHRpb25hbCkKX2FwYl9zc29fZGlzYWJsZV9zc2xfY2VydF92YWxpZGF0aW9uOiAmX2FwYl9zc29fZGlzYWJsZV9zc2xfY2VydF92YWxpZGF0aW9uCiAgbmFtZTogYXBiX3Nzb19kaXNhYmxlX3NzbF9jZXJ0X3ZhbGlkYXRpb24KICB0aXRsZTogUkgtU1NPIERpc2FibGUgU1NMIFZhbGlkYXRpb24KICBkZXNjcmlwdGlvbjogRGlzYWJsZSBTU0wgQ2VydGlmaWNhdGUgVmFsaWRhdGlvbiB3aGVuIGNvbm5lY3RpbmcgdG8gUkgtU1NPCiAgdHlw\
ZTogYm9vbGVhbgogIGRpc3BsYXlfZ3JvdXA6IFJlZCBIYXQgLSBTaW5nbGUgU2lnbi1PbiAoT3B0aW9uYWwpCl9hcGJfc3NvX3ByaW5jaXBhbF9hdHRyaWJ1dGU6ICZfYXBiX3Nzb19wcmluY2lwYWxfYXR0cmlidXRlCiAgbmFtZTogYXBiX3Nzb19wcmluY2lwYWxfYXR0cmlidXRlCiAgdGl0bGU6IFJILVNTTyBQcmluY2lwYWwgQXR0cmlidXRlCiAgZGVzY3JpcHRpb246IFByaW5jaXBhbCBhdHRyaWJ1dGUgdG8gdXNlIGFzIHVzZXJuYW1lCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogUmVkIEhhdCAtIFNpbmdsZSBTaWduLU9uIChPcHRpb25hbCkKIyBMREFQIEF1dGgKX2FwYl9hdXRoX2xkYXBfdXJsOiAmX2FwYl9hdXRoX2xkYXBfdXJsCiAgbmFtZTogYXBiX2F1\
dGhfbGRhcF91cmwKICB0aXRsZTogTERBUCBFbmRwb2ludAogIGRlc2NyaXB0aW9uOiBMREFQIEVuZHBvaW50IHRvIGNvbm5lY3QgZm9yIGF1dGhlbnRpY2F0aW9uLiBlLmcuICJsZGFwOi8vbXlsZGFwLmV4YW1wbGUuY29tIgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9iaW5kX2RuOiAmX2FwYl9hdXRoX2xkYXBfYmluZF9kbgogIG5hbWU6IGFwYl9hdXRoX2xkYXBfYmluZF9kbgogIHRpdGxlOiBMREFQIEJpbmQgRE4KICBkZXNjcmlwdGlvbjogQmluZCBETiB1c2VkIGZvciBhdXRoZW50aWNhdGlvbi4gZS5nLiAidWlkPWFkbWluLG91PXVzZXJzLG91PWV4bWFtcGxlLG91PWNvbSIKICB0eXBlOiBzdHJpbmcK\
ICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfYmluZF9jcmVkZW50aWFsOiAmX2FwYl9hdXRoX2xkYXBfYmluZF9jcmVkZW50aWFsCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9iaW5kX2NyZWRlbnRpYWwKICB0aXRsZTogTERBUCBCaW5kIENyZWRlbnRpYWxzCiAgZGVzY3JpcHRpb246IExEQVAgQ3JlZGVudGlhbHMgdXNlZCBmb3IgYXV0aGVudGljYXRpb24KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X3R5cGU6IHBhc3N3b3JkCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX2phYXNfc2VjdXJpdHlfZG9tYWluOiAmX2FwYl9hdXRoX2xkYXBfamFhc19zZWN1cml0eV9kb21haW4KICBuYW1lOiBhcGJfYXV0\
aF9sZGFwX2phYXNfc2VjdXJpdHlfZG9tYWluCiAgdGl0bGU6IExEQVAgSkFBUyBTZWN1cml0eSBEb21haW4KICBkZXNjcmlwdGlvbjogVGhlIEpNWCBPYmplY3ROYW1lIG9mIHRoZSBKYWFzU2VjdXJpdHlEb21haW4gdXNlZCB0byBkZWNyeXB0IHRoZSBwYXNzd29yZC4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfYmFzZV9jdHhfZG46ICZfYXBiX2F1dGhfbGRhcF9iYXNlX2N0eF9kbgogIG5hbWU6IGFwYl9hdXRoX2xkYXBfYmFzZV9jdHhfZG4KICB0aXRsZTogTERBUCBCYXNlIEROCiAgZGVzY3JpcHRpb246IExEQVAgQmFzZSBETiBvZiB0aGUgdG9wLWxldmVsIGNvbnRleHQgdG8gYmVnaW4gdGhlIHVzZXIg\
c2VhcmNoLiBlLmcuICJvdT11c2VycyxvdT1leGFtcGxlLG91PWNvbSIKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfYmFzZV9maWx0ZXI6ICZfYXBiX2F1dGhfbGRhcF9iYXNlX2ZpbHRlcgogIG5hbWU6IGFwYl9hdXRoX2xkYXBfYmFzZV9maWx0ZXIKICB0aXRsZTogTERBUCBCYXNlIFNlYXJjaCBmaWx0ZXIKICBkZXNjcmlwdGlvbjogTERBUCBzZWFyY2ggZmlsdGVyIHVzZWQgdG8gbG9jYXRlIHRoZSBjb250ZXh0IG9mIHRoZSB1c2VyIHRvIGF1dGhlbnRpY2F0ZS4gVGhlIGlucHV0IHVzZXJuYW1lIG9yIHVzZXJETiBvYnRhaW5lZCBmcm9tIHRoZSBsb2dpbiBtb2R1bGUgY2FsbGJhY2sgaXMgc3Vic3RpdHV0\
ZWQgaW50byB0aGUgZmlsdGVyIGFueXdoZXJlIGEgezB9IGV4cHJlc3Npb24gaXMgdXNlZC4gQSBjb21tb24gZXhhbXBsZSBmb3IgdGhlIHNlYXJjaCBmaWx0ZXIgaXMgKHVpZD17MH0pLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfc2NvcGU6ICZfYXBiX2F1dGhfbGRhcF9zZWFyY2hfc2NvcGUKICBuYW1lOiBhcGJfYXV0aF9sZGFwX3NlYXJjaF9zY29wZQogIHRpdGxlOiBMREFQIFNlYXJjaCBzY29wZQogIGRlc2NyaXB0aW9uOiBUaGUgc2VhcmNoIHNjb3BlIHRvIHVzZS4KICB0eXBlOiBlbnVtCiAgZW51bTogWyAnU1VCVFJFRV9TQ09QRScsICdPQkpFQ1RfU0NPUEUnLCAnT05FTEVWRUxfU0NP\
UEUnIF0KICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3RpbWVfbGltaXQ6ICZfYXBiX2F1dGhfbGRhcF9zZWFyY2hfdGltZV9saW1pdAogIG5hbWU6IGFwYl9hdXRoX2xkYXBfc2VhcmNoX3RpbWVfbGltaXQKICB0aXRsZTogTERBUCBTZWFyY2ggdGltZSBsaW1pdAogIGRlc2NyaXB0aW9uOiBUaGUgdGltZW91dCBpbiBtaWxsaXNlY29uZHMgZm9yIHVzZXIgb3Igcm9sZSBzZWFyY2hlcy4gZS5nLiAiMTAwMDAiCiAgdHlwZTogbnVtYmVyCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX2Rpc3Rpbmd1aXNoZWRfbmFtZV9hdHRyaWJ1dGU6ICZfYXBiX2F1dGhfbGRhcF9kaXN0aW5ndWlzaGVk\
X25hbWVfYXR0cmlidXRlCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9kaXN0aW5ndWlzaGVkX25hbWVfYXR0cmlidXRlCiAgdGl0bGU6IExEQVAgRE4gYXR0cmlidXRlCiAgZGVzY3JpcHRpb246IFRoZSBuYW1lIG9mIHRoZSBhdHRyaWJ1dGUgaW4gdGhlIHVzZXIgZW50cnkgdGhhdCBjb250YWlucyB0aGUgRE4gb2YgdGhlIHVzZXIuIFRoaXMgbWF5IGJlIG5lY2Vzc2FyeSBpZiB0aGUgRE4gb2YgdGhlIHVzZXIgaXRzZWxmIGNvbnRhaW5zIHNwZWNpYWwgY2hhcmFjdGVycywgYmFja3NsYXNoIGZvciBleGFtcGxlLCB0aGF0IHByZXZlbnQgY29ycmVjdCB1c2VyIG1hcHBpbmcuIElmIHRoZSBhdHRyaWJ1dGUgZG9lcyBub3QgZXhpc3QsIHRoZSBlbnRyeeKAmXMgRE4gaXMgdXNlZC4K\
ICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfcGFyc2VfdXNlcm5hbWU6ICZfYXBiX2F1dGhfbGRhcF9wYXJzZV91c2VybmFtZQogIG5hbWU6IGFwYl9hdXRoX2xkYXBfcGFyc2VfdXNlcm5hbWUKICB0aXRsZTogTERBUCBQYXJzZSB1c2VybmFtZQogIGRlc2NyaXB0aW9uOiBBIGZsYWcgaW5kaWNhdGluZyBpZiB0aGUgRE4gaXMgdG8gYmUgcGFyc2VkIGZvciB0aGUgdXNlcm5hbWUuIElmIHNldCB0byB0cnVlLCB0aGUgRE4gaXMgcGFyc2VkIGZvciB0aGUgdXNlcm5hbWUuIElmIHNldCB0byBmYWxzZSB0aGUgRE4gaXMgbm90IHBhcnNlZCBmb3IgdGhlIHVzZXJuYW1lLiBUaGlzIG9wdGlvbiBpcyB1c2VkIHRvZ2V0\
aGVyIHdpdGggdXNlcm5hbWVCZWdpblN0cmluZyBhbmQgdXNlcm5hbWVFbmRTdHJpbmcuCiAgdHlwZTogYm9vbGVhbgogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9iZWdpbl9zdHJpbmc6ICZfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9iZWdpbl9zdHJpbmcKICBuYW1lOiBhcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2JlZ2luX3N0cmluZwogIHRpdGxlOiBMREFQIFVzZXJuYW1lIGJlZ2luIHN0cmluZwogIGRlc2NyaXB0aW9uOiBEZWZpbmVzIHRoZSBTdHJpbmcgd2hpY2ggaXMgdG8gYmUgcmVtb3ZlZCBmcm9tIHRoZSBzdGFydCBvZiB0aGUgRE4gdG8gcmV2ZWFsIHRoZSB1c2VybmFtZS4gVGhpcyBvcHRpb24gaXMgdXNlZCB0\
b2dldGhlciB3aXRoIHVzZXJuYW1lRW5kU3RyaW5nIGFuZCBvbmx5IHRha2VuIGludG8gYWNjb3VudCBpZiBwYXJzZVVzZXJuYW1lIGlzIHNldCB0byB0cnVlLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9lbmRfc3RyaW5nOiAmX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfZW5kX3N0cmluZwogIG5hbWU6IGFwYl9hdXRoX2xkYXBfdXNlcm5hbWVfZW5kX3N0cmluZwogIHRpdGxlOiBMREFQIFVzZXJuYW1lIGVuZCBzdHJpbmcKICBkZXNjcmlwdGlvbjogRGVmaW5lcyB0aGUgU3RyaW5nIHdoaWNoIGlzIHRvIGJlIHJlbW92ZWQgZnJvbSB0aGUgZW5kIG9mIHRoZSBETiB0byByZXZlYWwgdGhlIHVz\
ZXJuYW1lLiBUaGlzIG9wdGlvbiBpcyB1c2VkIHRvZ2V0aGVyIHdpdGggdXNlcm5hbWVFbmRTdHJpbmcgYW5kIG9ubHkgdGFrZW4gaW50byBhY2NvdW50IGlmIHBhcnNlVXNlcm5hbWUgaXMgc2V0IHRvIHRydWUuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lkOiAmX2FwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaWQKICBuYW1lOiBhcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lkCiAgdGl0bGU6IExEQVAgUm9sZSBhdHRyaWJ1dGVJRAogIGRlc2NyaXB0aW9uOiBOYW1lIG9mIHRoZSBhdHRyaWJ1dGUgY29udGFpbmluZyB0aGUgdXNlciByb2xlcy4gZS5nLiAibWVtYmVy\
T2YiCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3JvbGVzX2N0eF9kbjogJl9hcGJfYXV0aF9sZGFwX3JvbGVzX2N0eF9kbgogIG5hbWU6IGFwYl9hdXRoX2xkYXBfcm9sZXNfY3R4X2RuCiAgdGl0bGU6IExEQVAgUm9sZXMgU2VhcmNoIEROCiAgZGVzY3JpcHRpb246IFRoZSBmaXhlZCBETiBvZiB0aGUgY29udGV4dCB0byBzZWFyY2ggZm9yIHVzZXIgcm9sZXMuIFRoaXMgaXMgbm90IHRoZSBETiB3aGVyZSB0aGUgYWN0dWFsIHJvbGVzIGFyZSwgYnV0IHRoZSBETiB3aGVyZSB0aGUgb2JqZWN0cyBjb250YWluaW5nIHRoZSB1c2VyIHJvbGVzIGFyZS4gRm9yIGV4YW1wbGUsIGluIGEgTWljcm9zb2Z0IEFjdGl2\
ZSBEaXJlY3Rvcnkgc2VydmVyLCB0aGlzIGlzIHRoZSBETiB3aGVyZSB0aGUgdXNlciBhY2NvdW50IGlzLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9yb2xlX2ZpbHRlcjogJl9hcGJfYXV0aF9sZGFwX3JvbGVfZmlsdGVyCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9yb2xlX2ZpbHRlcgogIHRpdGxlOiBMREFQIFJvbGUgc2VhcmNoIGZpbHRlcgogIGRlc2NyaXB0aW9uOiBBIHNlYXJjaCBmaWx0ZXIgdXNlZCB0byBsb2NhdGUgdGhlIHJvbGVzIGFzc29jaWF0ZWQgd2l0aCB0aGUgYXV0aGVudGljYXRlZCB1c2VyLiBUaGUgaW5wdXQgdXNlcm5hbWUgb3IgdXNlckROIG9idGFpbmVkIGZyb20gdGhlIGxvZ2luIG1v\
ZHVsZSBjYWxsYmFjayBpcyBzdWJzdGl0dXRlZCBpbnRvIHRoZSBmaWx0ZXIgYW55d2hlcmUgYSB7MH0gZXhwcmVzc2lvbiBpcyB1c2VkLiBUaGUgYXV0aGVudGljYXRlZCB1c2VyRE4gaXMgc3Vic3RpdHV0ZWQgaW50byB0aGUgZmlsdGVyIGFueXdoZXJlIGEgezF9IGlzIHVzZWQuIEFuIGV4YW1wbGUgc2VhcmNoIGZpbHRlciB0aGF0IG1hdGNoZXMgb24gdGhlIGlucHV0IHVzZXJuYW1lIGlzIChtZW1iZXI9ezB9KS4gQW4gYWx0ZXJuYXRpdmUgdGhhdCBtYXRjaGVzIG9uIHRoZSBhdXRoZW50aWNhdGVkIHVzZXJETiBpcyAobWVtYmVyPXsxfSkuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3JvbGVfcmVjdXJz\
aW9uOiAmX2FwYl9hdXRoX2xkYXBfcm9sZV9yZWN1cnNpb24KICBuYW1lOiBhcGJfYXV0aF9sZGFwX3JvbGVfcmVjdXJzaW9uCiAgdGl0bGU6IExEQVAgUm9sZSByZWN1cnNpb24KICBkZXNjcmlwdGlvbjogVGhlIG51bWJlciBvZiBsZXZlbHMgb2YgcmVjdXJzaW9uIHRoZSByb2xlIHNlYXJjaCB3aWxsIGdvIGJlbG93IGEgbWF0Y2hpbmcgY29udGV4dC4gRGlzYWJsZSByZWN1cnNpb24gYnkgc2V0dGluZyB0aGlzIHRvIDAuCiAgdHlwZTogbnVtYmVyCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX2RlZmF1bHRfcm9sZTogJl9hcGJfYXV0aF9sZGFwX2RlZmF1bHRfcm9sZQogIG5hbWU6IGFwYl9hdXRoX2xkYXBfZGVmYXVsdF9yb2xlCiAg\
dGl0bGU6IExEQVAgRGVmYXVsdCByb2xlCiAgZGVzY3JpcHRpb246IEEgcm9sZSBpbmNsdWRlZCBmb3IgYWxsIGF1dGhlbnRpY2F0ZWQgdXNlcnMKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfcm9sZV9uYW1lX2F0dHJpYnV0ZV9pZDogJl9hcGJfYXV0aF9sZGFwX3JvbGVfbmFtZV9hdHRyaWJ1dGVfaWQKICBuYW1lOiBhcGJfYXV0aF9sZGFwX3JvbGVfbmFtZV9hdHRyaWJ1dGVfaWQKICB0aXRsZTogTERBUCBSb2xlIG5hbWUgYXR0cmlidXRlIElECiAgZGVzY3JpcHRpb246IE5hbWUgb2YgdGhlIGF0dHJpYnV0ZSB3aXRoaW4gdGhlIHJvbGVDdHhETiBjb250ZXh0IHdoaWNoIGNvbnRhaW5zIHRoZSByb2xlIG5h\
bWUuIElmIHRoZSByb2xlQXR0cmlidXRlSXNETiBwcm9wZXJ0eSBpcyBzZXQgdG8gdHJ1ZSwgdGhpcyBwcm9wZXJ0eSBpcyB1c2VkIHRvIGZpbmQgdGhlIHJvbGUgb2JqZWN04oCZcyBuYW1lIGF0dHJpYnV0ZS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfcGFyc2Vfcm9sZV9uYW1lX2Zyb21fZG46ICZfYXBiX2F1dGhfbGRhcF9wYXJzZV9yb2xlX25hbWVfZnJvbV9kbgogIG5hbWU6IGFwYl9hdXRoX2xkYXBfcGFyc2Vfcm9sZV9uYW1lX2Zyb21fZG4KICB0aXRsZTogTERBUCBSb2xlIEROIGNvbnRhaW5zIHJvbGVOYW1lQXR0cmlidXRlSUQKICBkZXNjcmlwdGlvbjogQSBmbGFnIGluZGljYXRpbmcgaWYgdGhl\
IEROIHJldHVybmVkIGJ5IGEgcXVlcnkgY29udGFpbnMgdGhlIHJvbGVOYW1lQXR0cmlidXRlSUQuIElmIHNldCB0byB0cnVlLCB0aGUgRE4gaXMgY2hlY2tlZCBmb3IgdGhlIHJvbGVOYW1lQXR0cmlidXRlSUQuIElmIHNldCB0byBmYWxzZSwgdGhlIEROIGlzIG5vdCBjaGVja2VkIGZvciB0aGUgcm9sZU5hbWVBdHRyaWJ1dGVJRC4gVGhpcyBmbGFnIGNhbiBpbXByb3ZlIHRoZSBwZXJmb3JtYW5jZSBvZiBMREFQIHF1ZXJpZXMuCiAgdHlwZTogYm9vbGVhbgogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pc19kbjogJl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lzX2RuCiAgbmFtZTogYXBiX2F1dGhf\
bGRhcF9yb2xlX2F0dHJpYnV0ZV9pc19kbgogIHRpdGxlOiBMREFQIFJvbGUgQXR0cmlidXRlIElEIGlzIEROCiAgZGVzY3JpcHRpb246IFdoZXRoZXIgb3Igbm90IHRoZSByb2xlQXR0cmlidXRlSUQgY29udGFpbnMgdGhlIGZ1bGx5LXF1YWxpZmllZCBETiBvZiBhIHJvbGUgb2JqZWN0LiBJZiBmYWxzZSwgdGhlIHJvbGUgbmFtZSBpcyB0YWtlbiBmcm9tIHRoZSB2YWx1ZSBvZiB0aGUgcm9sZU5hbWVBdHRyaWJ1dGVJZCBhdHRyaWJ1dGUgb2YgdGhlIGNvbnRleHQgbmFtZS4gQ2VydGFpbiBkaXJlY3Rvcnkgc2NoZW1hcywgc3VjaCBhcyBNaWNyb3NvZnQgQWN0aXZlIERpcmVjdG9yeSwgcmVxdWlyZSB0aGlzIGF0dHJpYnV0ZSB0byBiZSBzZXQgdG8gdHJ1ZS4KICB0eXBlOiBi\
b29sZWFuCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3JlZmVycmFsX3VzZXJfYXR0cmlidXRlX2lkX3RvX2NoZWNrOiAmX2FwYl9hdXRoX2xkYXBfcmVmZXJyYWxfdXNlcl9hdHRyaWJ1dGVfaWRfdG9fY2hlY2sKICBuYW1lOiBhcGJfYXV0aF9sZGFwX3JlZmVycmFsX3VzZXJfYXR0cmlidXRlX2lkX3RvX2NoZWNrCiAgdGl0bGU6IExEQVAgUmVmZXJyYWwgdXNlciBhdHRyaWJ1dGUgSUQKICBkZXNjcmlwdGlvbjogSWYgeW91IGFyZSBub3QgdXNpbmcgcmVmZXJyYWxzLCB0aGlzIG9wdGlvbiBjYW4gYmUgaWdub3JlZC4gV2hlbiB1c2luZyByZWZlcnJhbHMsIHRoaXMgb3B0aW9uIGRlbm90ZXMgdGhlIGF0dHJpYnV0ZSBuYW1lIHdoaWNo\
IGNvbnRhaW5zIHVzZXJzIGRlZmluZWQgZm9yIGEgY2VydGFpbiByb2xlLCBmb3IgZXhhbXBsZSBtZW1iZXIsIGlmIHRoZSByb2xlIG9iamVjdCBpcyBpbnNpZGUgdGhlIHJlZmVycmFsLiBVc2VycyBhcmUgY2hlY2tlZCBhZ2FpbnN0IHRoZSBjb250ZW50IG9mIHRoaXMgYXR0cmlidXRlIG5hbWUuIElmIHRoaXMgb3B0aW9uIGlzIG5vdCBzZXQsIHRoZSBjaGVjayB3aWxsIGFsd2F5cyBmYWlsLCBzbyByb2xlIG9iamVjdHMgY2Fubm90IGJlIHN0b3JlZCBpbiBhIHJlZmVycmFsIHRyZWUuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9yb2xlX21hcHBlcl9yb2xlc19wcm9wZXJ0aWVzOiAmX2FwYl9hdXRoX3JvbGVfbWFw\
cGVyX3JvbGVzX3Byb3BlcnRpZXMKICBuYW1lOiBhcGJfYXV0aF9yb2xlX21hcHBlcl9yb2xlc19wcm9wZXJ0aWVzCiAgdGl0bGU6IFJvbGVNYXBwaW5nIHJvbGVzUHJvcGVydGllcyBmaWxlIHBhdGgKICBkZXNjcmlwdGlvbjogV2hlbiBwcmVzZW50LCB0aGUgUm9sZU1hcHBpbmcgTG9naW4gTW9kdWxlIHdpbGwgYmUgY29uZmlndXJlZCB0byB1c2UgdGhlIHByb3ZpZGVkIGZpbGUuIFRoaXMgcHJvcGVydHkgZGVmaW5lcyB0aGUgZnVsbHktcXVhbGlmaWVkIGZpbGUgcGF0aCBhbmQgbmFtZSBvZiBhIHByb3BlcnRpZXMgZmlsZSBvciByZXNvdXJjZSB3aGljaCBtYXBzIHJvbGVzIHRvIHJlcGxhY2VtZW50IHJvbGVzLiBUaGUgZm9ybWF0IGlzIG9yaWdpbmFsX3JvbGU9cm9sZTEs\
cm9sZTIscm9sZTMKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBSb2xlTWFwcGluZyAoT3B0aW9uYWwpCl9hcGJfYXV0aF9yb2xlX21hcHBlcl9yZXBsYWNlX3JvbGU6ICZfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcmVwbGFjZV9yb2xlCiAgbmFtZTogYXBiX2F1dGhfcm9sZV9tYXBwZXJfcmVwbGFjZV9yb2xlCiAgdGl0bGU6IFJvbGVNYXBwaW5nIHJlcGxhY2VSb2xlIHByb3BlcnR5CiAgZGVzY3JpcHRpb246IFdoZXRoZXIgdG8gYWRkIHRvIHRoZSBjdXJyZW50IHJvbGVzLCBvciByZXBsYWNlIHRoZSBjdXJyZW50IHJvbGVzIHdpdGggdGhlIG1hcHBlZCBvbmVzLiBSZXBsYWNlcyBpZiBzZXQgdG8gdHJ1ZS4KICB0eXBlOiBib29sZWFuCiAgZGlzcGxheV9ncm91cDog\
Um9sZU1hcHBpbmcgKE9wdGlvbmFsKQojIFNtYXJ0IFJvdXRlciBQcm9wcGVydGllcwpfYXBiX3NtYXJ0cm91dGVyX3Byb3RvY29sOiAmX2FwYl9zbWFydHJvdXRlcl9wcm90b2NvbAogIDw8OiAqX2FwYl9wcm90b2NvbF90eXBlCiAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX3Byb3RvY29sCiAgZGVmYXVsdDogaHR0cAogIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgpfYXBiX3NtYXJ0cm91dGVyX3VzZV9leHRlcm5hbF9yb3V0ZTogJl9hcGJfc21hcnRyb3V0ZXJfdXNlX2V4dGVybmFsX3JvdXRlCiAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX3VzZV9leHRlcm5hbF9yb3V0ZQogIHR5cGU6IGJvb2xlYW4KICBkZWZhdWx0OiBmYWxzZQogIGRlc2NyaXB0aW9uOiBJZiBlbmFibGVk\
LCBCdXNpbmVzZXMgQ2VudHJhbCB3aWxsIHVzZSB0aGUgZXh0ZXJuYWwgc21hcnRyb3V0ZXIgcm91dGUgdG8gY29tbXVuaWNhdGUgd2l0aC4gTm90ZSB0aGF0LCB2YWxpZCBTU0wgY2VydGlmaWNhdGVzIHNob3VsZCBiZSB1c2VkLgogIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgoKIyBBUEIgU3BlYyB2ZXJzaW9uCnZlcnNpb246IDEuMApuYW1lOiByaHBhbS1hcGIKZGVzY3JpcHRpb246IFJlZCBIYXQgUHJvY2VzcyBBdXRvbWF0aW9uIE1hbmFnZXIgKEFQQikgLSBEZXByZWNhdGVkCmJpbmRhYmxlOiBmYWxzZQphc3luYzogdW5zdXBwb3J0ZWQKbWV0YWRhdGE6CiAgZGlzcGxheU5hbWU6IFJlZCBIYXQgUHJvY2VzcyBBdXRvbWF0aW9uIE1hbmFnZXIgKEFQQikKICBkb2N1\
bWVudGF0aW9uVXJsOiBodHRwczovL2RldmVsb3BlcnMucmVkaGF0LmNvbS9wcm9kdWN0cy9icG1zdWl0ZS9kb2NzLWFuZC1hcGlzLwogIGxvbmdEZXNjcmlwdGlvbjoKICAgIEFzIGEgc3lzdGVtIGVuZ2luZWVyLCB5b3UgY2FuIGRlcGxveSBhIFJlZCBIYXQgUHJvY2VzcyBBdXRvbWF0aW9uIE1hbmFnZXIKICAgIGVudmlyb25tZW50IG9uIFJlZCBIYXQgT3BlblNoaWZ0IENvbnRhaW5lciBQbGF0Zm9ybSB0byBwcm92aWRlIGFuIGluZnJhc3RydWN0dXJlCiAgICB0byBkZXZlbG9wIG9yIGV4ZWN1dGUgcHJvY2Vzc2VzIGFuZCBvdGhlciBidXNpbmVzcyBhc3NldHMuCiAgICBGb3IgdXNlIHdpdGggUmVkIEhhdCBPcGVuU2hpZnQgQ29udGFpbmVyIFBsYXRmb3JtIHZlcnNpb24g\
My4xMS4gRGVwcmVjYXRlZCBzaW5jZSBSZWQgSGF0IFByb2Nlc3MgQXV0b21hdGlvbiBNYW5hZ2VyIHZlcnNpb24gNy41OyBjb25zaWRlciB1c2luZyB0aGUgUmVkIEhhdCBCdXNpbmVzcyBBdXRvbWF0aW9uIE9wZXJhdG9yLgoKICAgIE1ha2Ugc3VyZSB0aGUgcmVxdWlyZWQgSW1hZ2VTdHJlYW1UYWdzIGV4aXN0IGluIHRoZSBvcGVuc2hpZnQgcHJvamVjdC4gU2VlIGJlbG93IGZvciB0aGUgcmVxdWlyZWQgaW1hZ2VzCiAgY29uc29sZS5vcGVuc2hpZnQuaW8vaWNvbkNsYXNzOiBpY29uLXByb2Nlc3NzZXJ2ZXIKICBwcm92aWRlckRpc3BsYXlOYW1lOiAiUmVkIEhhdCwgSW5jLiIKICBzZXJ2aWNlTmFtZTogcmhwYW0KICBkZXBlbmRlbmNpZXM6CiAgICAtICdyZWdpc3RyeS5y\
ZWRoYXQuaW8vcmhwYW0tNy9yaHBhbS1raWVzZXJ2ZXItcmhlbDgnCiAgICAtICdyZWdpc3RyeS5yZWRoYXQuaW8vcmhwYW0tNy9yaHBhbS1idXNpbmVzc2NlbnRyYWwtcmhlbDgnCiAgICAtICdyZWdpc3RyeS5yZWRoYXQuaW8vcmhwYW0tNy9yaHBhbS1jb250cm9sbGVyLXJoZWw4JwogICAgLSAncmVnaXN0cnkucmVkaGF0LmlvL3JocGFtLTcvcmhwYW0tc21hcnRyb3V0ZXItcmhlbDgnCiAgICAtICdyZWdpc3RyeS5yZWRoYXQuaW8vcmhwYW0tNy9yaHBhbS1idXNpbmVzc2NlbnRyYWwtbW9uaXRvcmluZy1yaGVsOCcKICAgIC0gJ3JlZ2lzdHJ5LnJlZGhhdC5pby9yaHNjbC9wb3N0Z3Jlc3FsLTEwLXJoZWw3JwogICAgLSAncmVnaXN0cnkucmVkaGF0LmlvL3Joc2NsL215c3Fs\
LTU3LXJoZWw3Jwp0YWdzOgogIC0gamJwbQogIC0gcmhwYW0KICAtIHByb2Nlc3NzZXJ2ZXIKICAtIGF1dGhvcmluZwogIC0gamJvc3MKcGxhbnM6CiAgLSBuYW1lOiB0cmlhbAogICAgZGVzY3JpcHRpb246CiAgICAgIERlcGxveSBhbiBlcGhlbWVyYWwgZW52aXJvbm1lbnQgZm9yIHRlc3RpbmcgQnVzaW5lc3MgQ2VudHJhbCBhbmQgUHJvY2VzcyBTZXJ2ZXIuIEEgZGVmYXVsdCBgYWRtaW5Vc2VyYCB1c2VyIHdpbGwgYmUgY3JlYXRlZCB3aXRoIHRoZSBgUmVkSGF0YCBwYXNzd29yZC4KICAgICAgSW4gY2FzZSB0aGUgZ2VuZXJhdGVkIHJvdXRlcyBuZWVkIHRvIGJlIG92ZXJyaWRkZW4sIGl0IGlzIHBvc3NpYmxlIHRvIHNldCBjdXN0b20gcm91dGVzIGZvciBib3RoIGFwcGxp\
Y2F0aW9ucy4KICAgIGZyZWU6IHRydWUKICAgIG1ldGFkYXRhOgogICAgICBkaXNwbGF5TmFtZTogRXZhbHVhdGlvbiBFbnZpcm9ubWVudAogICAgcGFyYW1ldGVyczoKICAgICAgLSA8PDogKl9hcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lCiAgICAgICAgdGl0bGU6IEJ1c2luZXNzIENlbnRyYWwgUHVibGljIEhvc3RuYW1lCiAgICAgIC0gPDw6ICpfYXBiX2tpZXNlcnZlcl9ob3N0bmFtZQogICAgICAgIHRpdGxlOiBQcm9jZXNzIFNlcnZlciBQdWJsaWMgSG9zdG5hbWUKICAgICAgLSAqX2FwYl9pbWFnZV9zdHJlYW1fdGFnCgogIC0gbmFtZTogYXV0aG9yaW5nCiAgICBkZXNjcmlwdGlvbjoKICAgICAgQW4gZW52aXJvbm1lbnQgZm9yIGNyZWF0aW5nIGFuZCBtb2RpZnlp\
bmcgcHJvY2Vzc2VzIHVzaW5nIEJ1c2luZXNzIENlbnRyYWwuIEl0IGNvbnNpc3RzIG9mCiAgICAgIHBvZHMgdGhhdCBwcm92aWRlIEJ1c2luZXNzIENlbnRyYWwgZm9yIHRoZSBhdXRob3Jpbmcgd29yayBhbmQgYSBQcm9jZXNzIFNlcnZlciBmb3IgdGVzdCBleGVjdXRpb24gb2YgdGhlIHByb2Nlc3Nlcy4KICAgIGZyZWU6IHRydWUKICAgIG1ldGFkYXRhOgogICAgICBkaXNwbGF5TmFtZTogQXV0aG9yaW5nCiAgICBwYXJhbWV0ZXJzOgogICAgICAjIENvbW1vbiBDcmVkZW50aWFscwogICAgICAtICpfYXBiX2tpZV9hZG1pbl91c2VyCiAgICAgIC0gKl9hcGJfa2llX2FkbWluX3B3ZAogICAgICAtICpfYXBiX2ltYWdlX3N0cmVhbV90YWcKCiAgICAgICMgQnVzaW5lc3MgQ2Vu\
dHJhbAogICAgICAtIDw8OiAqX2FwYl92b2x1bWVfc2l6ZQogICAgICAgIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfdm9sdW1lX3NpemUKICAgICAgICBkZXNjcmlwdGlvbjogU3BlY2lmeSB0aGUgUGVyc2lzdGVudCBWb2x1bWUgQ2xhaW0gc2l6ZSB0byBjcmVhdGUgZm9yIHN0b3JpbmcgdGhlIFdvcmtzcGFjZS4gRm9yIGV4YW1wbGUsIDFHaQogICAgICAgIGRlZmF1bHQ6IDFHaQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgIyBLZXlzdG9yZSBhbmQgU2VjcmV0CiAgICAgIC0gPDw6ICpfYXBiX2J1c2luZXNzY2VudHJhbF9zZWNyZXRfbmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgLSA8PDog\
Kl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX25hbWUKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCiAgICAgIC0gPDw6ICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9hbGlhcwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgLSA8PDogKl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX3B3ZAogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgIyBIb3N0bmFtZQogICAgICAtIDw8OiAqX2FwYl9idXNpbmVzc2NlbnRyYWxfaG9zdG5hbWUKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCiAgICAgICMgT0NQIEVuYWJsZW1lbnQKICAgICAgLSAq\
X2FwYl9jb250cm9sbGVyX2dsb2JhbF9kaXNjb3ZlcnkKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3ByZWZlcl9raWVzZXJ2ZXJfc3ZjCiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl90ZW1wbGF0ZV9jYWNoZV90dGwKICAgICAgIyBHaXQgaG9va3MKICAgICAgLSAqX2FwYl9naXRfaG9va3NfZGlyCiAgICAgICMgT3RoZXIgdXNlcnMKICAgICAgLSA8PDogKl9hcGJfY29udHJvbGxlcl91c2VyCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbAogICAgICAtIDw8OiAqX2FwYl9jb250cm9sbGVyX3B3ZAogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxfbWF2ZW5fcmVwb191c2VyCiAg\
ICAgIC0gKl9hcGJfYnVzaW5lc3NjZW50cmFsX21hdmVuX3JlcG9fcHdkCgogICAgICAjIFByb2Nlc3MgU2VydmVyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX21vZGUKCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2RiX3R5cGUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZGJfc2l6ZQoKICAgICAgIyBLZXlzdG9yZSBhbmQgU2VjcmV0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3NlY3JldF9uYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2tleXN0b3JlX25hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfYWxpYXMKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfcHdkCgogICAgICAtICpfYXBiX2tpZXNlcnZlcl91c2VyCiAgICAgIC0gKl9hcGJf\
a2llc2VydmVyX3B3ZAogICAgICAtIDw8OiAqX2FwYl9raWVzZXJ2ZXJfaG9zdG5hbWUKICAgICAgICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9zdGFydHVwX3N0cmF0ZWd5CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ltYWdlX3N0cmVhbV9uYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3Byb21ldGhldXNfZXh0X2Rpc2FibGVkCgogICAgICAjIEV4dGVybmFsIERhdGFiYXNlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RyaXZlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kaWFsZWN0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2hvc3QKICAgICAgLSAq\
X2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfcG9ydAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9uYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3VybAoKICAgICAgIyBKTVMKICAgICAgLSAqX2FwYl9lbmFibGVfa2llc2VydmVyX2ptc19pbnRlZ3JhdGlvbgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3IKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2V4ZWN1dG9yCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcl90cmFuc2FjdGVkCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXF1ZXN0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXNwb25z\
ZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX3NpZ25hbAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfc2lnbmFsCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfYXVkaXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2F1ZGl0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19hdWRpdF90cmFuc2FjdGVkCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc191c2VybmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcGFzc3dvcmQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2FtcV9xdWV1ZXMKICAgICAgLSAqX2FwYl9hbXFfc2VjcmV0X25hbWUKICAgICAgLSAqX2FwYl9hbXFfdHJ1c3RzdG9yZV9u\
YW1lCiAgICAgIC0gKl9hcGJfYW1xX3RydXN0c3RvcmVfcHdkCiAgICAgIC0gKl9hcGJfYW1xX2tleXN0b3JlX25hbWUKICAgICAgLSAqX2FwYl9hbXFfa2V5c3RvcmVfcHdkCgogICAgICAjIE1hdmVuCiAgICAgIC0gKl9hcGJfbWF2ZW5fbWlycm9yX3VybAogICAgICAtICpfYXBiX21hdmVuX3JlcG9fdXJsCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb19pZAogICAgICAtICpfYXBiX21hdmVuX3JlcG9fdXNlcgogICAgICAtICpfYXBiX21hdmVuX3JlcG9fcHdkCgogICAgICAjIFJIIC0gU1NPCiAgICAgIC0gKl9hcGJfc3NvX3VybAogICAgICAtICpfYXBiX3Nzb19yZWFsbQogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50CiAgICAgICAgbmFtZTogYXBiX3Nzb19idXNpbmVz\
c2NlbnRyYWxfY2xpZW50CiAgICAgICAgdGl0bGU6IFJILVNTTyBCdXNpbmVzcyBDZW50cmFsIC0gQ2xpZW50CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IG5hbWUgZm9yIEJ1c2luZXNzIENlbnRyYWwuIElmIHRoZSBzZWNyZXQsIHVzZXIgYW5kIHBhc3N3b3JkIGFyZSBwcm92aWRlZCBpdCB3aWxsIGJlIGNyZWF0ZWQuIEZvciBleGFtcGxlLCBidXNpbmVzc2NlbnRyYWwKICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudF9zZWNyZXQKICAgICAgICBuYW1lOiBhcGJfc3NvX2J1c2luZXNzY2VudHJhbF9jbGllbnRfc2VjcmV0CiAgICAgICAgdGl0bGU6IFJILVNTTyBCdXNpbmVzcyBDZW50cmFsIC0gQ2xpZW50IFNlY3JldAogICAg\
ICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBzZWNyZXQgZm9yIEJ1c2luZXNzIENlbnRyYWwuCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnQKICAgICAgICBuYW1lOiBhcGJfa2llc2VydmVyX3Nzb19jbGllbnQKICAgICAgICB0aXRsZTogUkgtU1NPIFByb2Nlc3MgU2VydmVyIC0gQ2xpZW50CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IG5hbWUgZm9yIFByb2Nlc3MgU2VydmVyLiBJZiB0aGUgc2VjcmV0LCB1c2VyIGFuZCBwYXNzd29yZCBhcmUgcHJvdmlkZWQgaXQgd2lsbCBiZSBjcmVhdGVkLiBGb3IgZXhhbXBsZSwga2llc2VydmVyCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnRf\
c2VjcmV0CiAgICAgICAgbmFtZTogYXBiX2tpZXNlcnZlcl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIHRpdGxlOiBSSC1TU08gUHJvY2VzcyBTZXJ2ZXIgLSBDbGllbnQgU2VjcmV0CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IHNlY3JldCBmb3IgUHJvY2VzcyBTZXJ2ZXIuCiAgICAgIC0gKl9hcGJfc3NvX3VzZXIKICAgICAgLSAqX2FwYl9zc29fcHdkCiAgICAgIC0gKl9hcGJfc3NvX2Rpc2FibGVfc3NsX2NlcnRfdmFsaWRhdGlvbgogICAgICAtICpfYXBiX3Nzb19wcmluY2lwYWxfYXR0cmlidXRlCgogICAgICAjIExEQVAKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXJsCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2JpbmRf\
ZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmluZF9jcmVkZW50aWFsCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2phYXNfc2VjdXJpdHlfZG9tYWluCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Jhc2VfY3R4X2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Jhc2VfZmlsdGVyCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3NlYXJjaF9zY29wZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfdGltZV9saW1pdAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kaXN0aW5ndWlzaGVkX25hbWVfYXR0cmlidXRlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3BhcnNlX3VzZXJuYW1lCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2JlZ2luX3N0cmluZwogICAgICAt\
ICpfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9lbmRfc3RyaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lkCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVzX2N0eF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2ZpbHRlcgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX3JlY3Vyc2lvbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kZWZhdWx0X3JvbGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9uYW1lX2F0dHJpYnV0ZV9pZAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9wYXJzZV9yb2xlX25hbWVfZnJvbV9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pc19kbgogICAgICAtICpfYXBiX2F1\
dGhfbGRhcF9yZWZlcnJhbF91c2VyX2F0dHJpYnV0ZV9pZF90b19jaGVjawoKICAgICAgIyBSb2xlTWFwcGluZwogICAgICAtICpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcm9sZXNfcHJvcGVydGllcwogICAgICAtICpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcmVwbGFjZV9yb2xlCgogIC0gbmFtZTogaW1tdXRhYmxlLWtpZQogICAgZGVzY3JpcHRpb246CiAgICAgIEluIHRoaXMgZW52aXJvbm1lbnQsIHdoZW4geW91IGRlcGxveSBhIFByb2Nlc3MgU2VydmVyIHBvZCwgaXQgYnVpbGRzIGFuIGltYWdlIHRoYXQgbG9hZHMgYW5kIHN0YXJ0cwogICAgICBhIHByb2Nlc3Mgb3IgZ3JvdXAgb2YgcHJvY2Vzc2VzLiBZb3UgY2Fubm90IHN0b3AgYW55IHByb2Nlc3Mgb24gdGhlIHBvZCBv\
ciBhZGQgYW55IG5ldyBwcm9jZXNzIHRvIHRoZSBwb2QuCiAgICAgIElmIHlvdSB3YW50IHRvIHVzZSBhbm90aGVyIHZlcnNpb24gb2YgYSBwcm9jZXNzIG9yIG1vZGlmeSB0aGUgY29uZmlndXJhdGlvbiBpbiBhbnkgb3RoZXIgd2F5LCB5b3UgZGVwbG95IGEgbmV3CiAgICAgIHNlcnZlciBpbWFnZSBhbmQgZGlzcGxhY2UgdGhlIG9sZCBvbmUuCiAgICBmcmVlOiB0cnVlCiAgICBtZXRhZGF0YToKICAgICAgZGlzcGxheU5hbWU6IEltbXV0YWJsZSBTZXJ2ZXIgLSBQcm9jZXNzIFNlcnZlcgogICAgcGFyYW1ldGVyczoKICAgICAgIyBDb21tb24gQ3JlZGVudGlhbHMKICAgICAgLSAqX2FwYl9raWVfYWRtaW5fdXNlcgogICAgICAtICpfYXBiX2tpZV9hZG1pbl9wd2QKICAgICAg\
LSAqX2FwYl9pbWFnZV9zdHJlYW1fdGFnCiAgICAgICMgSEEKICAgICAgLSA8PDogKl9hcGJfcmVwbGljYXMKICAgICAgICBuYW1lOiBhcGJfa2llc2VydmVyX3JlcGxpY2FzCiAgICAgICAgZGVzY3JpcHRpb246IE51bWJlciBvZiBSZXBsaWNhcyBvZiB0aGUgUHJvY2VzcyBTZXJ2ZXIgdGhhdCB3aWxsIGJlIGluaXRpYWxseSBkZXBsb3llZAogICAgICAgIGRlZmF1bHQ6IDIKCiAgICAgICMgQXJ0aWZhY3QgU291cmNlCiAgICAgIC0gbmFtZTogYXBiX2tpZXNlcnZlcl9jb250YWluZXJfZGVwbG95bWVudAogICAgICAgIHRpdGxlOiBQcm9jZXNzIFNlcnZlciBDb250YWluZXIgRGVwbG95bWVudAogICAgICAgIGRlc2NyaXB0aW9uOiAnS0lFIFNlcnZlciBDb250YWluZXIgZGVw\
bG95bWVudCBjb25maWd1cmF0aW9uIHdpdGggb3B0aW9uYWwgYWxpYXMuIEZvcm1hdDogY29udGFpbmVySWQ9Z3JvdXBJZDphcnRpZmFjdElkOnZlcnNpb258YzIoYWxpYXMyKT1nMjphMjp2MicKICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEFydGlmYWN0IHNvdXJjZQogICAgICAtIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc291cmNlX3VybAogICAgICAgIHRpdGxlOiBHaXQgUmVwb3NpdG9yeSBVUkwKICAgICAgICBkZXNjcmlwdGlvbjogR2l0IHNvdXJjZSBVUkkgZm9yIGFwcGxpY2F0aW9uLiBGb3IgZXhhbXBsZSwgaHR0cHM6Ly9naXRodWIuY29tL2pib3NzLWNvbnRhaW5lci1pbWFnZXMvcmhwYW0tNy1v\
cGVuc2hpZnQtaW1hZ2UuZ2l0CiAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICBkaXNwbGF5X2dyb3VwOiBBcnRpZmFjdCBzb3VyY2UKICAgICAgLSBuYW1lOiBhcGJfa2llc2VydmVyX3NvdXJjZV9yZWYKICAgICAgICB0aXRsZTogR2l0IFJlcG9zaXRvcnkgUmVmZXJlbmNlCiAgICAgICAgZGVzY3JpcHRpb246IEdpdCBicmFuY2gvdGFnIHJlZmVyZW5jZS4gRm9yIGV4YW1wbGUsIDcuNS4xLkdBIG9yIG1hc3RlcgogICAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgZGlzcGxheV9ncm91cDogQXJ0aWZhY3Qgc291cmNlCiAgICAgIC0gbmFtZTogYXBiX2tpZXNlcnZlcl9zb3VyY2VfY29udGV4\
dAogICAgICAgIHRpdGxlOiBHaXQgUmVwb3NpdG9yeSBDb250ZXh0IERpcgogICAgICAgIGRlc2NyaXB0aW9uOiBQYXRoIHdpdGhpbiBHaXQgcHJvamVjdCB0byBidWlsZDsgZW1wdHkgZm9yIHJvb3QgcHJvamVjdCBkaXJlY3RvcnkuIEZvciBleGFtcGxlLCBxdWlja3N0YXJ0cy9saWJyYXJ5LXByb2Nlc3MvbGlicmFyeQogICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEFydGlmYWN0IHNvdXJjZQogICAgICAtIG5hbWU6IGFwYl9raWVzZXJ2ZXJfZ2l0aHViX3dlYmhvb2tfc2VjcmV0CiAgICAgICAgdGl0bGU6IEdpdGh1YiBXZWJob29rIFNlY3JldAogICAgICAgIGRlc2NyaXB0aW9uOiBTZWNyZXQga2V5IHRvIHVzZSB3aGVuIGNvbmZpZ3VyaW5n\
IGEgR2l0SHViIFdlYmhvb2suIEdlbmVyYXRlZCBpZiBlbXB0eS4KICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICBkaXNwbGF5X2dyb3VwOiBBcnRpZmFjdCBzb3VyY2UKICAgICAgLSBuYW1lOiBhcGJfa2llc2VydmVyX2dlbmVyaWNfd2ViaG9va19zZWNyZXQKICAgICAgICB0aXRsZTogR2VuZXJpYyBXZWJob29rIFNlY3JldAogICAgICAgIGRlc2NyaXB0aW9uOiBTZWNyZXQga2V5IHRvIHVzZSB3aGVuIGNvbmZpZ3VyaW5nIGEgR2VuZXJpYyBXZWJob29rLiBHZW5lcmF0ZWQgaWYgZW1wdHkuCiAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgZGlzcGxheV9ncm91cDogQXJ0aWZhY3Qgc291cmNlCiAgICAgIC0gbmFtZTogYXBiX2tpZXNlcnZlcl9hcnRpZmFjdF9kaXIK\
ICAgICAgICB0aXRsZTogQXJ0aWZhY3QgZGlyZWN0b3JpZXMKICAgICAgICBkZXNjcmlwdGlvbjogTGlzdCBvZiBkaXJlY3RvcmllcyBmcm9tIHdoaWNoIGFyY2hpdmVzIHdpbGwgYmUgY29waWVkIGludG8gdGhlIGRlcGxveW1lbnQgZm9sZGVyLiBJZiB1bnNwZWNpZmllZCwgYWxsIGFyY2hpdmVzIGluIC90YXJnZXQgd2lsbCBiZSBjb3BpZWQuCiAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgZGlzcGxheV9ncm91cDogQXJ0aWZhY3Qgc291cmNlCiAgICAgIC0gPDw6ICpfYXBiX21hdmVuX21pcnJvcl91cmwKICAgICAgICBkZXNjcmlwdGlvbjogTWF2ZW4gTWlycm9yIHRvIHVzZSBmb3IgUzJJIGJ1aWxkcwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEFydGlmYWN0IHNvdXJj\
ZQoKICAgICAgIyBNYXZlbgogICAgICAtICpfYXBiX21hdmVuX3JlcG9fdXJsCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb19pZAogICAgICAtICpfYXBiX21hdmVuX3JlcG9fdXNlcgogICAgICAtICpfYXBiX21hdmVuX3JlcG9fcHdkCgogICAgICAjIEpNUwogICAgICAtICpfYXBiX2VuYWJsZV9raWVzZXJ2ZXJfam1zX2ludGVncmF0aW9uCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfZXhlY3V0b3IKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yX3RyYW5zYWN0ZWQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3JlcXVlc3QKICAgICAgLSAqX2FwYl9raWVzZXJ2\
ZXJfam1zX3F1ZXVlX3Jlc3BvbnNlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfc2lnbmFsCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9zaWduYWwKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9hdWRpdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfYXVkaXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2F1ZGl0X3RyYW5zYWN0ZWQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3VzZXJuYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19wYXNzd29yZAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfYW1xX3F1ZXVlcwogICAgICAtICpfYXBiX2FtcV9zZWNyZXRfbmFtZQogICAgICAtICpf\
YXBiX2FtcV90cnVzdHN0b3JlX25hbWUKICAgICAgLSAqX2FwYl9hbXFfdHJ1c3RzdG9yZV9wd2QKICAgICAgLSAqX2FwYl9hbXFfa2V5c3RvcmVfbmFtZQogICAgICAtICpfYXBiX2FtcV9rZXlzdG9yZV9wd2QKCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX21vZGUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZGJfdHlwZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9kYl9zaXplCiAgICAgICMgS2V5c3RvcmUgYW5kIFNlY3JldAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9zZWNyZXRfbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9uYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2tleXN0b3JlX2FsaWFzCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2tleXN0\
b3JlX3B3ZAoKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfdXNlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9wd2QKICAgICAgLSA8PDogKl9hcGJfa2llc2VydmVyX2hvc3RuYW1lCiAgICAgICAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKICAgICAgLSA8PDogKl9hcGJfa2llc2VydmVyX3N0YXJ0dXBfc3RyYXRlZ3kKICAgICAgICBkZXNjcmlwdGlvbjogIldoZW4gc2V0IHRvIE9wZW5TaGlmdFN0YXJ0dXBTdHJhdGVneSwgYWxsb3dzIEtJRSBzZXJ2ZXIgdG8gc3RhcnQgdXAgaW5kZXBlbmRlbnRseSB1c2luZyBzaGFyZWQgc3RhdGUgZnJvbSBPcGVuU2hpZnQgQVBJIHNlcnZpY2U7IHdoZW4gc2V0IHRvIExvY2FsQ29udGFpbmVyc1N0YXJ0dXBTdHJhdGVneSwgYWxs\
b3dzIEtJRSBzZXJ2ZXIgdG8gc3RhcnQgdXAgYW5kIGZ1bmN0aW9uIHdpdGggbG9jYWwgY29uZmlndXJhdGlvbiwgZXZlbiB3aGVuIGEgY29udHJvbGxlciBpcyBjb25maWd1cmVkIGFuZCB1bmF2YWlsYWJsZS4gRGVmYXVsdDogT3BlblNoaWZ0U3RhcnR1cFN0cmF0ZWd5IgogICAgICAgIGVudW06IFsnT3BlblNoaWZ0U3RhcnR1cFN0cmF0ZWd5JywgJ0xvY2FsQ29udGFpbmVyc1N0YXJ0dXBTdHJhdGVneSddCiAgICAgICAgZGVmYXVsdDogT3BlblNoaWZ0U3RhcnR1cFN0cmF0ZWd5CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ltYWdlX3N0cmVhbV9uYW1lCiAgICAgICAgIyBQcm9tZXRoZXVzCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3Byb21ldGhldXNfZXh0X2Rpc2FibGVk\
CgogICAgICAjIEV4dGVybmFsIERhdGFiYXNlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RyaXZlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kaWFsZWN0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2hvc3QKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfcG9ydAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9uYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3VybAoKICAgICAgIyBSb3V0ZXIKICAgICAgLSAqX2FwYl9yb3V0ZXJfc3ZjCiAgICAgIC0gKl9hcGJfcm91dGVyX2hvc3QKICAgICAgLSAqX2FwYl9yb3V0ZXJfcG9ydAogICAgICAtICpfYXBi\
X3JvdXRlcl9wcm90b2NvbAoKICAgICAgIyBDb250cm9sbGVyCiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl9zdmMKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX2hvc3QKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3BvcnQKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3Byb3RvY29sCiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl90b2tlbgogICAgICAtIDw8OiAqX2FwYl9jb250cm9sbGVyX3VzZXIKICAgICAgICBkaXNwbGF5X2dyb3VwOiBDb250cm9sbGVyIEludGVncmF0aW9uCiAgICAgIC0gPDw6ICpfYXBiX2NvbnRyb2xsZXJfcHdkCiAgICAgICAgZGlzcGxheV9ncm91cDogQ29udHJvbGxlciBJbnRlZ3JhdGlvbgoKICAgICAgIyBSSCAtIFNTTwogICAgICAtICpfYXBiX3Nz\
b191cmwKICAgICAgLSAqX2FwYl9zc29fcmVhbG0KICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudAogICAgICAgIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc3NvX2NsaWVudAogICAgICAgIHRpdGxlOiBSSC1TU08gUHJvY2VzcyBTZXJ2ZXIgLSBDbGllbnQKICAgICAgICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgbmFtZSBmb3IgUHJvY2VzcyBTZXJ2ZXIuIElmIHRoZSBzZWNyZXQsIHVzZXIgYW5kIHBhc3N3b3JkIGFyZSBwcm92aWRlZCBpdCB3aWxsIGJlIGNyZWF0ZWQuIEZvciBleGFtcGxlLCBraWVzZXJ2ZXIKICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudF9zZWNyZXQKICAgICAgICBuYW1lOiBhcGJfa2llc2VydmVyX3Nzb19jbGllbnRf\
c2VjcmV0CiAgICAgICAgdGl0bGU6IFJILVNTTyBQcm9jZXNzIFNlcnZlciAtIENsaWVudCBTZWNyZXQKICAgICAgICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgc2VjcmV0IGZvciBQcm9jZXNzIFNlcnZlci4KICAgICAgLSAqX2FwYl9zc29fdXNlcgogICAgICAtICpfYXBiX3Nzb19wd2QKICAgICAgLSAqX2FwYl9zc29fZGlzYWJsZV9zc2xfY2VydF92YWxpZGF0aW9uCiAgICAgIC0gKl9hcGJfc3NvX3ByaW5jaXBhbF9hdHRyaWJ1dGUKCiAgICAgICMgTERBUAogICAgICAtICpfYXBiX2F1dGhfbGRhcF91cmwKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmluZF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iaW5kX2NyZWRlbnRpYWwKICAg\
ICAgLSAqX2FwYl9hdXRoX2xkYXBfamFhc19zZWN1cml0eV9kb21haW4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmFzZV9jdHhfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmFzZV9maWx0ZXIKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3Njb3BlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3NlYXJjaF90aW1lX2xpbWl0CiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Rpc3Rpbmd1aXNoZWRfbmFtZV9hdHRyaWJ1dGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcGFyc2VfdXNlcm5hbWUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfYmVnaW5fc3RyaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2VuZF9zdHJpbmcKICAgICAgLSAq\
X2FwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaWQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZXNfY3R4X2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfZmlsdGVyCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfcmVjdXJzaW9uCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2RlZmF1bHRfcm9sZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX25hbWVfYXR0cmlidXRlX2lkCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3BhcnNlX3JvbGVfbmFtZV9mcm9tX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lzX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JlZmVycmFsX3VzZXJfYXR0cmlidXRlX2lkX3RvX2NoZWNrCgog\
ICAgICAjIFJvbGVNYXBwaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9yb2xlX21hcHBlcl9yb2xlc19wcm9wZXJ0aWVzCiAgICAgIC0gKl9hcGJfYXV0aF9yb2xlX21hcHBlcl9yZXBsYWNlX3JvbGUKCiAgLSBuYW1lOiBpbW11dGFibGUtbW9uCiAgICBkZXNjcmlwdGlvbjoKICAgICAgVXNlIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZyB0byBtb25pdG9yIHRoZSBwZXJmb3JtYW5jZSBvZiB0aGUgZW52aXJvbm1lbnQgYW5kIHRvIHN0b3AgYW5kCiAgICAgIHJlc3RhcnQgc29tZSBvZiB0aGUgcHJvY2VzcyBpbnN0YW5jZXMgaW4gYW4gaW1tdXRhYmxlIGVudmlyb25tZW50LCBidXQgbm90IHRvIGRlcGxveSBhZGRpdGlvbmFsIHByb2Nlc3NlcyB0byBhbnkgUHJvY2VzcyBTZXJ2\
ZXIgb3IgdW5kZXBsb3kgYW55IGV4aXN0aW5nIG9uZXMgKHlvdSBjYW4gbm90IGFkZCBvciByZW1vdmUgY29udGFpbmVycykKICAgIGZyZWU6IHRydWUKICAgIG1ldGFkYXRhOgogICAgICBkaXNwbGF5TmFtZTogSW1tdXRhYmxlIFNlcnZlciAtIE1vbml0b3IKICAgIHBhcmFtZXRlcnM6CiAgICAgICMgQ29tbW9uIENyZWRlbnRpYWxzCiAgICAgIC0gKl9hcGJfa2llX2FkbWluX3VzZXIKICAgICAgLSAqX2FwYl9raWVfYWRtaW5fcHdkCiAgICAgIC0gKl9hcGJfaW1hZ2Vfc3RyZWFtX3RhZwoKICAgICAgIyBNYXZlbgogICAgICAtICpfYXBiX21hdmVuX21pcnJvcl91cmwKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3VybAogICAgICAtICpfYXBiX21hdmVuX3JlcG9faWQKICAg\
ICAgLSAqX2FwYl9tYXZlbl9yZXBvX3VzZXIKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3B3ZAoKICAgICAgIyBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgLSA8PDogKl9hcGJfcmVwbGljYXMKICAgICAgICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX3JlcGxpY2FzCiAgICAgICAgZGVzY3JpcHRpb246IE51bWJlciBvZiBSZXBsaWNhcyBvZiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcgdGhhdCB3aWxsIGJlIGluaXRpYWxseSBkZXBsb3llZAogICAgICAgIGRlZmF1bHQ6IDEKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgLSA8PDogKl9hcGJfdm9sdW1lX3NpemUKICAgICAgICBuYW1lOiBhcGJf\
YnVzaW5lc3NjZW50cmFsX3ZvbHVtZV9zaXplCiAgICAgICAgZGVzY3JpcHRpb246IFNwZWNpZnkgdGhlIFBlcnNpc3RlbnQgVm9sdW1lIENsYWltIHNpemUgdG8gY3JlYXRlIGZvciBzdG9yaW5nIHRoZSB1c2VyIGRhdGEuIEZvciBleGFtcGxlLCA2NE1pCiAgICAgICAgZGVmYXVsdDogNjRNaQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAjIEtleXN0b3JlIGFuZCBTZWNyZXQKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxfc2VjcmV0X25hbWUKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfbmFtZQogICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9hbGlhcwogICAgICAt\
ICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9wd2QKICAgICAgLSA8PDogKl9hcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lCiAgICAgICAgZGVzY3JpcHRpb246IFB1YmxpYyBob3N0bmFtZSBmb3IgQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nLiBHZW5lcmF0ZWQgaWYgZW1wdHkKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgIyBPQ1AgRW5hYmxlbWVudAogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfZ2xvYmFsX2Rpc2NvdmVyeQogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfcHJlZmVyX2tpZXNlcnZlcl9zdmMKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3RlbXBsYXRlX2NhY2hlX3R0bAogICAgICAjIE90\
aGVyIHVzZXJzCiAgICAgIC0gPDw6ICpfYXBiX2NvbnRyb2xsZXJfdXNlcgogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAtIDw8OiAqX2FwYl9jb250cm9sbGVyX3B3ZAogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwoKICAgICAgIyBTbWFydCBSb3V0ZXIKICAgICAgLSAqX2FwYl9zbWFydHJvdXRlcl9wcm90b2NvbAogICAgICAtICpfYXBiX3NtYXJ0cm91dGVyX3VzZV9leHRlcm5hbF9yb3V0ZQogICAgICAtIDw8OiAqX2FwYl9yZXBsaWNhcwogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9yZXBsaWNhcwogICAgICAgIGRlc2NyaXB0aW9uOiBOdW1iZXIgb2YgUmVwbGlj\
YXMgb2YgU21hcnQgUm91dGVyIHRoYXQgd2lsbCBiZSBpbml0aWFsbHkgZGVwbG95ZWQKICAgICAgICBkZWZhdWx0OiAyCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX3ZvbHVtZV9zaXplCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX3ZvbHVtZV9zaXplCiAgICAgICAgZGVzY3JpcHRpb246IFNwZWNpZnkgdGhlIFBlcnNpc3RlbnQgVm9sdW1lIENsYWltIHNpemUgdG8gY3JlYXRlLiBGb3IgZXhhbXBsZSwgNjRNaQogICAgICAgIGRlZmF1bHQ6IDY0TWkKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfaG9zdG5hbWUKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJf\
aG9zdG5hbWUKICAgICAgICBkZXNjcmlwdGlvbjogUHVibGljIGhvc3RuYW1lIGZvciBTbWFydCBSb3V0ZXIuIEdlbmVyYXRlZCBpZiBlbXB0eQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9zZWNyZXRfbmFtZQogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9zZWNyZXRfbmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9rZXlzdG9yZV9uYW1lCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX2tleXN0b3JlX25hbWUKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfa2V5c3RvcmVfYWxpYXMKICAgICAgICBuYW1l\
OiBhcGJfc21hcnRyb3V0ZXJfa2V5c3RvcmVfYWxpYXMKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfa2V5c3RvcmVfcHdkCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX2tleXN0b3JlX3B3ZAogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgoKICAgICAgIyBSSCAtIFNTTwogICAgICAtICpfYXBiX3Nzb191cmwKICAgICAgLSAqX2FwYl9zc29fcmVhbG0KICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudAogICAgICAgIG5hbWU6IGFwYl9zc29fYnVzaW5lc3NjZW50cmFsX2NsaWVudAogICAgICAgIHRpdGxlOiBSSC1TU08gQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nIC0gQ2xpZW50CiAgICAgICAg\
ZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IG5hbWUgZm9yIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZy4gSWYgdGhlIHNlY3JldCwgdXNlciBhbmQgcGFzc3dvcmQgYXJlIHByb3ZpZGVkIGl0IHdpbGwgYmUgY3JlYXRlZC4gRm9yIGV4YW1wbGUsIGJ1c2luZXNzY2VudHJhbAogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIG5hbWU6IGFwYl9zc29fYnVzaW5lc3NjZW50cmFsX2NsaWVudF9zZWNyZXQKICAgICAgICB0aXRsZTogUkgtU1NPIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZyAtIENsaWVudCBTZWNyZXQKICAgICAgICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgc2Vj\
cmV0IGZvciBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcuCiAgICAgIC0gKl9hcGJfc3NvX3VzZXIKICAgICAgLSAqX2FwYl9zc29fcHdkCiAgICAgIC0gKl9hcGJfc3NvX2Rpc2FibGVfc3NsX2NlcnRfdmFsaWRhdGlvbgogICAgICAtICpfYXBiX3Nzb19wcmluY2lwYWxfYXR0cmlidXRlCgogICAgICAjIExEQVAKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXJsCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2JpbmRfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmluZF9jcmVkZW50aWFsCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2phYXNfc2VjdXJpdHlfZG9tYWluCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Jhc2VfY3R4X2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFw\
X2Jhc2VfZmlsdGVyCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3NlYXJjaF9zY29wZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfdGltZV9saW1pdAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kaXN0aW5ndWlzaGVkX25hbWVfYXR0cmlidXRlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3BhcnNlX3VzZXJuYW1lCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2JlZ2luX3N0cmluZwogICAgICAtICpfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9lbmRfc3RyaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lkCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVzX2N0eF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2Zp\
bHRlcgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX3JlY3Vyc2lvbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kZWZhdWx0X3JvbGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9uYW1lX2F0dHJpYnV0ZV9pZAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9wYXJzZV9yb2xlX25hbWVfZnJvbV9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pc19kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yZWZlcnJhbF91c2VyX2F0dHJpYnV0ZV9pZF90b19jaGVjawoKICAgICAgIyBSb2xlTWFwcGluZwogICAgICAtICpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcm9sZXNfcHJvcGVydGllcwogICAgICAtICpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcmVw\
bGFjZV9yb2xlCgogIC0gbmFtZTogbWFuYWdlZAogICAgZGVzY3JpcHRpb246CiAgICAgIEFuIGVudmlyb25tZW50IGZvciBydW5uaW5nIGV4aXN0aW5nIHByb2Nlc3NlcyBmb3Igc3RhZ2luZyBhbmQgcHJvZHVjdGlvbiBwdXJwb3Nlcy4KICAgICAgVGhpcyBlbnZpcm9ubWVudCBpbmNsdWRlcyBzZXZlcmFsIGdyb3VwcyBvZiBQcm9jZXNzIFNlcnZlciBwb2RzOyB5b3UgY2FuIGRlcGxveSBhbmQgdW5kZXBsb3kKICAgICAgcHJvY2Vzc2VzIG9uIGV2ZXJ5IHN1Y2ggZ3JvdXAgYW5kIGFsc28gc2NhbGUgdGhlIGdyb3VwIHVwIG9yIGRvd24gYXMgbmVjZXNzYXJ5LiBVc2UgQnVzaW5lc3MKICAgICAgQ2VudHJhbCBNb25pdG9yaW5nIHRvIGRlcGxveSwgcnVuLCBhbmQgc3RvcCB0\
aGUgcHJvY2Vzc2VzIGFuZCB0byBtb25pdG9yIHRoZWlyIGV4ZWN1dGlvbi4KCiAgICBmcmVlOiB0cnVlCiAgICBtZXRhZGF0YToKICAgICAgZGlzcGxheU5hbWU6IE1hbmFnZWQgRW52aXJvbm1lbnQKICAgIHBhcmFtZXRlcnM6CiAgICAgICMgQ29tbW9uIENyZWRlbnRpYWxzCiAgICAgIC0gKl9hcGJfa2llX2FkbWluX3VzZXIKICAgICAgLSAqX2FwYl9raWVfYWRtaW5fcHdkCiAgICAgIC0gKl9hcGJfaW1hZ2Vfc3RyZWFtX3RhZwoKICAgICAgIyBNYXZlbgogICAgICAtICpfYXBiX21hdmVuX21pcnJvcl91cmwKICAgICAgLSA8PDogKl9hcGJfbWF2ZW5fcmVwb191cmwKICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgIGRlc2NyaXB0aW9uOiBFeHRlcm5hbCBNYXZlbiBS\
ZXBvc2l0b3J5IFVSTC4KICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX2lkCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb191c2VyCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb19wd2QKCiAgICAgICMgQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiAgICAgIC0gPDw6ICpfYXBiX3JlcGxpY2FzCiAgICAgICAgbmFtZTogYXBiX2J1c2luZXNzY2VudHJhbF9yZXBsaWNhcwogICAgICAgIGRlZmF1bHQ6IDEKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgLSA8PDogKl9hcGJfdm9sdW1lX3NpemUKICAgICAgICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX3ZvbHVtZV9zaXplCiAgICAgICAgZGVzY3JpcHRpb246IFNwZWNpZnkg\
dGhlIFBlcnNpc3RlbnQgVm9sdW1lIENsYWltIHNpemUgdG8gY3JlYXRlIGZvciBzdG9yaW5nIHRoZSB1c2VyIGRhdGEuIEZvciBleGFtcGxlLCA2NE1pCiAgICAgICAgZGVmYXVsdDogNjRNaQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAjIyBLZXlzdG9yZSBhbmQgU2VjcmV0CiAgICAgIC0gKl9hcGJfYnVzaW5lc3NjZW50cmFsX3NlY3JldF9uYW1lCiAgICAgIC0gKl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX25hbWUKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfYWxpYXMKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfcHdkCiAgICAgIC0gPDw6ICpfYXBiX2J1\
c2luZXNzY2VudHJhbF9ob3N0bmFtZQogICAgICAgIGRlc2NyaXB0aW9uOiBQdWJsaWMgaG9zdG5hbWUgZm9yIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZy4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiAgICAgICMgT0NQIEVuYWJsZW1lbnQKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX2dsb2JhbF9kaXNjb3ZlcnkKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3ByZWZlcl9raWVzZXJ2ZXJfc3ZjCiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl90ZW1wbGF0ZV9jYWNoZV90dGwKCiAgICAgICMgT3RoZXIgdXNlcnMKICAgICAgLSA8PDogKl9hcGJfY29udHJvbGxlcl91c2VyCiAgICAgICAgZGlz\
cGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiAgICAgIC0gPDw6ICpfYXBiX2NvbnRyb2xsZXJfcHdkCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCgogICAgICAjIFNtYXJ0IFJvdXRlcgogICAgICAtICpfYXBiX3NtYXJ0cm91dGVyX3Byb3RvY29sCiAgICAgIC0gKl9hcGJfc21hcnRyb3V0ZXJfdXNlX2V4dGVybmFsX3JvdXRlCiAgICAgIC0gPDw6ICpfYXBiX3JlcGxpY2FzCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX3JlcGxpY2FzCiAgICAgICAgZGVmYXVsdDogMgogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl92b2x1bWVfc2l6ZQogICAgICAg\
IG5hbWU6IGFwYl9zbWFydHJvdXRlcl92b2x1bWVfc2l6ZQogICAgICAgIGRlc2NyaXB0aW9uOiBTcGVjaWZ5IHRoZSBQZXJzaXN0ZW50IFZvbHVtZSBDbGFpbSBzaXplIHRvIGNyZWF0ZS4gRm9yIGV4YW1wbGUsIDY0TWkKICAgICAgICBkZWZhdWx0OiA2NE1pCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX2hvc3RuYW1lCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX2hvc3RuYW1lCiAgICAgICAgZGVzY3JpcHRpb246IFB1YmxpYyBob3N0bmFtZSBmb3IgU21hcnQgUm91dGVyLiBHZW5lcmF0ZWQgaWYgZW1wdHkKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfc2VjcmV0\
X25hbWUKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfc2VjcmV0X25hbWUKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfa2V5c3RvcmVfbmFtZQogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9rZXlzdG9yZV9uYW1lCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX2tleXN0b3JlX2FsaWFzCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX2tleXN0b3JlX2FsaWFzCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX2tleXN0b3JlX3B3ZAogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9rZXlzdG9yZV9wd2QK\
ICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKCiAgICAgICMgUHJvY2VzcyBTZXJ2ZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfbW9kZQogICAgICAtIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc2V0cwogICAgICAgIHRpdGxlOiBTZXRzIG9mIFByb2Nlc3MgU2VydmVycwogICAgICAgIGRlc2NyaXB0aW9uOgogICAgICAgICAgTnVtYmVyIG9mIHNldHMgb2YgS2llIFByb2Nlc3MgU2VydmVyIGNsdXN0ZXIgKyBkYXRhYmFzZSB0aGF0IHdpbGwgYmUgZGVwbG95ZWQuCiAgICAgICAgICBFYWNoIHNldCBjYW4gcnVuIHNlcGFyYXRlIHNlcnZpY2VzIGFuZCBvdGhlciBhc3NldHMuIEFsbCBzZXRzIGNvbm5lY3QgdG8gdGhlIHNhbWUgU21hcnQgUm91dGVyCiAgICAgICAg\
ZGVmYXVsdDogMgogICAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICAgICAgdHlwZTogbnVtYmVyCiAgICAgICAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKICAgICAgLSA8PDogKl9hcGJfcmVwbGljYXMKICAgICAgICBuYW1lOiBhcGJfa2llc2VydmVyX3JlcGxpY2FzCiAgICAgICAgZGVmYXVsdDogMwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2RiX3R5cGUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZGJfc2l6ZQoKICAgICAgIyMgS2V5c3RvcmUgYW5kIFNlY3JldAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9zZWNyZXRfbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9uYW1lCiAg\
ICAgIC0gKl9hcGJfa2llc2VydmVyX2tleXN0b3JlX2FsaWFzCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2tleXN0b3JlX3B3ZAoKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfdXNlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9wd2QKICAgICAgLSA8PDogKl9hcGJfa2llc2VydmVyX2hvc3RuYW1lCiAgICAgICAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfc3RhcnR1cF9zdHJhdGVneQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9pbWFnZV9zdHJlYW1fbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9wcm9tZXRoZXVzX2V4dF9kaXNhYmxlZAoKICAgICAgIyBFeHRlcm5hbCBEYXRhYmFzZQogICAgICAtICpfYXBiX2tpZXNl\
cnZlcl9leHRlcm5hbF9kYl9kcml2ZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZGlhbGVjdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9ob3N0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3BvcnQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl91cmwKCiAgICAgICMgSk1TCiAgICAgIC0gKl9hcGJfZW5hYmxlX2tpZXNlcnZlcl9qbXNfaW50ZWdyYXRpb24KICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9leGVjdXRvcgogICAgICAtICpfYXBi\
X2tpZXNlcnZlcl9qbXNfZXhlY3V0b3JfdHJhbnNhY3RlZAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVxdWVzdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVzcG9uc2UKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9zaWduYWwKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3NpZ25hbAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX2F1ZGl0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9hdWRpdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfYXVkaXRfdHJhbnNhY3RlZAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfdXNlcm5hbWUKICAgICAgLSAqX2FwYl9raWVz\
ZXJ2ZXJfam1zX3Bhc3N3b3JkCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19hbXFfcXVldWVzCiAgICAgIC0gKl9hcGJfYW1xX3NlY3JldF9uYW1lCiAgICAgIC0gKl9hcGJfYW1xX3RydXN0c3RvcmVfbmFtZQogICAgICAtICpfYXBiX2FtcV90cnVzdHN0b3JlX3B3ZAogICAgICAtICpfYXBiX2FtcV9rZXlzdG9yZV9uYW1lCiAgICAgIC0gKl9hcGJfYW1xX2tleXN0b3JlX3B3ZAoKICAgICAgIyBSSCAtIFNTTwogICAgICAtICpfYXBiX3Nzb191cmwKICAgICAgLSAqX2FwYl9zc29fcmVhbG0KICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudAogICAgICAgIG5hbWU6IGFwYl9zc29fYnVzaW5lc3NjZW50cmFsX2NsaWVudAogICAgICAgIHRpdGxlOiBSSC1TU08gQnVzaW5l\
c3MgQ2VudHJhbCBNb25pdG9yaW5nIC0gQ2xpZW50CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IG5hbWUgZm9yIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZy4gSWYgdGhlIHNlY3JldCwgdXNlciBhbmQgcGFzc3dvcmQgYXJlIHByb3ZpZGVkIGl0IHdpbGwgYmUgY3JlYXRlZC4gRm9yIGV4YW1wbGUsIGJ1c2luZXNzY2VudHJhbAogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIG5hbWU6IGFwYl9zc29fYnVzaW5lc3NjZW50cmFsX2NsaWVudF9zZWNyZXQKICAgICAgICB0aXRsZTogUkgtU1NPIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZyAtIENsaWVudCBTZWNyZXQKICAgICAgICBkZXNjcmlw\
dGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgc2VjcmV0IGZvciBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcuCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnQKICAgICAgICBuYW1lOiBhcGJfa2llc2VydmVyX3Nzb19jbGllbnQKICAgICAgICB0aXRsZTogUkgtU1NPIFByb2Nlc3MgU2VydmVyIC0gQ2xpZW50CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IG5hbWUgZm9yIFByb2Nlc3MgU2VydmVyLiBJZiB0aGUgc2VjcmV0LCB1c2VyIGFuZCBwYXNzd29yZCBhcmUgcHJvdmlkZWQgaXQgd2lsbCBiZSBjcmVhdGVkLiBGb3IgZXhhbXBsZSwga2llc2VydmVyCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnRf\
c2VjcmV0CiAgICAgICAgbmFtZTogYXBiX2tpZXNlcnZlcl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIHRpdGxlOiBSSC1TU08gUHJvY2VzcyBTZXJ2ZXIgLSBDbGllbnQgU2VjcmV0CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IHNlY3JldCBmb3IgUHJvY2VzcyBTZXJ2ZXIuCiAgICAgIC0gKl9hcGJfc3NvX3VzZXIKICAgICAgLSAqX2FwYl9zc29fcHdkCiAgICAgIC0gKl9hcGJfc3NvX2Rpc2FibGVfc3NsX2NlcnRfdmFsaWRhdGlvbgogICAgICAtICpfYXBiX3Nzb19wcmluY2lwYWxfYXR0cmlidXRlCgogICAgICAjIExEQVAKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXJsCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2JpbmRf\
ZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmluZF9jcmVkZW50aWFsCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2phYXNfc2VjdXJpdHlfZG9tYWluCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Jhc2VfY3R4X2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Jhc2VfZmlsdGVyCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3NlYXJjaF9zY29wZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfdGltZV9saW1pdAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kaXN0aW5ndWlzaGVkX25hbWVfYXR0cmlidXRlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3BhcnNlX3VzZXJuYW1lCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2JlZ2luX3N0cmluZwogICAgICAt\
ICpfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9lbmRfc3RyaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lkCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVzX2N0eF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2ZpbHRlcgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX3JlY3Vyc2lvbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kZWZhdWx0X3JvbGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9uYW1lX2F0dHJpYnV0ZV9pZAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9wYXJzZV9yb2xlX25hbWVfZnJvbV9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pc19kbgogICAgICAtICpfYXBiX2F1\
dGhfbGRhcF9yZWZlcnJhbF91c2VyX2F0dHJpYnV0ZV9pZF90b19jaGVjawoKICAgICAgIyBSb2xlTWFwcGluZwogICAgICAtICpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcm9sZXNfcHJvcGVydGllcwogICAgICAtICpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcmVwbGFjZV9yb2xlCg=="

modules:
  repositories:
    - path: modules
  install:
    - name: rhpam-apb
packages:
  content_sets_file: content_sets.yml
  repositories:
    - name: base
      id: rhel-7-server-rpms
  install:
    - java-1.8.0-openjdk-headless
osbs:
  configuration:
    container_file: container.yaml
  repository:
    name: apbs/rhpam-7-apb
    branch: rhba-7-rhel-7
