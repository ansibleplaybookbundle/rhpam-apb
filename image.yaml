schema_version: 1

name: "rhpam-7/rhpam-apb"
description: "Red Hat Business Central 7.5 OpenShift Ansible Playbook Bundle - Deprecated"
version: "1.3"
from: "openshift3/apb-base:v3.11"
labels:
  - name: "com.redhat.component"
    value: "rhpam-apb"
  - name: "io.k8s.description"
    value: "Platform for running Red Hat Process Automation Manager"
  - name: "io.k8s.display-name"
    value: "Red Hat Process Automation Manager 7.5"
  - name: "io.openshift.tags"
    value: "javaee,eap,eap7,rhpam,rhpam7,apb"
  - name: "com.redhat.apb.spec"
    value: "LS0tCiMgQ29tbW9uIENyZWRlbnRpYWxzCl9hcGJfa2llX2FkbWluX3VzZXI6ICZfYXBiX2tpZV9hZG1pbl91c2VyCiAgbmFtZTogYXBiX2tpZV9hZG1pbl91c2VyCiAgdGl0bGU6IEFkbWluIFVzZXJuYW1lCiAgZGVzY3JpcHRpb246IEFkbWluIHVzZXIgbmFtZSBmb3IgQnVzaW5lc3MgQ2VudHJhbCBhbmQgUHJvY2VzcyBTZXJ2ZXIKICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IGFkbWluVXNlcgpfYXBiX2tpZV9hZG1pbl9wd2Q6ICZfYXBiX2tpZV9hZG1pbl9wd2QKICBuYW1lOiBhcGJfa2llX2FkbWluX3B3ZAogIHRpdGxlOiBBZG1pbiBQYXNzd29yZAogIGRlc2NyaXB0aW9uOiBBZG1pbiB1c2VyIHBhc3N3b3JkIGZvciBCdXNpbmVzcyBDZW50\
cmFsIGFuZCBQcm9jZXNzIFNlcnZlci4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAojIEltYWdlU3RyZWFtcwpfYXBiX2ltYWdlX3N0cmVhbV90YWc6ICZfYXBiX2ltYWdlX3N0cmVhbV90YWcKICBuYW1lOiBhcGJfaW1hZ2Vfc3RyZWFtX3RhZwogIHRpdGxlOiBJbWFnZSB2ZXJzaW9uCiAgZGVzY3JpcHRpb246IFRhZyB2ZXJzaW9uIG9mIHRoZSBSSFBBTSBJbWFnZVN0cmVhbSB0byB1c2UuIEl0IG11c3QgZXhpc3QgaW4gdGhlIG9wZW5zaGlmdCBuYW1lc3BhY2UuCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBzdHJpbmcKICBkZWZhdWx0OiAnMS4wJwojIEhBCl9hcGJfcmVwbGljYXM6ICZfYXBiX3JlcGxpY2FzCiAg\
dGl0bGU6IE51bWJlciBvZiByZXBsaWNhcwogIGRlc2NyaXB0aW9uOiBOdW1iZXIgb2YgUmVwbGljYXMgdGhhdCB3aWxsIGJlIGluaXRpYWxseSBkZXBsb3llZAogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogbnVtYmVyCiAgZGVmYXVsdDogMwojIE1hdmVuCl9hcGJfbWF2ZW5fbWlycm9yX3VybDogJl9hcGJfbWF2ZW5fbWlycm9yX3VybAogIG5hbWU6IGFwYl9tYXZlbl9taXJyb3JfdXJsCiAgdGl0bGU6IE1hdmVuIE1pcnJvciBVUkwKICBkZXNjcmlwdGlvbjogTWF2ZW4gTWlycm9yIHRvIHVzZSBieSBCdXNpbmVzcyBDZW50cmFsIGFuZCBQcm9jZXNzIFNlcnZlcgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IE1hdmVuCl9hcGJfbWF2ZW5fcmVwb191cmw6ICZfYXBi\
X21hdmVuX3JlcG9fdXJsCiAgbmFtZTogYXBiX21hdmVuX3JlcG9fdXJsCiAgdGl0bGU6IE1hdmVuIFJlcG9zaXRvcnkgVVJMCiAgZGVzY3JpcHRpb246IEV4dGVybmFsIE1hdmVuIFJlcG9zaXRvcnkgVVJMLiBMZWF2ZSBlbXB0eSB0byB1c2UgdGhlIHJlcG9zaXRvcnkgcHJvdmlkZWQgYnkgQnVzaW5lc3MgQ2VudHJhbAogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IE1hdmVuCl9hcGJfbWF2ZW5fcmVwb19pZDogJl9hcGJfbWF2ZW5fcmVwb19pZAogIG5hbWU6IGFwYl9tYXZlbl9yZXBvX2lkCiAgdGl0bGU6IE1hdmVuIFJlcG9zaXRvcnkgSUQKICBkZXNjcmlwdGlvbjogVGhlIElEIHRvIHVzZSBmb3IgdGhlIG1hdmVuIHJlcG9zaXRvcnksIGlmIHNldC4gRGVmYXVs\
dCBpcyBnZW5lcmF0ZWQgcmFuZG9tbHkuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTWF2ZW4KX2FwYl9tYXZlbl9yZXBvX3VzZXI6ICZfYXBiX21hdmVuX3JlcG9fdXNlcgogIG5hbWU6IGFwYl9tYXZlbl9yZXBvX3VzZXIKICB0aXRsZTogTWF2ZW4gUmVwb3NpdG9yeSBVc2VybmFtZQogIGRlc2NyaXB0aW9uOiBVc2VybmFtZSB0byB1c2UgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgZXh0ZXJuYWwgTWF2ZW4gcmVwb3NpdG9yeS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBNYXZlbgpfYXBiX21hdmVuX3JlcG9fcHdkOiAmX2FwYl9tYXZlbl9yZXBvX3B3ZAogIG5hbWU6IGFwYl9tYXZlbl9yZXBvX3B3ZAogIHRpdGxlOiBNYXZlbiBSZXBvc2l0b3J5IFBh\
c3N3b3JkCiAgZGVzY3JpcHRpb246IFBhc3N3b3JkIHRvIHVzZSB0byBpbnRlcmFjdCB3aXRoIHRoZSBleHRlcm5hbCBNYXZlbiByZXBvc2l0b3J5LgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfdHlwZTogcGFzc3dvcmQKICBkaXNwbGF5X2dyb3VwOiBNYXZlbgojIEdlbmVyaWMgS2V5c3RvcmUgcGFyYW1ldGVycwpfYXBiX3NlY3JldF9uYW1lOiAmX2FwYl9zZWNyZXRfbmFtZQogIHRpdGxlOiBTZWNyZXQgTmFtZQogIGRlc2NyaXB0aW9uOiBOYW1lIG9mIHRoZSBzZWNyZXQgY29udGFpbmluZyB0aGUga2V5c3RvcmUgdG8gYmUgdXNlZCBieSB0aGUgc2VydmVyIHRvIGFjY2VwdCBIVFRQUyBjb25uZWN0aW9ucy4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgdHlwZTogc3RyaW5nCl9h\
cGJfa2V5c3RvcmVfbmFtZTogJl9hcGJfa2V5c3RvcmVfbmFtZQogIHRpdGxlOiBLZXlzdG9yZSBGaWxlIE5hbWUKICBkZXNjcmlwdGlvbjogTmFtZSBvZiB0aGUga2V5c3RvcmUgZmlsZSBjb250YWluaW5nIHRoZSBjZXJ0aWZpY2F0ZSB0byBiZSB1c2VkIGJ5IHRoZSBzZXJ2ZXIgdG8gYWNjZXB0IEhUVFBTIGNvbm5lY3Rpb25zLiBJZiBhIHNlY3JldCBuYW1lIGlzIG5vdCBwcm92aWRlZCwgdGhlIHNlcnZlciBnZW5lcmF0ZXMgYSBzZWNyZXQgd2l0aCB0aGlzIGtleXN0b3JlIGZpbGUgbmFtZS4KICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IGtleXN0b3JlLmprcwpfYXBiX2tleXN0b3JlX2FsaWFzOiAmX2FwYl9rZXlzdG9yZV9hbGlhcwogIHRp\
dGxlOiBLZXlzdG9yZSBjZXJ0aWZpY2F0ZSBhbGlhcwogIGRlc2NyaXB0aW9uOiBOYW1lIG9mIHRoZSBjZXJ0aWZpY2F0ZSBhbGlhcyBpbmNsdWRlZCBpbiB0aGUga2V5c3RvcmUgdG8gYmUgdXNlZCBieSB0aGUgc2VydmVyIHRvIGFjY2VwdCBIVFRQUyBjb25uZWN0aW9ucy4gSWYgYSBzZWNyZXQgbmFtZSBpcyBub3QgcHJvdmlkZWQsIHRoZSBzZXJ2ZXIgZ2VuZXJhdGVzIGEgc2VyZXQgd2l0aCB0aGlzIGFsaWFzLgogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogc3RyaW5nCiAgZGVmYXVsdDogamJvc3MKX2FwYl9rZXlzdG9yZV9wd2Q6ICZfYXBiX2tleXN0b3JlX3B3ZAogIHRpdGxlOiBLZXlzdG9yZSBhbmQgQ2VydGlmaWNhdGUgUGFzc3dvcmQKICBkZXNjcmlwdGlvbjogUGFz\
c3dvcmQgcHJvdGVjdGluZyBib3RoIHRoZSBLZXlzdG9yZSBhbmQgdGhlIENlcnRpZmljYXRlLiBHZW5lcmF0ZWQgaWYgZW1wdHkKICB0eXBlOiBzdHJpbmcKICBtaW5fbGVuZ3RoOiA2CiAgZGlzcGxheV90eXBlOiBwYXNzd29yZApfYXBiX3ZvbHVtZV9zaXplOiAmX2FwYl92b2x1bWVfc2l6ZQogIHRpdGxlOiBXb3Jrc3BhY2UgU3RvcmFnZSBTaXplCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBzdHJpbmcKICBwYXR0ZXJuOiAiXlswLTldK1ttTWdHdFRdaT8kIgpfYXBiX2hvc3RuYW1lOiAmX2FwYl9ob3N0bmFtZQogIHRpdGxlOiBQdWJsaWMgSG9zdG5hbWUKICB0eXBlOiBzdHJpbmcKIyBCdXNpbmVzcyBDZW50cmFsCl9hcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lOiAm\
X2FwYl9idXNpbmVzc2NlbnRyYWxfaG9zdG5hbWUKICA8PDogKl9hcGJfaG9zdG5hbWUKICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lCiAgZGVzY3JpcHRpb246IFB1YmxpYyBob3N0bmFtZSBmb3IgQnVzaW5lc3MgQ2VudHJhbC4gR2VuZXJhdGVkIGlmIGVtcHR5CiMgT0NQIEVuYWJsZW1lbnQKX2FwYl9jb250cm9sbGVyX2dsb2JhbF9kaXNjb3Zlcnk6ICZfYXBiX2NvbnRyb2xsZXJfZ2xvYmFsX2Rpc2NvdmVyeQogIG5hbWU6IGFwYl9jb250cm9sbGVyX2dsb2JhbF9kaXNjb3ZlcnkKICB0aXRsZTogRW5hYmxlIEtJRSBTZXJ2ZXIgZ2xvYmFsIGRpc2NvdmVyeQogIGRlc2NyaXB0aW9uOiBJZiBzZXQgdG8gdHJ1ZSwgdHVybnMgb24gS0lFIHNlcnZlciBnbG9i\
YWwgZGlzY292ZXJ5IGZlYXR1cmUuIFdpdGggdGhpcyBmZWF0dXJlLCBCdXNpbmVzcyBDZW50cmFsIGlzIGFibGUgdG8gZGlzY292ZXIgYWxsIEtJRSBzZXJ2ZXJzIHdpdGggT3BlblNoaWZ0U3RhcnR1cFN0cmF0ZWd5IGRlcGxveWVkIGluIHRoZSBzYW1lIG5hbWVzcGFjZS4gIElmIHNldCB0byBmYWxzZSwgQnVzaW5lc3MgQ2VudHJhbCBjYW4gZGlzY292ZXIgYSBLSUUgc2VydmVyIG9ubHkgaWYgYm90aCBjb21wb25lbnRzIGFyZSBkZXBsb3llZCB3aXRoIHRoZSBzYW1lIGFwcGxpY2F0aW9uIG5hbWUuIChTZXRzIHRoZSBvcmcua2llLnNlcnZlci5jb250cm9sbGVyLm9wZW5zaGlmdC5nbG9iYWwuZGlzY292ZXJ5LmVuYWJsZWQgc3lzdGVtIHByb3BlcnR5KQogIHR5cGU6IGJv\
b2xlYW4KICBkZWZhdWx0OiBmYWxzZQogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKX2FwYl9jb250cm9sbGVyX3ByZWZlcl9raWVzZXJ2ZXJfc3ZjOiAmX2FwYl9jb250cm9sbGVyX3ByZWZlcl9raWVzZXJ2ZXJfc3ZjCiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfcHJlZmVyX2tpZXNlcnZlcl9zdmMKICB0aXRsZTogUHJlZmVyIFByb2Nlc3MgU2VydmVyIE9wZW5TaGlmdCBTZXJ2aWNlCiAgZGVzY3JpcHRpb246IEVuYWJsZXMgY29ubmVjdGlvbiB0byBQcm9jZXNzIFNlcnZlciB2aWEgT3BlblNoaWZ0IGludGVybmFsIFNlcnZpY2UgZW5kcG9pbnQgKFNldHMgdGhlIG9yZy5raWUuc2VydmVyLmNvbnRyb2xsZXIub3BlbnNoaWZ0LnByZWZlci5raWVzZXJ2ZXIuc2Vy\
dmljZSBzeXN0ZW0gcHJvcGVydHkpCiAgdHlwZTogYm9vbGVhbgogIGRlZmF1bHQ6IHRydWUKICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCl9hcGJfY29udHJvbGxlcl90ZW1wbGF0ZV9jYWNoZV90dGw6ICZfYXBiX2NvbnRyb2xsZXJfdGVtcGxhdGVfY2FjaGVfdHRsCiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfdGVtcGxhdGVfY2FjaGVfdHRsCiAgdGl0bGU6IFByb2Nlc3MgU2VydmVyIFRlbXBsYXRlIENhY2hlIFRUTAogIGRlc2NyaXB0aW9uOiBQcm9jZXNzIFNlcnZlciBUZW1wbGF0ZSBDYWNoZSBUVEwgaW4gbWlsbGlzZWNvbmRzIChTZXRzIHRoZSBvcmcua2llLnNlcnZlci5jb250cm9sbGVyLnRlbXBsYXRlLmNhY2hlLnR0bCBzeXN0ZW0gcHJvcGVydHkpCiAg\
dHlwZTogbnVtYmVyCiAgZGVmYXVsdDogNjAwMDAKICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCl9hcGJfYnVzaW5lc3NjZW50cmFsX3NlY3JldF9uYW1lOiAmX2FwYl9idXNpbmVzc2NlbnRyYWxfc2VjcmV0X25hbWUKICA8PDogKl9hcGJfc2VjcmV0X25hbWUKICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX3NlY3JldF9uYW1lCiAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX25hbWU6ICZfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9uYW1lCiAgPDw6ICpfYXBiX2tleXN0b3JlX25hbWUKICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX25hbWUKICBk\
aXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfYWxpYXM6ICZfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9hbGlhcwogIDw8OiAqX2FwYl9rZXlzdG9yZV9hbGlhcwogIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfYWxpYXMKICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfcHdkOiAmX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfcHdkCiAgPDw6ICpfYXBiX2tleXN0b3JlX3B3ZAogIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfcHdkCiAgZGlzcGxheV9ncm91cDog\
QnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiMgR2l0IEhvb2tzCl9hcGJfZ2l0X2hvb2tzX2RpcjogJl9hcGJfZ2l0X2hvb2tzX2RpcgogIG5hbWU6IGFwYl9naXRfaG9va3NfZGlyCiAgdGl0bGU6IEdpdCBob29rcyBkaXJlY3RvcnkKICBkZXNjcmlwdGlvbjogVGhlIGRpcmVjdG9yeSB0byB1c2UgZm9yIGdpdCBob29rcywgaWYgcmVxdWlyZWQuIGUuZy4gL29wdC9raWUvZGF0YS9naXQvaG9va3MKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCl9hcGJfYnVzaW5lc3NjZW50cmFsX21hdmVuX3JlcG9fdXNlcjogJl9hcGJfYnVzaW5lc3NjZW50cmFsX21hdmVuX3JlcG9fdXNlcgogIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfbWF2\
ZW5fcmVwb191c2VyCiAgdGl0bGU6IE1hdmVuIFJlcG9zaXRvcnkgVXNlcm5hbWUKICBkZXNjcmlwdGlvbjogVXNlcm5hbWUgdG8gdXNlIHRvIGludGVyYWN0IHdpdGggdGhlIEJ1c2luZXNzIENlbnRyYWwgTWF2ZW4gcmVwb3NpdG9yeS4KICB0eXBlOiBzdHJpbmcKICBkZWZhdWx0OiBtYXZlblVzZXIKICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCl9hcGJfYnVzaW5lc3NjZW50cmFsX21hdmVuX3JlcG9fcHdkOiAmX2FwYl9idXNpbmVzc2NlbnRyYWxfbWF2ZW5fcmVwb19wd2QKICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX21hdmVuX3JlcG9fcHdkCiAgdGl0bGU6IE1hdmVuIFJlcG9zaXRvcnkgUGFzc3dvcmQKICBkZXNjcmlwdGlvbjogUGFzc3dvcmQgdG8g\
dXNlIHRvIGludGVyYWN0IHdpdGggdGhlIEJ1c2luZXNzIENlbnRyYWwgTWF2ZW4gcmVwb3NpdG9yeS4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKIyBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9tb2RlOiAmX2FwYl9raWVzZXJ2ZXJfbW9kZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfbW9kZQogIHRpdGxlOiBQcm9jZXNzIFNlcnZlciBNb2RlCiAgZGVzY3JpcHRpb246IFRoZSBLSUUgc2VydmVyIG1vZGUuIFZhbGlkIHZhbHVlcyBhcmUgJ0RFVkVMT1BNRU5UJyBvciAnUFJPRFVDVElPTicuIEluIHByb2R1Y3Rpb24gbW9kZSwgeW91IGNhbiBub3Qg\
ZGVwbG95IFNOQVBTSE9UIHZlcnNpb25zIG9mIGFydGlmYWN0cyBvbiB0aGUgS0lFIHNlcnZlciBhbmQgY2FuIG5vdCBjaGFuZ2UgdGhlIHZlcnNpb24gb2YgYW4gYXJ0aWZhY3QgaW4gYW4gZXhpc3RpbmcgY29udGFpbmVyLiAoU2V0cyB0aGUgb3JnLmtpZS5zZXJ2ZXIubW9kZSBzeXN0ZW0gcHJvcGVydHkpLgogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogZW51bQogIGVudW06IFsnREVWRUxPUE1FTlQnLCAnUFJPRFVDVElPTiddCiAgZGVmYXVsdDogREVWRUxPUE1FTlQKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9pbWFnZV9zdHJlYW1fbmFtZTogJl9hcGJfa2llc2VydmVyX2ltYWdlX3N0cmVhbV9uYW1lCiAgbmFtZTogYXBiX2tpZXNl\
cnZlcl9pbWFnZV9zdHJlYW1fbmFtZQogIHRpdGxlOiBQcm9jZXNzIFNlcnZlciBJbWFnZSBTdHJlYW0gTmFtZQogIGRlc2NyaXB0aW9uOiBJbWFnZSBTdHJlYW0gTmFtZSB0byB1c2UgZm9yIFByb2Nlc3MgU2VydmVyLiBJZiB5b3UgaGF2ZSBnZW5lcmF0ZWQgYSBjdXN0b20gaW1hZ2UgKGZvciBleGFtcGxlLCB0byBwcm92aWRlIGEgZGF0YWJhc2Ugc2VydmVyIGRyaXZlciksIHlvdSBjYW4gY2hhbmdlIHRoaXMgcGFyYW1ldGVyIHRvIHVzZSBpdC4KICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IHJocGFtNzUta2llc2VydmVyLW9wZW5zaGlmdAogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX3VzZXI6ICZfYXBi\
X2tpZXNlcnZlcl91c2VyCiAgbmFtZTogYXBiX2tpZXNlcnZlcl91c2VyCiAgdGl0bGU6IFByb2Nlc3MgU2VydmVyIFVzZXJuYW1lCiAgZGVzY3JpcHRpb246IFVzZXIgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgUHJvY2VzcyBTZXJ2ZXIgdXNpbmcgdGhlIFJFU1QgQVBJCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBzdHJpbmcKICBkZWZhdWx0OiBleGVjdXRpb25Vc2VyCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfcHdkOiAmX2FwYl9raWVzZXJ2ZXJfcHdkCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9wd2QKICB0aXRsZTogUHJvY2VzcyBTZXJ2ZXIgUGFzc3dvcmQKICBkZXNjcmlwdGlvbjogVXNlciBwYXNzd29yZCB0byBpbnRlcmFjdCB3aXRo\
IHRoZSBQcm9jZXNzIFNlcnZlciB1c2luZyB0aGUgUkVTVCBBUEkuIEdlbmVyYXRlZCBpZiBlbXB0eQogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfdHlwZTogcGFzc3dvcmQKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9zZWNyZXRfbmFtZTogJl9hcGJfa2llc2VydmVyX3NlY3JldF9uYW1lCiAgPDw6ICpfYXBiX3NlY3JldF9uYW1lCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9zZWNyZXRfbmFtZQogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX2tleXN0b3JlX25hbWU6ICZfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9uYW1lCiAgPDw6ICpfYXBiX2tleXN0b3JlX25hbWUKICBuYW1lOiBhcGJfa2llc2VydmVy\
X2tleXN0b3JlX25hbWUKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9hbGlhczogJl9hcGJfa2llc2VydmVyX2tleXN0b3JlX2FsaWFzCiAgPDw6ICpfYXBiX2tleXN0b3JlX2FsaWFzCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9hbGlhcwogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX2tleXN0b3JlX3B3ZDogJl9hcGJfa2llc2VydmVyX2tleXN0b3JlX3B3ZAogIDw8OiAqX2FwYl9rZXlzdG9yZV9wd2QKICBuYW1lOiBhcGJfa2llc2VydmVyX2tleXN0b3JlX3B3ZAogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX2hvc3RuYW1lOiAmX2Fw\
Yl9raWVzZXJ2ZXJfaG9zdG5hbWUKICA8PDogKl9hcGJfaG9zdG5hbWUKICBuYW1lOiBhcGJfa2llc2VydmVyX2hvc3RuYW1lCiAgZGVzY3JpcHRpb246IFB1YmxpYyBob3N0bmFtZSBmb3IgUHJvY2VzcyBTZXJ2ZXIuIEdlbmVyYXRlZCBpZiBlbXB0eQpfYXBiX2tpZXNlcnZlcl9zdGFydHVwX3N0cmF0ZWd5OiAmX2FwYl9raWVzZXJ2ZXJfc3RhcnR1cF9zdHJhdGVneQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc3RhcnR1cF9zdHJhdGVneQogIHRpdGxlOiBTdGFydHVwIFN0cmF0ZWd5CiAgZGVzY3JpcHRpb246ICJXaGVuIHNldCB0byBPcGVuU2hpZnRTdGFydHVwU3RyYXRlZ3ksIGFsbG93cyBLSUUgc2VydmVyIHRvIHN0YXJ0IHVwIGluZGVwZW5kZW50bHkgdXNpbmcgc2hhcmVk\
IHN0YXRlIGZyb20gT3BlblNoaWZ0IEFQSSBzZXJ2aWNlOyB3aGVuIHNldCB0byBDb250cm9sbGVyQmFzZWRTdGFydHVwU3RyYXRlZ3ksIGFsbG93cyBLSUUgc2VydmVyIHRvIHN0YXJ0IHVwIGFuZCBmdW5jdGlvbiB3aXRoIGNvbmZpZ3VyYXRpb24gZnJvbSBhIGNvbnRyb2xsZXIuIERlZmF1bHQ6IE9wZW5TaGlmdFN0YXJ0dXBTdHJhdGVneSIKICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IGVudW0KICBlbnVtOiBbJ09wZW5TaGlmdFN0YXJ0dXBTdHJhdGVneScsICdDb250cm9sbGVyQmFzZWRTdGFydHVwU3RyYXRlZ3knXQogIGRlZmF1bHQ6IE9wZW5TaGlmdFN0YXJ0dXBTdHJhdGVneQogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX3Byb21l\
dGhldXNfZXh0X2Rpc2FibGVkOiAmX2FwYl9raWVzZXJ2ZXJfcHJvbWV0aGV1c19leHRfZGlzYWJsZWQKICBuYW1lOiBhcGJfa2llc2VydmVyX3Byb21ldGhldXNfZXh0X2Rpc2FibGVkCiAgdGl0bGU6IFByb21ldGhldXMgU2VydmVyIEV4dGVuc2lvbiBEaXNhYmxlZAogIGRlc2NyaXB0aW9uOiBJZiB1bmNoZWNrZWQsIHRoZSBwcm9tZXRoZXVzIHNlcnZlciBleHRlbnNpb24gd2lsbCBiZSBlbmFibGVkLiAoU2V0cyB0aGUgb3JnLmtpZS5wcm9tZXRoZXVzLnNlcnZlci5leHQuZGlzYWJsZWQgc3lzdGVtIHByb3BlcnR5KQogIHJlcXVpcmVkOiBmYWxzZQogIHR5cGU6IGJvb2xlYW4KICBkZWZhdWx0OiB0cnVlCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9r\
aWVzZXJ2ZXJfZGJfdHlwZTogJl9hcGJfa2llc2VydmVyX2RiX3R5cGUKICBuYW1lOiBhcGJfa2llc2VydmVyX2RiX3R5cGUKICB0aXRsZTogRGF0YWJhc2UgVHlwZQogIGRlc2NyaXB0aW9uOiBEYXRhYmFzZSBUeXBlIHRvIHBlcnNpc3QgdGhlIFByb2Nlc3MgU2VydmVyIHJ1bnRpbWUgaW5mb3JtYXRpb24uIERPIE5PVCBVU0UgSDIgZm9yIGRlcGxveWluZyBtb3JlIHRoYW4gMSBpbnN0YW5jZSBvZiBQcm9jZXNzIFNlcnZlci4gRm9yIEgyLCBQb3N0Z3JlU1FMLCBhbmQgTXlTUUwgdGhlIGRhdGFiYXNlIHNlcnZlciB3aWxsIGJlIGRlcGxveWVkIGluIGEgcG9kLiBUbyB1c2UgYSBkYXRhYmFzZSBzZXJ2ZXIgdGhhdCBpcyBkZXBsb3llZCBlbHNld2hlcmUsIHNlbGVjdCBFeHRl\
cm5hbC4KICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IGVudW0KICBlbnVtOiBbICdIMicsICdQb3N0Z3JlU1FMJywgJ015U1FMJywgJ0V4dGVybmFsJyBdCiAgZGVmYXVsdDogUG9zdGdyZVNRTAogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX2RiX3NpemU6ICZfYXBiX2tpZXNlcnZlcl9kYl9zaXplCiAgPDw6ICpfYXBiX3ZvbHVtZV9zaXplCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9kYl9zaXplCiAgdGl0bGU6IERhdGFiYXNlIFN0b3JhZ2UgU2l6ZQogIGRlc2NyaXB0aW9uOiBQZXJzaXN0ZW50IFZvbHVtZSBDbGFpbSBzaXplIHRvIGNyZWF0ZSBmb3IgdGhlIERhdGFiYXNlLiBGb3IgZXhhbXBsZSwgMUdpLiBJZ25vcmVkIGlmIEV4dGVybmFs\
IGlzIHNlbGVjdGVkCiAgZGVmYXVsdDogMUdpCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZHJpdmVyOiAmX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZHJpdmVyCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kcml2ZXIKICB0aXRsZTogRHJpdmVyIG5hbWUKICBkZXNjcmlwdGlvbjogRGF0YWJhc2UgZHJpdmVyIHR5cGUuIFJlcXVpcmVkIGZvciBFeHRlcm5hbCBkYXRhYmFzZS4gRm9yIGV4YW1wbGUsIG15c3FsIG9yIHBvc3RncmVzcWwKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBFeHRlcm5hbCBEYXRhYmFzZSAob25seSBpZiBEYXRhYmFzZSB0eXBlIGlzIEV4dGVybmFsKQpfYXBi\
X2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kaWFsZWN0OiAmX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZGlhbGVjdAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZGlhbGVjdAogIHRpdGxlOiBEaWFsZWN0IGNsYXNzCiAgZGVzY3JpcHRpb246IEhpYmVybmF0ZSBkaWFsZWN0IGNsYXNzIHRvIHVzZS4gUmVxdWlyZWQgZm9yIEV4dGVybmFsIGRhdGFiYXNlLiBGb3IgZXhhbXBsZSwgb3JnLmhpYmVybmF0ZS5kaWFsZWN0Lk15U1FMNTdEaWFsZWN0CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogRXh0ZXJuYWwgRGF0YWJhc2UgKG9ubHkgaWYgRGF0YWJhc2UgdHlwZSBpcyBFeHRlcm5hbCkKX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfaG9zdDogJl9h\
cGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2hvc3QKICBuYW1lOiBhcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2hvc3QKICB0aXRsZTogSG9zdAogIGRlc2NyaXB0aW9uOiBFeHRlcm5hbCBkYXRhYmFzZSBzZXJ2ZXIgaG9zdC4gUmVxdWlyZWQgZm9yIEV4dGVybmFsIGRhdGFiYXNlLiBGb3IgZXhhbXBsZSwgMTI3LjAuMC4xCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogRXh0ZXJuYWwgRGF0YWJhc2UgKG9ubHkgaWYgRGF0YWJhc2UgdHlwZSBpcyBFeHRlcm5hbCkKX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfcG9ydDogJl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3BvcnQKICBuYW1lOiBhcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3BvcnQKICB0aXRsZTog\
UG9ydAogIGRlc2NyaXB0aW9uOiBFeHRlcm5hbCBkYXRhYmFzZSBzZXJ2ZXIgcG9ydC4gUmVxdWlyZWQgZm9yIEV4dGVybmFsIGRhdGFiYXNlLiBGb3IgZXhhbXBsZSwgMzMwNgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEV4dGVybmFsIERhdGFiYXNlIChvbmx5IGlmIERhdGFiYXNlIHR5cGUgaXMgRXh0ZXJuYWwpCl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX25hbWU6ICZfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9uYW1lCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9uYW1lCiAgdGl0bGU6IERhdGFiYXNlIE5hbWUKICBkZXNjcmlwdGlvbjogRXh0ZXJuYWwgRGF0YWJhc2UgbmFtZS4gUmVxdWlyZWQgZm9yIEV4dGVybmFsIGRhdGFiYXNl\
LiBGb3IgZXhhbXBsZSwgcmhwYW0KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBFeHRlcm5hbCBEYXRhYmFzZSAob25seSBpZiBEYXRhYmFzZSB0eXBlIGlzIEV4dGVybmFsKQpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl91cmw6ICZfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl91cmwKICBuYW1lOiBhcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3VybAogIHRpdGxlOiBEYXRhYmFzZSBKREJDIFVSTAogIGRlc2NyaXB0aW9uOiBFeHRlcm5hbCBkYXRhYmFzZSBzZXJ2ZXIgSkRCQyBVUkwuIFJlcXVpcmVkIGZvciBFeHRlcm5hbCBkYXRhYmFzZS4gRm9yIGV4YW1wbGUsIGpkYmM6bXlzcWw6MTI3LjAuMC4xOjMzMDYvcmhwYW0KICB0eXBlOiBzdHJpbmcKICBkaXNw\
bGF5X2dyb3VwOiBFeHRlcm5hbCBEYXRhYmFzZSAob25seSBpZiBEYXRhYmFzZSB0eXBlIGlzIEV4dGVybmFsKQoKIyBKTVMgZW52cwpfYXBiX2VuYWJsZV9raWVzZXJ2ZXJfam1zX2ludGVncmF0aW9uOiAmX2FwYl9lbmFibGVfa2llc2VydmVyX2ptc19pbnRlZ3JhdGlvbgogIG5hbWU6IGFwYl9lbmFibGVfa2llc2VydmVyX2ptc19pbnRlZ3JhdGlvbgogIHRpdGxlOiBFbmFibGUgSk1TIGludGVncmF0aW9uCiAgZGVzY3JpcHRpb246IFdoZW4gc2V0IHRvIHRydWUgd2lsbCBjb25maWd1cmUgdGhlIEtJRSBzZXJ2ZXIgd2l0aCBKTVMgaW50ZWdyYXRpb24sIGlmIG5vIGNvbmZpZ3VyYXRpb24gaXMgYWRkZWQsIHRoZSBkZWZhdWx0IHdpbGwgYmUgdXNlZC4KICB0eXBlOiBib29s\
ZWFuCiAgZGVmYXVsdDogZmFsc2UKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yOiAmX2FwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3IKICB0aXRsZTogRW5hYmxlIEpNUyBFeGVjdXRvcgogIGRlc2NyaXB0aW9uOiBFbmFibGVzIHRoZSBKTVMgZXhlY3V0b3IsIHVuY2hlY2sgdG8gZGlzYWJsZSBpdC4KICB0eXBlOiBib29sZWFuCiAgZGVmYXVsdDogdHJ1ZQogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfZXhlY3V0b3I6ICZfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfZXhlY3V0b3IKICBuYW1lOiBh\
cGJfa2llc2VydmVyX2ptc19xdWV1ZV9leGVjdXRvcgogIHRpdGxlOiBLSUUgU2VydmVyIEpNUyBFeGVjdXRvciBRdWV1ZQogIGRlc2NyaXB0aW9uOiBKTkRJIG5hbWUgb2YgZXhlY3V0b3IgcXVldWUgZm9yIEpNUywgZXhhbXBsZSBxdWV1ZS9DVVNUT00uS0lFLlNFUlZFUi5FWEVDVVRPUiwgZGVmYXVsdCBpcyBxdWV1ZS9LSUUuU0VSVkVSLkVYRUNVVE9SLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3JfdHJhbnNhY3RlZDogJl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcl90cmFuc2FjdGVkCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3JfdHJhbnNhY3RlZAogIHRpdGxl\
OiBLSUUgU2VydmVyIFRyYW5zYWN0ZWQgRXhlY3V0b3IKICBkZXNjcmlwdGlvbjogRW5hYmxlIHRyYW5zYWN0aW9ucyBmb3IgSk1TIGV4ZWN1dG9yLCBkaXNhYmxlZCBieSBkZWZhdWx0LgogIHR5cGU6IGJvb2xlYW4KICBkZWZhdWx0OiBmYWxzZQogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVxdWVzdDogJl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXF1ZXN0CiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVxdWVzdAogIHRpdGxlOiBLSUUgU2VydmVyIEpNUyBSZXF1ZXN0IFF1ZXVlCiAgZGVzY3JpcHRpb246IEpOREkgbmFtZSBvZiByZXF1ZXN0IHF1ZXVlIGZvciBKTVMsIGV4YW1wbGUgcXVldWUv\
Q1VTVE9NLktJRS5TRVJWRVIuUkVRVUVTVCwgZGVmYXVsdCBpcyBxdWV1ZS9LSUUuU0VSVkVSLlJFUVVFU1QuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXNwb25zZTogJl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXNwb25zZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3Jlc3BvbnNlCiAgdGl0bGU6IEtJRSBTZXJ2ZXIgSk1TIFJlc3BvbnNlIFF1ZXVlCiAgZGVzY3JpcHRpb246IEpOREkgbmFtZSBvZiByZXNwb25zZSBxdWV1ZSBmb3IgSk1TLCBleGFtcGxlIHF1ZXVlL0NVU1RPTS5LSUUuU0VSVkVSLlJFU1BPTlNFLCBkZWZhdWx0IGlzIHF1ZXVlL0tJRS5TRVJWRVIu\
UkVTUE9OU0UuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfc2lnbmFsOiAmX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9zaWduYWwKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19lbmFibGVfc2lnbmFsCiAgdGl0bGU6IEVuYWJsZSBLSUUgU2VydmVyIEpNUyBTaWduYWwgUXVldWUKICBkZXNjcmlwdGlvbjogRW5hYmxlIHRoZSBTaWduYWwgY29uZmlndXJhdGlvbiB0aHJvdWdoIEpNUy4gRGVmYXVsdCBpcyBmYWxzZS4KICB0eXBlOiBib29sZWFuCiAgZGVmYXVsdDogZmFsc2UKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3NpZ25h\
bDogJl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9zaWduYWwKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19xdWV1ZV9zaWduYWwKICB0aXRsZTogS0lFIFNlcnZlciBKTVMgU2lnbmFsIFF1ZXVlCiAgZGVzY3JpcHRpb246IEpOREkgbmFtZSBvZiBzaWduYWwgcXVldWUgZm9yIEpNUywgZXhhbXBsZSBxdWV1ZS9DVVNUT00uS0lFLlNFUlZFUi5TSUdOQUwsIGRlZmF1bHQgaXMgcXVldWUvS0lFLlNFUlZFUi5TSUdOQUwuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfYXVkaXQ6ICZfYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX2F1ZGl0CiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxl\
X2F1ZGl0CiAgdGl0bGU6IEVuYWJsZSBLSUUgU2VydmVyIEpNUyBBdWRpdAogIGRlc2NyaXB0aW9uOiBFbmFibGUgdGhlIEF1ZGl0IGxvZ2dpbmcgdGhyb3VnaCBKTVMuIERlZmF1bHQgaXMgZmFsc2UuCiAgdHlwZTogYm9vbGVhbgogIGRlZmF1bHQ6IGZhbHNlCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9hdWRpdDogJl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9hdWRpdAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2F1ZGl0CiAgdGl0bGU6IEtJRSBTZXJ2ZXIgSk1TIEF1ZGl0IFF1ZXVlCiAgZGVzY3JpcHRpb246IEpOREkgbmFtZSBvZiBhdWRpdCBsb2dnaW5nIHF1ZXVlIGZvciBKTVMsIGV4YW1wbGUg\
cXVldWUvQ1VTVE9NLktJRS5TRVJWRVIuQVVESVQsIGRlZmF1bHQgaXMgcXVldWUvS0lFLlNFUlZFUi5BVURJVC4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX2F1ZGl0X3RyYW5zYWN0ZWQ6ICZfYXBiX2tpZXNlcnZlcl9qbXNfYXVkaXRfdHJhbnNhY3RlZAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX2F1ZGl0X3RyYW5zYWN0ZWQKICB0aXRsZTogS0lFIFNlcnZlciBKTVMgQXVkaXQgbG9nZ2VyIHRyYW5zYWN0ZWQKICBkZXNjcmlwdGlvbjogRGV0ZXJtaW5lcyBpZiBKTVMgc2Vzc2lvbiBpcyB0cmFuc2FjdGVkIG9yIG5vdCAtIGRlZmF1bHQgdHJ1ZS4KICB0eXBlOiBib29sZWFuCiAgZGVmYXVsdDog\
dHJ1ZQogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfdXNlcm5hbWU6ICZfYXBiX2tpZXNlcnZlcl9qbXNfdXNlcm5hbWUKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc191c2VybmFtZQogIHRpdGxlOiBBTVEgVXNlcm5hbWUKICBkZXNjcmlwdGlvbjogQU1RIGJyb2tlciB1c2VybmFtZSB0byBjb25uZWN0IGRvIHRoZSBBTVEsIGdlbmVyYXRlZCBpZiBlbXB0eS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX3Bhc3N3b3JkOiAmX2FwYl9raWVzZXJ2ZXJfam1zX3Bhc3N3b3JkCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfcGFzc3dvcmQKICB0aXRsZTogQU1R\
IFBhc3N3b3JkCiAgZGVzY3JpcHRpb246IEFNUSBicm9rZXIgcGFzc3dvcmQgdG8gY29ubmVjdCBkbyB0aGUgQU1RLCBnZW5lcmF0ZWQgaWYgZW1wdHkuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfYW1xX3F1ZXVlczogJl9hcGJfa2llc2VydmVyX2ptc19hbXFfcXVldWVzCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfYW1xX3F1ZXVlcwogIHRpdGxlOiBBTVEgUXVldWVzCiAgZGVzY3JpcHRpb246IEFNUSBicm9rZXIgYnJva2VyIGNvbW1hIHNlcGFyYXRlZCBxdWV1ZXMsIGlmIHNldCB0aGUgUVVFVUVTIG5hbWUgd2lsbCBiZSBpZ25vcmVkLCBpZiBlbXB0\
eSB0aGUgdmFsdWVzIGZyb20gZGVmYXVsdCBxdWV1ZXMgd2lsbCBiZSB1c2VkLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgojIEFNUSBrZXlzdG9yZS90cnV0c3RvcmUKX2FwYl9hbXFfc2VjcmV0X25hbWU6ICZfYXBiX2FtcV9zZWNyZXRfbmFtZQogIG5hbWU6IGFwYl9hbXFfc2VjcmV0X25hbWUKICB0aXRsZTogQU1RIFNlY3JldCBOYW1lCiAgcmVxdWlyZWQ6IGZhbHNlCiAgZGVzY3JpcHRpb246IFRoZSBuYW1lIG9mIGEgc2VjcmV0IGNvbnRhaW5pbmcgQU1RIFNTTCByZWxhdGVkIGZpbGVzLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2FtcV90cnVzdHN0b3JlX25hbWU6ICZfYXBi\
X2FtcV90cnVzdHN0b3JlX25hbWUKICBuYW1lOiBhcGJfYW1xX3RydXN0c3RvcmVfbmFtZQogIHRpdGxlOiBBTVEgVHJ1c3RzdG9yZSBGaWxlIE5hbWUKICBkZXNjcmlwdGlvbjogVGhlIG5hbWUgb2YgdGhlIEFNUSBTU0wgVHJ1c3QgU3RvcmUgZmlsZS4gSWYgYSBzZWNyZXQgbmFtZSBpcyBub3QgcHJvdmlkZWQsIHRoZSBzZXJ2ZXIgY2xpZW50IHRydXN0c3RvcmUgdGhhdCBpbXBvcnRzIHRoZSBicm9rZXIgY2VydGlmaWNhdGUuCiAgcmVxdWlyZWQ6IGZhbHNlCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfYW1xX3RydXN0c3RvcmVfcHdkOiAmX2FwYl9hbXFfdHJ1c3RzdG9yZV9wd2QKICBuYW1lOiBhcGJfYW1xX3RydXN0c3Rv\
cmVfcHdkCiAgdGl0bGU6IEFNUSBUcnVzdHN0b3JlIFBhc3N3b3JkCiAgZGVzY3JpcHRpb246IFRoZSBwYXNzd29yZCBmb3IgdGhlIEFNUSBUcnVzdCBTdG9yZS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X3R5cGU6IHBhc3N3b3JkCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfYW1xX2tleXN0b3JlX25hbWU6ICZfYXBiX2FtcV9rZXlzdG9yZV9uYW1lCiAgbmFtZTogYXBiX2FtcV9rZXlzdG9yZV9uYW1lCiAgdGl0bGU6IEtleXN0b3JlIEZpbGUgTmFtZQogIGRlc2NyaXB0aW9uOiBUaGUgbmFtZSBvZiB0aGUgQU1RIGtleXN0b3JlIGZpbGUuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfYW1xX2tleXN0\
b3JlX3B3ZDogJl9hcGJfYW1xX2tleXN0b3JlX3B3ZAogIG5hbWU6IGFwYl9hbXFfa2V5c3RvcmVfcHdkCiAgdGl0bGU6IEtleXN0b3JlIGFuZCBDZXJ0aWZpY2F0ZSBQYXNzd29yZAogIGRlc2NyaXB0aW9uOiBQYXNzd29yZCBwcm90ZWN0aW5nIGJvdGggdGhlIEtleXN0b3JlIGFuZCB0aGUgQ2VydGlmaWNhdGUuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgoKCiMgRXh0ZXJuYWwgU2VydmljZXMgSW50ZWdyYXRpb24KX2FwYl9zdmM6ICZfYXBiX3N2YwogIHRpdGxlOiBTZXJ2aWNlIG5hbWUKICBkZXNjcmlwdGlvbjogTmFtZSBvZiB0aGUgU2VydmljZQogIHR5cGU6IHN0cmluZwpfYXBiX2hv\
c3Q6ICZfYXBiX2hvc3QKICB0aXRsZTogSG9zdAogIGRlc2NyaXB0aW9uOiBIb3N0CiAgdHlwZTogc3RyaW5nCl9hcGJfcG9ydDogJl9hcGJfcG9ydAogIHRpdGxlOiBIb3N0IHBvcnQKICBkZXNjcmlwdGlvbjogSG9zdCBwb3J0CiAgdHlwZTogc3RyaW5nCl9hcGJfcHJvdG9jb2xfdHlwZTogJl9hcGJfcHJvdG9jb2xfdHlwZQogIHRpdGxlOiBIb3N0IFByb3RvY29sCiAgZGVzY3JpcHRpb246IEhvc3QgcHJvdG9jb2wgKGh0dHAvaHR0cHMpCiAgdHlwZTogZW51bQogIGVudW06IFsgJ2h0dHAnLCAnaHR0cHMnIF0KIyBSb3V0ZXIKX2FwYl9yb3V0ZXJfc3ZjOiAmX2FwYl9yb3V0ZXJfc3ZjCiAgPDw6ICpfYXBiX3N2YwogIG5hbWU6IGFwYl9yb3V0ZXJfc3ZjCiAgZGlzcGxheV9n\
cm91cDogUm91dGVyIEludGVncmF0aW9uCl9hcGJfcm91dGVyX2hvc3Q6ICZfYXBiX3JvdXRlcl9ob3N0CiAgPDw6ICpfYXBiX2hvc3QKICBuYW1lOiBhcGJfcm91dGVyX2hvc3QKICBkaXNwbGF5X2dyb3VwOiBSb3V0ZXIgSW50ZWdyYXRpb24KX2FwYl9yb3V0ZXJfcG9ydDogJl9hcGJfcm91dGVyX3BvcnQKICA8PDogKl9hcGJfcG9ydAogIG5hbWU6IGFwYl9yb3V0ZXJfcG9ydAogIGRpc3BsYXlfZ3JvdXA6IFJvdXRlciBJbnRlZ3JhdGlvbgpfYXBiX3JvdXRlcl9wcm90b2NvbDogJl9hcGJfcm91dGVyX3Byb3RvY29sCiAgPDw6ICpfYXBiX3Byb3RvY29sX3R5cGUKICBuYW1lOiBhcGJfcm91dGVyX3Byb3RvY29sCiAgZGlzcGxheV9ncm91cDogUm91dGVyIEludGVncmF0aW9u\
CiMgQ29udHJvbGxlcgpfYXBiX2NvbnRyb2xsZXJfc3ZjOiAmX2FwYl9jb250cm9sbGVyX3N2YwogIDw8OiAqX2FwYl9zdmMKICBuYW1lOiBhcGJfY29udHJvbGxlcl9zdmMKICBkaXNwbGF5X2dyb3VwOiBDb250cm9sbGVyIEludGVncmF0aW9uCl9hcGJfY29udHJvbGxlcl9ob3N0OiAmX2FwYl9jb250cm9sbGVyX2hvc3QKICA8PDogKl9hcGJfaG9zdAogIG5hbWU6IGFwYl9jb250cm9sbGVyX2hvc3QKICBkaXNwbGF5X2dyb3VwOiBDb250cm9sbGVyIEludGVncmF0aW9uCl9hcGJfY29udHJvbGxlcl9wb3J0OiAmX2FwYl9jb250cm9sbGVyX3BvcnQKICA8PDogKl9hcGJfcG9ydAogIG5hbWU6IGFwYl9jb250cm9sbGVyX3BvcnQKICBkaXNwbGF5X2dyb3VwOiBDb250cm9sbGVy\
IEludGVncmF0aW9uCl9hcGJfY29udHJvbGxlcl9wcm90b2NvbDogJl9hcGJfY29udHJvbGxlcl9wcm90b2NvbAogIDw8OiAqX2FwYl9wcm90b2NvbF90eXBlCiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfcHJvdG9jb2wKICBkaXNwbGF5X2dyb3VwOiBDb250cm9sbGVyIEludGVncmF0aW9uCl9hcGJfY29udHJvbGxlcl90b2tlbjogJl9hcGJfY29udHJvbGxlcl90b2tlbgogIG5hbWU6IGFwYl9jb250cm9sbGVyX3Rva2VuCiAgdGl0bGU6IENvbnRyb2xsZXIgQXV0aCBUb2tlbgogIGRlc2NyaXB0aW9uOiBDb250cm9sbGVyIGF1dGhlbnRpY2F0aW9uIFRva2VuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogQ29udHJvbGxlciBJbnRlZ3JhdGlvbgpfYXBiX2NvbnRyb2xs\
ZXJfdXNlcjogJl9hcGJfY29udHJvbGxlcl91c2VyCiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfdXNlcgogIHRpdGxlOiBDb250cm9sbGVyIFVzZXJuYW1lCiAgZGVzY3JpcHRpb246IFVzZXJuYW1lIHRvIGFjY2VzcyB0aGUgQ29udHJvbGxlcgogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IG1vbml0b3JVc2VyCl9hcGJfY29udHJvbGxlcl9wd2Q6ICZfYXBiX2NvbnRyb2xsZXJfcHdkCiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfcHdkCiAgdGl0bGU6IENvbnRyb2xsZXIgUGFzc3dvcmQKICBkZXNjcmlwdGlvbjogVXNlciBwYXNzd29yZCB0byBhY2Nlc3MgdGhlIENvbnRyb2xsZXIuIEdlbmVyYXRlZCBpZiBlbXB0eS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X3R5cGU6IHBhc3N3\
b3JkCiMgUkgtU1NPCl9hcGJfc3NvX3VybDogJl9hcGJfc3NvX3VybAogIG5hbWU6IGFwYl9zc29fdXJsCiAgdGl0bGU6IFJILVNTTyBVUkwKICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiAoU1NPKSBVUkwuIExlYXZlIGVtcHR5IHRvIGF2b2lkIHVzaW5nIFNTTy4gRm9yIGV4YW1wbGUsIGh0dHBzOi8vcmhzc28uZXhhbXBsZS5jb20vYXV0aAogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IFJlZCBIYXQgLSBTaW5nbGUgU2lnbi1PbiAoT3B0aW9uYWwpCl9hcGJfc3NvX3JlYWxtOiAmX2FwYl9zc29fcmVhbG0KICBuYW1lOiBhcGJfc3NvX3JlYWxtCiAgdGl0bGU6IFJILVNTTyBSZWFsbQogIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWdu\
LU9uIFJlYWxtIG5hbWUuIEZvciBleGFtcGxlLCByaHBhbQogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IFJlZCBIYXQgLSBTaW5nbGUgU2lnbi1PbiAoT3B0aW9uYWwpCl9hcGJfc3NvX2NsaWVudDogJl9hcGJfc3NvX2NsaWVudAogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IFJlZCBIYXQgLSBTaW5nbGUgU2lnbi1PbiAoT3B0aW9uYWwpCl9hcGJfc3NvX2NsaWVudF9zZWNyZXQ6ICZfYXBiX3Nzb19jbGllbnRfc2VjcmV0CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAogIGRpc3BsYXlfZ3JvdXA6IFJlZCBIYXQgLSBTaW5nbGUgU2lnbi1PbiAoT3B0aW9uYWwpCl9hcGJfc3NvX3VzZXI6ICZfYXBiX3Nzb191c2VyCiAgbmFtZTog\
YXBiX3Nzb191c2VyCiAgdGl0bGU6IFJILVNTTyBBZG1pbiBVc2VyCiAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gVXNlciB0byBiZSB1c2VkIHRvIGNyZWF0ZSB0aGUgQ2xpZW50IGlmIGl0IGRvZXNuJ3QgZXhpc3QuIFRoZSB1c2VyIG11c3QgYmUgYWJsZSB0byBjcmVhdGUgc2VjcmV0cyBvbiB0aGUgZ2l2ZW4gcmVhbG0uCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogUmVkIEhhdCAtIFNpbmdsZSBTaWduLU9uIChPcHRpb25hbCkKX2FwYl9zc29fcHdkOiAmX2FwYl9zc29fcHdkCiAgbmFtZTogYXBiX3Nzb19wd2QKICB0aXRsZTogUkgtU1NPIEFkbWluIFBhc3N3b3JkCiAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gUGFz\
c3dvcmQgdG8gdXNlIHRvIGNyZWF0ZSB0aGUgQ2xpZW50IGlmIGl0IGRvZXNuJ3QgZXhpc3QuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAogIGRpc3BsYXlfZ3JvdXA6IFJlZCBIYXQgLSBTaW5nbGUgU2lnbi1PbiAoT3B0aW9uYWwpCl9hcGJfc3NvX2Rpc2FibGVfc3NsX2NlcnRfdmFsaWRhdGlvbjogJl9hcGJfc3NvX2Rpc2FibGVfc3NsX2NlcnRfdmFsaWRhdGlvbgogIG5hbWU6IGFwYl9zc29fZGlzYWJsZV9zc2xfY2VydF92YWxpZGF0aW9uCiAgdGl0bGU6IFJILVNTTyBEaXNhYmxlIFNTTCBWYWxpZGF0aW9uCiAgZGVzY3JpcHRpb246IERpc2FibGUgU1NMIENlcnRpZmljYXRlIFZhbGlkYXRpb24gd2hlbiBjb25uZWN0aW5nIHRvIFJILVNTTwog\
IHR5cGU6IGJvb2xlYW4KICBkaXNwbGF5X2dyb3VwOiBSZWQgSGF0IC0gU2luZ2xlIFNpZ24tT24gKE9wdGlvbmFsKQpfYXBiX3Nzb19wcmluY2lwYWxfYXR0cmlidXRlOiAmX2FwYl9zc29fcHJpbmNpcGFsX2F0dHJpYnV0ZQogIG5hbWU6IGFwYl9zc29fcHJpbmNpcGFsX2F0dHJpYnV0ZQogIHRpdGxlOiBSSC1TU08gUHJpbmNpcGFsIEF0dHJpYnV0ZQogIGRlc2NyaXB0aW9uOiBQcmluY2lwYWwgYXR0cmlidXRlIHRvIHVzZSBhcyB1c2VybmFtZQogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IFJlZCBIYXQgLSBTaW5nbGUgU2lnbi1PbiAoT3B0aW9uYWwpCiMgTERBUCBBdXRoCl9hcGJfYXV0aF9sZGFwX3VybDogJl9hcGJfYXV0aF9sZGFwX3VybAogIG5hbWU6IGFw\
Yl9hdXRoX2xkYXBfdXJsCiAgdGl0bGU6IExEQVAgRW5kcG9pbnQKICBkZXNjcmlwdGlvbjogTERBUCBFbmRwb2ludCB0byBjb25uZWN0IGZvciBhdXRoZW50aWNhdGlvbi4gZS5nLiAibGRhcDovL215bGRhcC5leGFtcGxlLmNvbSIKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfYmluZF9kbjogJl9hcGJfYXV0aF9sZGFwX2JpbmRfZG4KICBuYW1lOiBhcGJfYXV0aF9sZGFwX2JpbmRfZG4KICB0aXRsZTogTERBUCBCaW5kIEROCiAgZGVzY3JpcHRpb246IEJpbmQgRE4gdXNlZCBmb3IgYXV0aGVudGljYXRpb24uIGUuZy4gInVpZD1hZG1pbixvdT11c2VycyxvdT1leG1hbXBsZSxvdT1jb20iCiAgdHlwZTogc3Ry\
aW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX2JpbmRfY3JlZGVudGlhbDogJl9hcGJfYXV0aF9sZGFwX2JpbmRfY3JlZGVudGlhbAogIG5hbWU6IGFwYl9hdXRoX2xkYXBfYmluZF9jcmVkZW50aWFsCiAgdGl0bGU6IExEQVAgQmluZCBDcmVkZW50aWFscwogIGRlc2NyaXB0aW9uOiBMREFQIENyZWRlbnRpYWxzIHVzZWQgZm9yIGF1dGhlbnRpY2F0aW9uCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9qYWFzX3NlY3VyaXR5X2RvbWFpbjogJl9hcGJfYXV0aF9sZGFwX2phYXNfc2VjdXJpdHlfZG9tYWluCiAgbmFtZTogYXBi\
X2F1dGhfbGRhcF9qYWFzX3NlY3VyaXR5X2RvbWFpbgogIHRpdGxlOiBMREFQIEpBQVMgU2VjdXJpdHkgRG9tYWluCiAgZGVzY3JpcHRpb246IFRoZSBKTVggT2JqZWN0TmFtZSBvZiB0aGUgSmFhc1NlY3VyaXR5RG9tYWluIHVzZWQgdG8gZGVjcnlwdCB0aGUgcGFzc3dvcmQuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX2Jhc2VfY3R4X2RuOiAmX2FwYl9hdXRoX2xkYXBfYmFzZV9jdHhfZG4KICBuYW1lOiBhcGJfYXV0aF9sZGFwX2Jhc2VfY3R4X2RuCiAgdGl0bGU6IExEQVAgQmFzZSBETgogIGRlc2NyaXB0aW9uOiBMREFQIEJhc2UgRE4gb2YgdGhlIHRvcC1sZXZlbCBjb250ZXh0IHRvIGJlZ2luIHRoZSB1\
c2VyIHNlYXJjaC4gZS5nLiAib3U9dXNlcnMsb3U9ZXhhbXBsZSxvdT1jb20iCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX2Jhc2VfZmlsdGVyOiAmX2FwYl9hdXRoX2xkYXBfYmFzZV9maWx0ZXIKICBuYW1lOiBhcGJfYXV0aF9sZGFwX2Jhc2VfZmlsdGVyCiAgdGl0bGU6IExEQVAgQmFzZSBTZWFyY2ggZmlsdGVyCiAgZGVzY3JpcHRpb246IExEQVAgc2VhcmNoIGZpbHRlciB1c2VkIHRvIGxvY2F0ZSB0aGUgY29udGV4dCBvZiB0aGUgdXNlciB0byBhdXRoZW50aWNhdGUuIFRoZSBpbnB1dCB1c2VybmFtZSBvciB1c2VyRE4gb2J0YWluZWQgZnJvbSB0aGUgbG9naW4gbW9kdWxlIGNhbGxiYWNrIGlzIHN1YnN0\
aXR1dGVkIGludG8gdGhlIGZpbHRlciBhbnl3aGVyZSBhIHswfSBleHByZXNzaW9uIGlzIHVzZWQuIEEgY29tbW9uIGV4YW1wbGUgZm9yIHRoZSBzZWFyY2ggZmlsdGVyIGlzICh1aWQ9ezB9KS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3Njb3BlOiAmX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3Njb3BlCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9zZWFyY2hfc2NvcGUKICB0aXRsZTogTERBUCBTZWFyY2ggc2NvcGUKICBkZXNjcmlwdGlvbjogVGhlIHNlYXJjaCBzY29wZSB0byB1c2UuCiAgdHlwZTogZW51bQogIGVudW06IFsgJ1NVQlRSRUVfU0NPUEUnLCAnT0JKRUNUX1NDT1BFJywgJ09ORUxFVkVM\
X1NDT1BFJyBdCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3NlYXJjaF90aW1lX2xpbWl0OiAmX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3RpbWVfbGltaXQKICBuYW1lOiBhcGJfYXV0aF9sZGFwX3NlYXJjaF90aW1lX2xpbWl0CiAgdGl0bGU6IExEQVAgU2VhcmNoIHRpbWUgbGltaXQKICBkZXNjcmlwdGlvbjogVGhlIHRpbWVvdXQgaW4gbWlsbGlzZWNvbmRzIGZvciB1c2VyIG9yIHJvbGUgc2VhcmNoZXMuIGUuZy4gIjEwMDAwIgogIHR5cGU6IG51bWJlcgogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9kaXN0aW5ndWlzaGVkX25hbWVfYXR0cmlidXRlOiAmX2FwYl9hdXRoX2xkYXBfZGlzdGluZ3Vp\
c2hlZF9uYW1lX2F0dHJpYnV0ZQogIG5hbWU6IGFwYl9hdXRoX2xkYXBfZGlzdGluZ3Vpc2hlZF9uYW1lX2F0dHJpYnV0ZQogIHRpdGxlOiBMREFQIEROIGF0dHJpYnV0ZQogIGRlc2NyaXB0aW9uOiBUaGUgbmFtZSBvZiB0aGUgYXR0cmlidXRlIGluIHRoZSB1c2VyIGVudHJ5IHRoYXQgY29udGFpbnMgdGhlIEROIG9mIHRoZSB1c2VyLiBUaGlzIG1heSBiZSBuZWNlc3NhcnkgaWYgdGhlIEROIG9mIHRoZSB1c2VyIGl0c2VsZiBjb250YWlucyBzcGVjaWFsIGNoYXJhY3RlcnMsIGJhY2tzbGFzaCBmb3IgZXhhbXBsZSwgdGhhdCBwcmV2ZW50IGNvcnJlY3QgdXNlciBtYXBwaW5nLiBJZiB0aGUgYXR0cmlidXRlIGRvZXMgbm90IGV4aXN0LCB0aGUgZW50cnnigJlzIEROIGlzIHVz\
ZWQuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3BhcnNlX3VzZXJuYW1lOiAmX2FwYl9hdXRoX2xkYXBfcGFyc2VfdXNlcm5hbWUKICBuYW1lOiBhcGJfYXV0aF9sZGFwX3BhcnNlX3VzZXJuYW1lCiAgdGl0bGU6IExEQVAgUGFyc2UgdXNlcm5hbWUKICBkZXNjcmlwdGlvbjogQSBmbGFnIGluZGljYXRpbmcgaWYgdGhlIEROIGlzIHRvIGJlIHBhcnNlZCBmb3IgdGhlIHVzZXJuYW1lLiBJZiBzZXQgdG8gdHJ1ZSwgdGhlIEROIGlzIHBhcnNlZCBmb3IgdGhlIHVzZXJuYW1lLiBJZiBzZXQgdG8gZmFsc2UgdGhlIEROIGlzIG5vdCBwYXJzZWQgZm9yIHRoZSB1c2VybmFtZS4gVGhpcyBvcHRpb24gaXMgdXNlZCB0\
b2dldGhlciB3aXRoIHVzZXJuYW1lQmVnaW5TdHJpbmcgYW5kIHVzZXJuYW1lRW5kU3RyaW5nLgogIHR5cGU6IGJvb2xlYW4KICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfYmVnaW5fc3RyaW5nOiAmX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfYmVnaW5fc3RyaW5nCiAgbmFtZTogYXBiX2F1dGhfbGRhcF91c2VybmFtZV9iZWdpbl9zdHJpbmcKICB0aXRsZTogTERBUCBVc2VybmFtZSBiZWdpbiBzdHJpbmcKICBkZXNjcmlwdGlvbjogRGVmaW5lcyB0aGUgU3RyaW5nIHdoaWNoIGlzIHRvIGJlIHJlbW92ZWQgZnJvbSB0aGUgc3RhcnQgb2YgdGhlIEROIHRvIHJldmVhbCB0aGUgdXNlcm5hbWUuIFRoaXMgb3B0aW9uIGlzIHVz\
ZWQgdG9nZXRoZXIgd2l0aCB1c2VybmFtZUVuZFN0cmluZyBhbmQgb25seSB0YWtlbiBpbnRvIGFjY291bnQgaWYgcGFyc2VVc2VybmFtZSBpcyBzZXQgdG8gdHJ1ZS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfZW5kX3N0cmluZzogJl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2VuZF9zdHJpbmcKICBuYW1lOiBhcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2VuZF9zdHJpbmcKICB0aXRsZTogTERBUCBVc2VybmFtZSBlbmQgc3RyaW5nCiAgZGVzY3JpcHRpb246IERlZmluZXMgdGhlIFN0cmluZyB3aGljaCBpcyB0byBiZSByZW1vdmVkIGZyb20gdGhlIGVuZCBvZiB0aGUgRE4gdG8gcmV2ZWFsIHRo\
ZSB1c2VybmFtZS4gVGhpcyBvcHRpb24gaXMgdXNlZCB0b2dldGhlciB3aXRoIHVzZXJuYW1lRW5kU3RyaW5nIGFuZCBvbmx5IHRha2VuIGludG8gYWNjb3VudCBpZiBwYXJzZVVzZXJuYW1lIGlzIHNldCB0byB0cnVlLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pZDogJl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lkCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pZAogIHRpdGxlOiBMREFQIFJvbGUgYXR0cmlidXRlSUQKICBkZXNjcmlwdGlvbjogTmFtZSBvZiB0aGUgYXR0cmlidXRlIGNvbnRhaW5pbmcgdGhlIHVzZXIgcm9sZXMuIGUuZy4gIm1l\
bWJlck9mIgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9yb2xlc19jdHhfZG46ICZfYXBiX2F1dGhfbGRhcF9yb2xlc19jdHhfZG4KICBuYW1lOiBhcGJfYXV0aF9sZGFwX3JvbGVzX2N0eF9kbgogIHRpdGxlOiBMREFQIFJvbGVzIFNlYXJjaCBETgogIGRlc2NyaXB0aW9uOiBUaGUgZml4ZWQgRE4gb2YgdGhlIGNvbnRleHQgdG8gc2VhcmNoIGZvciB1c2VyIHJvbGVzLiBUaGlzIGlzIG5vdCB0aGUgRE4gd2hlcmUgdGhlIGFjdHVhbCByb2xlcyBhcmUsIGJ1dCB0aGUgRE4gd2hlcmUgdGhlIG9iamVjdHMgY29udGFpbmluZyB0aGUgdXNlciByb2xlcyBhcmUuIEZvciBleGFtcGxlLCBpbiBhIE1pY3Jvc29mdCBB\
Y3RpdmUgRGlyZWN0b3J5IHNlcnZlciwgdGhpcyBpcyB0aGUgRE4gd2hlcmUgdGhlIHVzZXIgYWNjb3VudCBpcy4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfcm9sZV9maWx0ZXI6ICZfYXBiX2F1dGhfbGRhcF9yb2xlX2ZpbHRlcgogIG5hbWU6IGFwYl9hdXRoX2xkYXBfcm9sZV9maWx0ZXIKICB0aXRsZTogTERBUCBSb2xlIHNlYXJjaCBmaWx0ZXIKICBkZXNjcmlwdGlvbjogQSBzZWFyY2ggZmlsdGVyIHVzZWQgdG8gbG9jYXRlIHRoZSByb2xlcyBhc3NvY2lhdGVkIHdpdGggdGhlIGF1dGhlbnRpY2F0ZWQgdXNlci4gVGhlIGlucHV0IHVzZXJuYW1lIG9yIHVzZXJETiBvYnRhaW5lZCBmcm9tIHRoZSBsb2dp\
biBtb2R1bGUgY2FsbGJhY2sgaXMgc3Vic3RpdHV0ZWQgaW50byB0aGUgZmlsdGVyIGFueXdoZXJlIGEgezB9IGV4cHJlc3Npb24gaXMgdXNlZC4gVGhlIGF1dGhlbnRpY2F0ZWQgdXNlckROIGlzIHN1YnN0aXR1dGVkIGludG8gdGhlIGZpbHRlciBhbnl3aGVyZSBhIHsxfSBpcyB1c2VkLiBBbiBleGFtcGxlIHNlYXJjaCBmaWx0ZXIgdGhhdCBtYXRjaGVzIG9uIHRoZSBpbnB1dCB1c2VybmFtZSBpcyAobWVtYmVyPXswfSkuIEFuIGFsdGVybmF0aXZlIHRoYXQgbWF0Y2hlcyBvbiB0aGUgYXV0aGVudGljYXRlZCB1c2VyRE4gaXMgKG1lbWJlcj17MX0pLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9yb2xlX3Jl\
Y3Vyc2lvbjogJl9hcGJfYXV0aF9sZGFwX3JvbGVfcmVjdXJzaW9uCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9yb2xlX3JlY3Vyc2lvbgogIHRpdGxlOiBMREFQIFJvbGUgcmVjdXJzaW9uCiAgZGVzY3JpcHRpb246IFRoZSBudW1iZXIgb2YgbGV2ZWxzIG9mIHJlY3Vyc2lvbiB0aGUgcm9sZSBzZWFyY2ggd2lsbCBnbyBiZWxvdyBhIG1hdGNoaW5nIGNvbnRleHQuIERpc2FibGUgcmVjdXJzaW9uIGJ5IHNldHRpbmcgdGhpcyB0byAwLgogIHR5cGU6IG51bWJlcgogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9kZWZhdWx0X3JvbGU6ICZfYXBiX2F1dGhfbGRhcF9kZWZhdWx0X3JvbGUKICBuYW1lOiBhcGJfYXV0aF9sZGFwX2RlZmF1bHRfcm9s\
ZQogIHRpdGxlOiBMREFQIERlZmF1bHQgcm9sZQogIGRlc2NyaXB0aW9uOiBBIHJvbGUgaW5jbHVkZWQgZm9yIGFsbCBhdXRoZW50aWNhdGVkIHVzZXJzCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3JvbGVfbmFtZV9hdHRyaWJ1dGVfaWQ6ICZfYXBiX2F1dGhfbGRhcF9yb2xlX25hbWVfYXR0cmlidXRlX2lkCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9yb2xlX25hbWVfYXR0cmlidXRlX2lkCiAgdGl0bGU6IExEQVAgUm9sZSBuYW1lIGF0dHJpYnV0ZSBJRAogIGRlc2NyaXB0aW9uOiBOYW1lIG9mIHRoZSBhdHRyaWJ1dGUgd2l0aGluIHRoZSByb2xlQ3R4RE4gY29udGV4dCB3aGljaCBjb250YWlucyB0aGUgcm9s\
ZSBuYW1lLiBJZiB0aGUgcm9sZUF0dHJpYnV0ZUlzRE4gcHJvcGVydHkgaXMgc2V0IHRvIHRydWUsIHRoaXMgcHJvcGVydHkgaXMgdXNlZCB0byBmaW5kIHRoZSByb2xlIG9iamVjdOKAmXMgbmFtZSBhdHRyaWJ1dGUuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3BhcnNlX3JvbGVfbmFtZV9mcm9tX2RuOiAmX2FwYl9hdXRoX2xkYXBfcGFyc2Vfcm9sZV9uYW1lX2Zyb21fZG4KICBuYW1lOiBhcGJfYXV0aF9sZGFwX3BhcnNlX3JvbGVfbmFtZV9mcm9tX2RuCiAgdGl0bGU6IExEQVAgUm9sZSBETiBjb250YWlucyByb2xlTmFtZUF0dHJpYnV0ZUlECiAgZGVzY3JpcHRpb246IEEgZmxhZyBpbmRpY2F0aW5nIGlm\
IHRoZSBETiByZXR1cm5lZCBieSBhIHF1ZXJ5IGNvbnRhaW5zIHRoZSByb2xlTmFtZUF0dHJpYnV0ZUlELiBJZiBzZXQgdG8gdHJ1ZSwgdGhlIEROIGlzIGNoZWNrZWQgZm9yIHRoZSByb2xlTmFtZUF0dHJpYnV0ZUlELiBJZiBzZXQgdG8gZmFsc2UsIHRoZSBETiBpcyBub3QgY2hlY2tlZCBmb3IgdGhlIHJvbGVOYW1lQXR0cmlidXRlSUQuIFRoaXMgZmxhZyBjYW4gaW1wcm92ZSB0aGUgcGVyZm9ybWFuY2Ugb2YgTERBUCBxdWVyaWVzLgogIHR5cGU6IGJvb2xlYW4KICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaXNfZG46ICZfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pc19kbgogIG5hbWU6IGFwYl9h\
dXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaXNfZG4KICB0aXRsZTogTERBUCBSb2xlIEF0dHJpYnV0ZSBJRCBpcyBETgogIGRlc2NyaXB0aW9uOiBXaGV0aGVyIG9yIG5vdCB0aGUgcm9sZUF0dHJpYnV0ZUlEIGNvbnRhaW5zIHRoZSBmdWxseS1xdWFsaWZpZWQgRE4gb2YgYSByb2xlIG9iamVjdC4gSWYgZmFsc2UsIHRoZSByb2xlIG5hbWUgaXMgdGFrZW4gZnJvbSB0aGUgdmFsdWUgb2YgdGhlIHJvbGVOYW1lQXR0cmlidXRlSWQgYXR0cmlidXRlIG9mIHRoZSBjb250ZXh0IG5hbWUuIENlcnRhaW4gZGlyZWN0b3J5IHNjaGVtYXMsIHN1Y2ggYXMgTWljcm9zb2Z0IEFjdGl2ZSBEaXJlY3RvcnksIHJlcXVpcmUgdGhpcyBhdHRyaWJ1dGUgdG8gYmUgc2V0IHRvIHRydWUuCiAgdHlw\
ZTogYm9vbGVhbgogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9yZWZlcnJhbF91c2VyX2F0dHJpYnV0ZV9pZF90b19jaGVjazogJl9hcGJfYXV0aF9sZGFwX3JlZmVycmFsX3VzZXJfYXR0cmlidXRlX2lkX3RvX2NoZWNrCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9yZWZlcnJhbF91c2VyX2F0dHJpYnV0ZV9pZF90b19jaGVjawogIHRpdGxlOiBMREFQIFJlZmVycmFsIHVzZXIgYXR0cmlidXRlIElECiAgZGVzY3JpcHRpb246IElmIHlvdSBhcmUgbm90IHVzaW5nIHJlZmVycmFscywgdGhpcyBvcHRpb24gY2FuIGJlIGlnbm9yZWQuIFdoZW4gdXNpbmcgcmVmZXJyYWxzLCB0aGlzIG9wdGlvbiBkZW5vdGVzIHRoZSBhdHRyaWJ1dGUgbmFtZSB3\
aGljaCBjb250YWlucyB1c2VycyBkZWZpbmVkIGZvciBhIGNlcnRhaW4gcm9sZSwgZm9yIGV4YW1wbGUgbWVtYmVyLCBpZiB0aGUgcm9sZSBvYmplY3QgaXMgaW5zaWRlIHRoZSByZWZlcnJhbC4gVXNlcnMgYXJlIGNoZWNrZWQgYWdhaW5zdCB0aGUgY29udGVudCBvZiB0aGlzIGF0dHJpYnV0ZSBuYW1lLiBJZiB0aGlzIG9wdGlvbiBpcyBub3Qgc2V0LCB0aGUgY2hlY2sgd2lsbCBhbHdheXMgZmFpbCwgc28gcm9sZSBvYmplY3RzIGNhbm5vdCBiZSBzdG9yZWQgaW4gYSByZWZlcnJhbCB0cmVlLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcm9sZXNfcHJvcGVydGllczogJl9hcGJfYXV0aF9yb2xl\
X21hcHBlcl9yb2xlc19wcm9wZXJ0aWVzCiAgbmFtZTogYXBiX2F1dGhfcm9sZV9tYXBwZXJfcm9sZXNfcHJvcGVydGllcwogIHRpdGxlOiBSb2xlTWFwcGluZyByb2xlc1Byb3BlcnRpZXMgZmlsZSBwYXRoCiAgZGVzY3JpcHRpb246IFdoZW4gcHJlc2VudCwgdGhlIFJvbGVNYXBwaW5nIExvZ2luIE1vZHVsZSB3aWxsIGJlIGNvbmZpZ3VyZWQgdG8gdXNlIHRoZSBwcm92aWRlZCBmaWxlLiBUaGlzIHByb3BlcnR5IGRlZmluZXMgdGhlIGZ1bGx5LXF1YWxpZmllZCBmaWxlIHBhdGggYW5kIG5hbWUgb2YgYSBwcm9wZXJ0aWVzIGZpbGUgb3IgcmVzb3VyY2Ugd2hpY2ggbWFwcyByb2xlcyB0byByZXBsYWNlbWVudCByb2xlcy4gVGhlIGZvcm1hdCBpcyBvcmlnaW5hbF9yb2xlPXJv\
bGUxLHJvbGUyLHJvbGUzCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogUm9sZU1hcHBpbmcgKE9wdGlvbmFsKQpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcmVwbGFjZV9yb2xlOiAmX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JlcGxhY2Vfcm9sZQogIG5hbWU6IGFwYl9hdXRoX3JvbGVfbWFwcGVyX3JlcGxhY2Vfcm9sZQogIHRpdGxlOiBSb2xlTWFwcGluZyByZXBsYWNlUm9sZSBwcm9wZXJ0eQogIGRlc2NyaXB0aW9uOiBXaGV0aGVyIHRvIGFkZCB0byB0aGUgY3VycmVudCByb2xlcywgb3IgcmVwbGFjZSB0aGUgY3VycmVudCByb2xlcyB3aXRoIHRoZSBtYXBwZWQgb25lcy4gUmVwbGFjZXMgaWYgc2V0IHRvIHRydWUuCiAgdHlwZTogYm9vbGVhbgogIGRpc3BsYXlfZ3Jv\
dXA6IFJvbGVNYXBwaW5nIChPcHRpb25hbCkKIyBTbWFydCBSb3V0ZXIgUHJvcHBlcnRpZXMKX2FwYl9zbWFydHJvdXRlcl9wcm90b2NvbDogJl9hcGJfc21hcnRyb3V0ZXJfcHJvdG9jb2wKICA8PDogKl9hcGJfcHJvdG9jb2xfdHlwZQogIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9wcm90b2NvbAogIGRlZmF1bHQ6IGh0dHAKICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKX2FwYl9zbWFydHJvdXRlcl91c2VfZXh0ZXJuYWxfcm91dGU6ICZfYXBiX3NtYXJ0cm91dGVyX3VzZV9leHRlcm5hbF9yb3V0ZQogIG5hbWU6IGFwYl9zbWFydHJvdXRlcl91c2VfZXh0ZXJuYWxfcm91dGUKICB0eXBlOiBib29sZWFuCiAgZGVmYXVsdDogZmFsc2UKICBkZXNjcmlwdGlvbjogSWYgZW5h\
YmxlZCwgQnVzaW5lc2VzIENlbnRyYWwgd2lsbCB1c2UgdGhlIGV4dGVybmFsIHNtYXJ0cm91dGVyIHJvdXRlIHRvIGNvbW11bmljYXRlIHdpdGguIE5vdGUgdGhhdCwgdmFsaWQgU1NMIGNlcnRpZmljYXRlcyBzaG91bGQgYmUgdXNlZC4KICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKCiMgQVBCIFNwZWMgdmVyc2lvbgp2ZXJzaW9uOiAxLjAKbmFtZTogcmhwYW0tYXBiCmRlc2NyaXB0aW9uOiBSZWQgSGF0IFByb2Nlc3MgQXV0b21hdGlvbiBNYW5hZ2VyIChBUEIpIC0gRGVwcmVjYXRlZApiaW5kYWJsZTogZmFsc2UKYXN5bmM6IHVuc3VwcG9ydGVkCm1ldGFkYXRhOgogIGRpc3BsYXlOYW1lOiBSZWQgSGF0IFByb2Nlc3MgQXV0b21hdGlvbiBNYW5hZ2VyIChBUEIpCiAg\
ZG9jdW1lbnRhdGlvblVybDogaHR0cHM6Ly9kZXZlbG9wZXJzLnJlZGhhdC5jb20vcHJvZHVjdHMvYnBtc3VpdGUvZG9jcy1hbmQtYXBpcy8KICBsb25nRGVzY3JpcHRpb246CiAgICBBcyBhIHN5c3RlbSBlbmdpbmVlciwgeW91IGNhbiBkZXBsb3kgYSBSZWQgSGF0IFByb2Nlc3MgQXV0b21hdGlvbiBNYW5hZ2VyCiAgICBlbnZpcm9ubWVudCBvbiBSZWQgSGF0IE9wZW5TaGlmdCBDb250YWluZXIgUGxhdGZvcm0gdG8gcHJvdmlkZSBhbiBpbmZyYXN0cnVjdHVyZQogICAgdG8gZGV2ZWxvcCBvciBleGVjdXRlIHByb2Nlc3NlcyBhbmQgb3RoZXIgYnVzaW5lc3MgYXNzZXRzLgogICAgRm9yIHVzZSB3aXRoIFJlZCBIYXQgT3BlblNoaWZ0IENvbnRhaW5lciBQbGF0Zm9ybSB2ZXJz\
aW9uIDMuMTEuIERlcHJlY2F0ZWQgc2luY2UgUmVkIEhhdCBQcm9jZXNzIEF1dG9tYXRpb24gTWFuYWdlciB2ZXJzaW9uIDcuNTsgY29uc2lkZXIgdXNpbmcgdGhlIFJlZCBIYXQgQnVzaW5lc3MgQXV0b21hdGlvbiBPcGVyYXRvci4KCiAgICBNYWtlIHN1cmUgdGhlIHJlcXVpcmVkIEltYWdlU3RyZWFtVGFncyBleGlzdCBpbiB0aGUgb3BlbnNoaWZ0IHByb2plY3QuIFNlZSBiZWxvdyBmb3IgdGhlIHJlcXVpcmVkIGltYWdlcwogIGNvbnNvbGUub3BlbnNoaWZ0LmlvL2ljb25DbGFzczogaWNvbi1wcm9jZXNzc2VydmVyCiAgcHJvdmlkZXJEaXNwbGF5TmFtZTogIlJlZCBIYXQsIEluYy4iCiAgc2VydmljZU5hbWU6IHJocGFtCiAgZGVwZW5kZW5jaWVzOgogICAgLSAncmVnaXN0\
cnkucmVkaGF0LmlvL3JocGFtLTcvcmhwYW03NS1raWVzZXJ2ZXItb3BlbnNoaWZ0JwogICAgLSAncmVnaXN0cnkucmVkaGF0LmlvL3JocGFtLTcvcmhwYW03NS1idXNpbmVzc2NlbnRyYWwtb3BlbnNoaWZ0JwogICAgLSAncmVnaXN0cnkucmVkaGF0LmlvL3JocGFtLTcvcmhwYW03NS1jb250cm9sbGVyLW9wZW5zaGlmdCcKICAgIC0gJ3JlZ2lzdHJ5LnJlZGhhdC5pby9yaHBhbS03L3JocGFtNzUtc21hcnRyb3V0ZXItb3BlbnNoaWZ0JwogICAgLSAncmVnaXN0cnkucmVkaGF0LmlvL3JocGFtLTcvcmhwYW03NS1idXNpbmVzc2NlbnRyYWwtbW9uaXRvcmluZy1vcGVuc2hpZnQnCiAgICAtICdyZWdpc3RyeS5yZWRoYXQuaW8vcmhzY2wvcG9zdGdyZXNxbC0xMC1yaGVsNycKICAg\
IC0gJ3JlZ2lzdHJ5LnJlZGhhdC5pby9yaHNjbC9teXNxbC01Ny1yaGVsNycKdGFnczoKICAtIGpicG0KICAtIHJocGFtCiAgLSBwcm9jZXNzc2VydmVyCiAgLSBhdXRob3JpbmcKICAtIGpib3NzCnBsYW5zOgogIC0gbmFtZTogdHJpYWwKICAgIGRlc2NyaXB0aW9uOgogICAgICBEZXBsb3kgYW4gZXBoZW1lcmFsIGVudmlyb25tZW50IGZvciB0ZXN0aW5nIEJ1c2luZXNzIENlbnRyYWwgYW5kIFByb2Nlc3MgU2VydmVyLiBBIGRlZmF1bHQgYGFkbWluVXNlcmAgdXNlciB3aWxsIGJlIGNyZWF0ZWQgd2l0aCB0aGUgYFJlZEhhdGAgcGFzc3dvcmQuCiAgICAgIEluIGNhc2UgdGhlIGdlbmVyYXRlZCByb3V0ZXMgbmVlZCB0byBiZSBvdmVycmlkZGVuLCBpdCBpcyBwb3NzaWJsZSB0\
byBzZXQgY3VzdG9tIHJvdXRlcyBmb3IgYm90aCBhcHBsaWNhdGlvbnMuCiAgICBmcmVlOiB0cnVlCiAgICBtZXRhZGF0YToKICAgICAgZGlzcGxheU5hbWU6IEV2YWx1YXRpb24gRW52aXJvbm1lbnQKICAgIHBhcmFtZXRlcnM6CiAgICAgIC0gPDw6ICpfYXBiX2J1c2luZXNzY2VudHJhbF9ob3N0bmFtZQogICAgICAgIHRpdGxlOiBCdXNpbmVzcyBDZW50cmFsIFB1YmxpYyBIb3N0bmFtZQogICAgICAtIDw8OiAqX2FwYl9raWVzZXJ2ZXJfaG9zdG5hbWUKICAgICAgICB0aXRsZTogUHJvY2VzcyBTZXJ2ZXIgUHVibGljIEhvc3RuYW1lCiAgICAgIC0gKl9hcGJfaW1hZ2Vfc3RyZWFtX3RhZwoKICAtIG5hbWU6IGF1dGhvcmluZwogICAgZGVzY3JpcHRpb246CiAgICAgIEFuIGVu\
dmlyb25tZW50IGZvciBjcmVhdGluZyBhbmQgbW9kaWZ5aW5nIHByb2Nlc3NlcyB1c2luZyBCdXNpbmVzcyBDZW50cmFsLiBJdCBjb25zaXN0cyBvZgogICAgICBwb2RzIHRoYXQgcHJvdmlkZSBCdXNpbmVzcyBDZW50cmFsIGZvciB0aGUgYXV0aG9yaW5nIHdvcmsgYW5kIGEgUHJvY2VzcyBTZXJ2ZXIgZm9yIHRlc3QgZXhlY3V0aW9uIG9mIHRoZSBwcm9jZXNzZXMuCiAgICBmcmVlOiB0cnVlCiAgICBtZXRhZGF0YToKICAgICAgZGlzcGxheU5hbWU6IEF1dGhvcmluZwogICAgcGFyYW1ldGVyczoKICAgICAgIyBDb21tb24gQ3JlZGVudGlhbHMKICAgICAgLSAqX2FwYl9raWVfYWRtaW5fdXNlcgogICAgICAtICpfYXBiX2tpZV9hZG1pbl9wd2QKICAgICAgLSAqX2FwYl9pbWFn\
ZV9zdHJlYW1fdGFnCgogICAgICAjIEJ1c2luZXNzIENlbnRyYWwKICAgICAgLSA8PDogKl9hcGJfdm9sdW1lX3NpemUKICAgICAgICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX3ZvbHVtZV9zaXplCiAgICAgICAgZGVzY3JpcHRpb246IFNwZWNpZnkgdGhlIFBlcnNpc3RlbnQgVm9sdW1lIENsYWltIHNpemUgdG8gY3JlYXRlIGZvciBzdG9yaW5nIHRoZSBXb3Jrc3BhY2UuIEZvciBleGFtcGxlLCAxR2kKICAgICAgICBkZWZhdWx0OiAxR2kKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCiAgICAgICMgS2V5c3RvcmUgYW5kIFNlY3JldAogICAgICAtIDw8OiAqX2FwYl9idXNpbmVzc2NlbnRyYWxfc2VjcmV0X25hbWUKICAgICAgICBkaXNwbGF5X2dy\
b3VwOiBCdXNpbmVzcyBDZW50cmFsCiAgICAgIC0gPDw6ICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9uYW1lCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbAogICAgICAtIDw8OiAqX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfYWxpYXMKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCiAgICAgIC0gPDw6ICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9wd2QKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCiAgICAgICMgSG9zdG5hbWUKICAgICAgLSA8PDogKl9hcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJh\
bAogICAgICAjIE9DUCBFbmFibGVtZW50CiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl9nbG9iYWxfZGlzY292ZXJ5CiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl9wcmVmZXJfa2llc2VydmVyX3N2YwogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfdGVtcGxhdGVfY2FjaGVfdHRsCiAgICAgICMgR2l0IGhvb2tzCiAgICAgIC0gKl9hcGJfZ2l0X2hvb2tzX2RpcgogICAgICAjIE90aGVyIHVzZXJzCiAgICAgIC0gPDw6ICpfYXBiX2NvbnRyb2xsZXJfdXNlcgogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgLSA8PDogKl9hcGJfY29udHJvbGxlcl9wd2QKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCiAgICAgIC0gKl9hcGJf\
YnVzaW5lc3NjZW50cmFsX21hdmVuX3JlcG9fdXNlcgogICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9tYXZlbl9yZXBvX3B3ZAoKICAgICAgIyBQcm9jZXNzIFNlcnZlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9tb2RlCgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9kYl90eXBlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2RiX3NpemUKCiAgICAgICMgS2V5c3RvcmUgYW5kIFNlY3JldAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9zZWNyZXRfbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9uYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2tleXN0b3JlX2FsaWFzCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2tleXN0b3JlX3B3ZAoKICAgICAgLSAq\
X2FwYl9raWVzZXJ2ZXJfdXNlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9wd2QKICAgICAgLSA8PDogKl9hcGJfa2llc2VydmVyX2hvc3RuYW1lCiAgICAgICAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfc3RhcnR1cF9zdHJhdGVneQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9pbWFnZV9zdHJlYW1fbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9wcm9tZXRoZXVzX2V4dF9kaXNhYmxlZAoKICAgICAgIyBFeHRlcm5hbCBEYXRhYmFzZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kcml2ZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZGlhbGVjdAogICAgICAtICpfYXBiX2tp\
ZXNlcnZlcl9leHRlcm5hbF9kYl9ob3N0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3BvcnQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl91cmwKCiAgICAgICMgSk1TCiAgICAgIC0gKl9hcGJfZW5hYmxlX2tpZXNlcnZlcl9qbXNfaW50ZWdyYXRpb24KICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9leGVjdXRvcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3JfdHJhbnNhY3RlZAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVxdWVzdAogICAgICAt\
ICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVzcG9uc2UKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9zaWduYWwKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3NpZ25hbAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX2F1ZGl0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9hdWRpdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfYXVkaXRfdHJhbnNhY3RlZAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfdXNlcm5hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3Bhc3N3b3JkCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19hbXFfcXVldWVzCiAgICAgIC0gKl9hcGJfYW1xX3NlY3JldF9u\
YW1lCiAgICAgIC0gKl9hcGJfYW1xX3RydXN0c3RvcmVfbmFtZQogICAgICAtICpfYXBiX2FtcV90cnVzdHN0b3JlX3B3ZAogICAgICAtICpfYXBiX2FtcV9rZXlzdG9yZV9uYW1lCiAgICAgIC0gKl9hcGJfYW1xX2tleXN0b3JlX3B3ZAoKICAgICAgIyBNYXZlbgogICAgICAtICpfYXBiX21hdmVuX21pcnJvcl91cmwKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3VybAogICAgICAtICpfYXBiX21hdmVuX3JlcG9faWQKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3VzZXIKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3B3ZAoKICAgICAgIyBSSCAtIFNTTwogICAgICAtICpfYXBiX3Nzb191cmwKICAgICAgLSAqX2FwYl9zc29fcmVhbG0KICAgICAgLSA8PDogKl9hcGJfc3NvX2Ns\
aWVudAogICAgICAgIG5hbWU6IGFwYl9zc29fYnVzaW5lc3NjZW50cmFsX2NsaWVudAogICAgICAgIHRpdGxlOiBSSC1TU08gQnVzaW5lc3MgQ2VudHJhbCAtIENsaWVudAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBuYW1lIGZvciBCdXNpbmVzcyBDZW50cmFsLiBJZiB0aGUgc2VjcmV0LCB1c2VyIGFuZCBwYXNzd29yZCBhcmUgcHJvdmlkZWQgaXQgd2lsbCBiZSBjcmVhdGVkLiBGb3IgZXhhbXBsZSwgYnVzaW5lc3NjZW50cmFsCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnRfc2VjcmV0CiAgICAgICAgbmFtZTogYXBiX3Nzb19idXNpbmVzc2NlbnRyYWxfY2xpZW50X3NlY3JldAogICAgICAgIHRpdGxlOiBSSC1TU08gQnVz\
aW5lc3MgQ2VudHJhbCAtIENsaWVudCBTZWNyZXQKICAgICAgICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgc2VjcmV0IGZvciBCdXNpbmVzcyBDZW50cmFsLgogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50CiAgICAgICAgbmFtZTogYXBiX2tpZXNlcnZlcl9zc29fY2xpZW50CiAgICAgICAgdGl0bGU6IFJILVNTTyBQcm9jZXNzIFNlcnZlciAtIENsaWVudAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBuYW1lIGZvciBQcm9jZXNzIFNlcnZlci4gSWYgdGhlIHNlY3JldCwgdXNlciBhbmQgcGFzc3dvcmQgYXJlIHByb3ZpZGVkIGl0IHdpbGwgYmUgY3JlYXRlZC4gRm9yIGV4YW1wbGUsIGtpZXNl\
cnZlcgogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc3NvX2NsaWVudF9zZWNyZXQKICAgICAgICB0aXRsZTogUkgtU1NPIFByb2Nlc3MgU2VydmVyIC0gQ2xpZW50IFNlY3JldAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBzZWNyZXQgZm9yIFByb2Nlc3MgU2VydmVyLgogICAgICAtICpfYXBiX3Nzb191c2VyCiAgICAgIC0gKl9hcGJfc3NvX3B3ZAogICAgICAtICpfYXBiX3Nzb19kaXNhYmxlX3NzbF9jZXJ0X3ZhbGlkYXRpb24KICAgICAgLSAqX2FwYl9zc29fcHJpbmNpcGFsX2F0dHJpYnV0ZQoKICAgICAgIyBMREFQCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFw\
X3VybAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iaW5kX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2JpbmRfY3JlZGVudGlhbAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9qYWFzX3NlY3VyaXR5X2RvbWFpbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iYXNlX2N0eF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iYXNlX2ZpbHRlcgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfc2NvcGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3RpbWVfbGltaXQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfZGlzdGluZ3Vpc2hlZF9uYW1lX2F0dHJpYnV0ZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9wYXJzZV91c2VybmFtZQogICAgICAtICpfYXBiX2F1dGhf\
bGRhcF91c2VybmFtZV9iZWdpbl9zdHJpbmcKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfZW5kX3N0cmluZwogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pZAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlc19jdHhfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9maWx0ZXIKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9yZWN1cnNpb24KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfZGVmYXVsdF9yb2xlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfbmFtZV9hdHRyaWJ1dGVfaWQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcGFyc2Vfcm9sZV9uYW1lX2Zyb21fZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9s\
ZV9hdHRyaWJ1dGVfaXNfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcmVmZXJyYWxfdXNlcl9hdHRyaWJ1dGVfaWRfdG9fY2hlY2sKCiAgICAgICMgUm9sZU1hcHBpbmcKICAgICAgLSAqX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JvbGVzX3Byb3BlcnRpZXMKICAgICAgLSAqX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JlcGxhY2Vfcm9sZQoKICAtIG5hbWU6IGltbXV0YWJsZS1raWUKICAgIGRlc2NyaXB0aW9uOgogICAgICBJbiB0aGlzIGVudmlyb25tZW50LCB3aGVuIHlvdSBkZXBsb3kgYSBQcm9jZXNzIFNlcnZlciBwb2QsIGl0IGJ1aWxkcyBhbiBpbWFnZSB0aGF0IGxvYWRzIGFuZCBzdGFydHMKICAgICAgYSBwcm9jZXNzIG9yIGdyb3VwIG9mIHByb2Nlc3Nlcy4gWW91IGNh\
bm5vdCBzdG9wIGFueSBwcm9jZXNzIG9uIHRoZSBwb2Qgb3IgYWRkIGFueSBuZXcgcHJvY2VzcyB0byB0aGUgcG9kLgogICAgICBJZiB5b3Ugd2FudCB0byB1c2UgYW5vdGhlciB2ZXJzaW9uIG9mIGEgcHJvY2VzcyBvciBtb2RpZnkgdGhlIGNvbmZpZ3VyYXRpb24gaW4gYW55IG90aGVyIHdheSwgeW91IGRlcGxveSBhIG5ldwogICAgICBzZXJ2ZXIgaW1hZ2UgYW5kIGRpc3BsYWNlIHRoZSBvbGQgb25lLgogICAgZnJlZTogdHJ1ZQogICAgbWV0YWRhdGE6CiAgICAgIGRpc3BsYXlOYW1lOiBJbW11dGFibGUgU2VydmVyIC0gUHJvY2VzcyBTZXJ2ZXIKICAgIHBhcmFtZXRlcnM6CiAgICAgICMgQ29tbW9uIENyZWRlbnRpYWxzCiAgICAgIC0gKl9hcGJfa2llX2FkbWluX3VzZXIK\
ICAgICAgLSAqX2FwYl9raWVfYWRtaW5fcHdkCiAgICAgIC0gKl9hcGJfaW1hZ2Vfc3RyZWFtX3RhZwogICAgICAjIEhBCiAgICAgIC0gPDw6ICpfYXBiX3JlcGxpY2FzCiAgICAgICAgbmFtZTogYXBiX2tpZXNlcnZlcl9yZXBsaWNhcwogICAgICAgIGRlc2NyaXB0aW9uOiBOdW1iZXIgb2YgUmVwbGljYXMgb2YgdGhlIFByb2Nlc3MgU2VydmVyIHRoYXQgd2lsbCBiZSBpbml0aWFsbHkgZGVwbG95ZWQKICAgICAgICBkZWZhdWx0OiAyCgogICAgICAjIEFydGlmYWN0IFNvdXJjZQogICAgICAtIG5hbWU6IGFwYl9raWVzZXJ2ZXJfY29udGFpbmVyX2RlcGxveW1lbnQKICAgICAgICB0aXRsZTogUHJvY2VzcyBTZXJ2ZXIgQ29udGFpbmVyIERlcGxveW1lbnQKICAgICAgICBkZXNj\
cmlwdGlvbjogJ0tJRSBTZXJ2ZXIgQ29udGFpbmVyIGRlcGxveW1lbnQgY29uZmlndXJhdGlvbiB3aXRoIG9wdGlvbmFsIGFsaWFzLiBGb3JtYXQ6IGNvbnRhaW5lcklkPWdyb3VwSWQ6YXJ0aWZhY3RJZDp2ZXJzaW9ufGMyKGFsaWFzMik9ZzI6YTI6djInCiAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICBkaXNwbGF5X2dyb3VwOiBBcnRpZmFjdCBzb3VyY2UKICAgICAgLSBuYW1lOiBhcGJfa2llc2VydmVyX3NvdXJjZV91cmwKICAgICAgICB0aXRsZTogR2l0IFJlcG9zaXRvcnkgVVJMCiAgICAgICAgZGVzY3JpcHRpb246IEdpdCBzb3VyY2UgVVJJIGZvciBhcHBsaWNhdGlvbi4gRm9yIGV4YW1wbGUsIGh0dHBzOi8vZ2l0aHViLmNv\
bS9qYm9zcy1jb250YWluZXItaW1hZ2VzL3JocGFtLTctb3BlbnNoaWZ0LWltYWdlLmdpdAogICAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgZGlzcGxheV9ncm91cDogQXJ0aWZhY3Qgc291cmNlCiAgICAgIC0gbmFtZTogYXBiX2tpZXNlcnZlcl9zb3VyY2VfcmVmCiAgICAgICAgdGl0bGU6IEdpdCBSZXBvc2l0b3J5IFJlZmVyZW5jZQogICAgICAgIGRlc2NyaXB0aW9uOiBHaXQgYnJhbmNoL3RhZyByZWZlcmVuY2UuIEZvciBleGFtcGxlLCA3LjUuMC5HQSBvciBtYXN0ZXIKICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEFydGlmYWN0IHNvdXJjZQogICAgICAt\
IG5hbWU6IGFwYl9raWVzZXJ2ZXJfc291cmNlX2NvbnRleHQKICAgICAgICB0aXRsZTogR2l0IFJlcG9zaXRvcnkgQ29udGV4dCBEaXIKICAgICAgICBkZXNjcmlwdGlvbjogUGF0aCB3aXRoaW4gR2l0IHByb2plY3QgdG8gYnVpbGQ7IGVtcHR5IGZvciByb290IHByb2plY3QgZGlyZWN0b3J5LiBGb3IgZXhhbXBsZSwgcXVpY2tzdGFydHMvbGlicmFyeS1wcm9jZXNzL2xpYnJhcnkKICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICBkaXNwbGF5X2dyb3VwOiBBcnRpZmFjdCBzb3VyY2UKICAgICAgLSBuYW1lOiBhcGJfa2llc2VydmVyX2dpdGh1Yl93ZWJob29rX3NlY3JldAogICAgICAgIHRpdGxlOiBHaXRodWIgV2ViaG9vayBTZWNyZXQKICAgICAgICBkZXNjcmlwdGlvbjog\
U2VjcmV0IGtleSB0byB1c2Ugd2hlbiBjb25maWd1cmluZyBhIEdpdEh1YiBXZWJob29rLiBHZW5lcmF0ZWQgaWYgZW1wdHkuCiAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgZGlzcGxheV9ncm91cDogQXJ0aWZhY3Qgc291cmNlCiAgICAgIC0gbmFtZTogYXBiX2tpZXNlcnZlcl9nZW5lcmljX3dlYmhvb2tfc2VjcmV0CiAgICAgICAgdGl0bGU6IEdlbmVyaWMgV2ViaG9vayBTZWNyZXQKICAgICAgICBkZXNjcmlwdGlvbjogU2VjcmV0IGtleSB0byB1c2Ugd2hlbiBjb25maWd1cmluZyBhIEdlbmVyaWMgV2ViaG9vay4gR2VuZXJhdGVkIGlmIGVtcHR5LgogICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEFydGlmYWN0IHNvdXJjZQogICAgICAt\
IG5hbWU6IGFwYl9raWVzZXJ2ZXJfYXJ0aWZhY3RfZGlyCiAgICAgICAgdGl0bGU6IEFydGlmYWN0IGRpcmVjdG9yaWVzCiAgICAgICAgZGVzY3JpcHRpb246IExpc3Qgb2YgZGlyZWN0b3JpZXMgZnJvbSB3aGljaCBhcmNoaXZlcyB3aWxsIGJlIGNvcGllZCBpbnRvIHRoZSBkZXBsb3ltZW50IGZvbGRlci4gSWYgdW5zcGVjaWZpZWQsIGFsbCBhcmNoaXZlcyBpbiAvdGFyZ2V0IHdpbGwgYmUgY29waWVkLgogICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEFydGlmYWN0IHNvdXJjZQogICAgICAtIDw8OiAqX2FwYl9tYXZlbl9taXJyb3JfdXJsCiAgICAgICAgZGVzY3JpcHRpb246IE1hdmVuIE1pcnJvciB0byB1c2UgZm9yIFMySSBidWlsZHMKICAg\
ICAgICBkaXNwbGF5X2dyb3VwOiBBcnRpZmFjdCBzb3VyY2UKCiAgICAgICMgTWF2ZW4KICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3VybAogICAgICAtICpfYXBiX21hdmVuX3JlcG9faWQKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3VzZXIKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3B3ZAoKICAgICAgIyBKTVMKICAgICAgLSAqX2FwYl9lbmFibGVfa2llc2VydmVyX2ptc19pbnRlZ3JhdGlvbgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3IKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2V4ZWN1dG9yCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcl90cmFuc2FjdGVkCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19x\
dWV1ZV9yZXF1ZXN0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXNwb25zZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX3NpZ25hbAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfc2lnbmFsCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfYXVkaXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2F1ZGl0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19hdWRpdF90cmFuc2FjdGVkCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc191c2VybmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcGFzc3dvcmQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2FtcV9xdWV1ZXMKICAgICAg\
LSAqX2FwYl9hbXFfc2VjcmV0X25hbWUKICAgICAgLSAqX2FwYl9hbXFfdHJ1c3RzdG9yZV9uYW1lCiAgICAgIC0gKl9hcGJfYW1xX3RydXN0c3RvcmVfcHdkCiAgICAgIC0gKl9hcGJfYW1xX2tleXN0b3JlX25hbWUKICAgICAgLSAqX2FwYl9hbXFfa2V5c3RvcmVfcHdkCgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9tb2RlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2RiX3R5cGUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZGJfc2l6ZQogICAgICAjIEtleXN0b3JlIGFuZCBTZWNyZXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfc2VjcmV0X25hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9h\
bGlhcwogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9wd2QKCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3VzZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfcHdkCiAgICAgIC0gPDw6ICpfYXBiX2tpZXNlcnZlcl9ob3N0bmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCiAgICAgIC0gPDw6ICpfYXBiX2tpZXNlcnZlcl9zdGFydHVwX3N0cmF0ZWd5CiAgICAgICAgZGVzY3JpcHRpb246ICJXaGVuIHNldCB0byBPcGVuU2hpZnRTdGFydHVwU3RyYXRlZ3ksIGFsbG93cyBLSUUgc2VydmVyIHRvIHN0YXJ0IHVwIGluZGVwZW5kZW50bHkgdXNpbmcgc2hhcmVkIHN0YXRlIGZyb20gT3BlblNoaWZ0IEFQSSBzZXJ2aWNlOyB3aGVuIHNldCB0byBM\
b2NhbENvbnRhaW5lcnNTdGFydHVwU3RyYXRlZ3ksIGFsbG93cyBLSUUgc2VydmVyIHRvIHN0YXJ0IHVwIGFuZCBmdW5jdGlvbiB3aXRoIGxvY2FsIGNvbmZpZ3VyYXRpb24sIGV2ZW4gd2hlbiBhIGNvbnRyb2xsZXIgaXMgY29uZmlndXJlZCBhbmQgdW5hdmFpbGFibGUuIERlZmF1bHQ6IE9wZW5TaGlmdFN0YXJ0dXBTdHJhdGVneSIKICAgICAgICBlbnVtOiBbJ09wZW5TaGlmdFN0YXJ0dXBTdHJhdGVneScsICdMb2NhbENvbnRhaW5lcnNTdGFydHVwU3RyYXRlZ3knXQogICAgICAgIGRlZmF1bHQ6IE9wZW5TaGlmdFN0YXJ0dXBTdHJhdGVneQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9pbWFnZV9zdHJlYW1fbmFtZQogICAgICAgICMgUHJvbWV0aGV1cwogICAgICAtICpfYXBi\
X2tpZXNlcnZlcl9wcm9tZXRoZXVzX2V4dF9kaXNhYmxlZAoKICAgICAgIyBFeHRlcm5hbCBEYXRhYmFzZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kcml2ZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZGlhbGVjdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9ob3N0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3BvcnQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl91cmwKCiAgICAgICMgUm91dGVyCiAgICAgIC0gKl9hcGJfcm91dGVyX3N2YwogICAgICAtICpfYXBiX3JvdXRlcl9ob3N0CiAgICAg\
IC0gKl9hcGJfcm91dGVyX3BvcnQKICAgICAgLSAqX2FwYl9yb3V0ZXJfcHJvdG9jb2wKCiAgICAgICMgQ29udHJvbGxlcgogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfc3ZjCiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl9ob3N0CiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl9wb3J0CiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl9wcm90b2NvbAogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfdG9rZW4KICAgICAgLSA8PDogKl9hcGJfY29udHJvbGxlcl91c2VyCiAgICAgICAgZGlzcGxheV9ncm91cDogQ29udHJvbGxlciBJbnRlZ3JhdGlvbgogICAgICAtIDw8OiAqX2FwYl9jb250cm9sbGVyX3B3ZAogICAgICAgIGRpc3BsYXlfZ3JvdXA6IENvbnRyb2xsZXIgSW50ZWdyYXRpb24K\
CiAgICAgICMgUkggLSBTU08KICAgICAgLSAqX2FwYl9zc29fdXJsCiAgICAgIC0gKl9hcGJfc3NvX3JlYWxtCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnQKICAgICAgICBuYW1lOiBhcGJfa2llc2VydmVyX3Nzb19jbGllbnQKICAgICAgICB0aXRsZTogUkgtU1NPIFByb2Nlc3MgU2VydmVyIC0gQ2xpZW50CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IG5hbWUgZm9yIFByb2Nlc3MgU2VydmVyLiBJZiB0aGUgc2VjcmV0LCB1c2VyIGFuZCBwYXNzd29yZCBhcmUgcHJvdmlkZWQgaXQgd2lsbCBiZSBjcmVhdGVkLiBGb3IgZXhhbXBsZSwga2llc2VydmVyCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnRfc2VjcmV0CiAgICAg\
ICAgbmFtZTogYXBiX2tpZXNlcnZlcl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIHRpdGxlOiBSSC1TU08gUHJvY2VzcyBTZXJ2ZXIgLSBDbGllbnQgU2VjcmV0CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IHNlY3JldCBmb3IgUHJvY2VzcyBTZXJ2ZXIuCiAgICAgIC0gKl9hcGJfc3NvX3VzZXIKICAgICAgLSAqX2FwYl9zc29fcHdkCiAgICAgIC0gKl9hcGJfc3NvX2Rpc2FibGVfc3NsX2NlcnRfdmFsaWRhdGlvbgogICAgICAtICpfYXBiX3Nzb19wcmluY2lwYWxfYXR0cmlidXRlCgogICAgICAjIExEQVAKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXJsCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2JpbmRfZG4KICAgICAgLSAq\
X2FwYl9hdXRoX2xkYXBfYmluZF9jcmVkZW50aWFsCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2phYXNfc2VjdXJpdHlfZG9tYWluCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Jhc2VfY3R4X2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Jhc2VfZmlsdGVyCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3NlYXJjaF9zY29wZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfdGltZV9saW1pdAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kaXN0aW5ndWlzaGVkX25hbWVfYXR0cmlidXRlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3BhcnNlX3VzZXJuYW1lCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2JlZ2luX3N0cmluZwogICAgICAtICpfYXBiX2F1dGhf\
bGRhcF91c2VybmFtZV9lbmRfc3RyaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lkCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVzX2N0eF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2ZpbHRlcgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX3JlY3Vyc2lvbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kZWZhdWx0X3JvbGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9uYW1lX2F0dHJpYnV0ZV9pZAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9wYXJzZV9yb2xlX25hbWVfZnJvbV9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pc19kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yZWZl\
cnJhbF91c2VyX2F0dHJpYnV0ZV9pZF90b19jaGVjawoKICAgICAgIyBSb2xlTWFwcGluZwogICAgICAtICpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcm9sZXNfcHJvcGVydGllcwogICAgICAtICpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcmVwbGFjZV9yb2xlCgogIC0gbmFtZTogaW1tdXRhYmxlLW1vbgogICAgZGVzY3JpcHRpb246CiAgICAgIFVzZSBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcgdG8gbW9uaXRvciB0aGUgcGVyZm9ybWFuY2Ugb2YgdGhlIGVudmlyb25tZW50IGFuZCB0byBzdG9wIGFuZAogICAgICByZXN0YXJ0IHNvbWUgb2YgdGhlIHByb2Nlc3MgaW5zdGFuY2VzIGluIGFuIGltbXV0YWJsZSBlbnZpcm9ubWVudCwgYnV0IG5vdCB0byBkZXBsb3kgYWRkaXRp\
b25hbCBwcm9jZXNzZXMgdG8gYW55IFByb2Nlc3MgU2VydmVyIG9yIHVuZGVwbG95IGFueSBleGlzdGluZyBvbmVzICh5b3UgY2FuIG5vdCBhZGQgb3IgcmVtb3ZlIGNvbnRhaW5lcnMpCiAgICBmcmVlOiB0cnVlCiAgICBtZXRhZGF0YToKICAgICAgZGlzcGxheU5hbWU6IEltbXV0YWJsZSBTZXJ2ZXIgLSBNb25pdG9yCiAgICBwYXJhbWV0ZXJzOgogICAgICAjIENvbW1vbiBDcmVkZW50aWFscwogICAgICAtICpfYXBiX2tpZV9hZG1pbl91c2VyCiAgICAgIC0gKl9hcGJfa2llX2FkbWluX3B3ZAogICAgICAtICpfYXBiX2ltYWdlX3N0cmVhbV90YWcKCiAgICAgICMgTWF2ZW4KICAgICAgLSAqX2FwYl9tYXZlbl9taXJyb3JfdXJsCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb191\
cmwKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX2lkCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb191c2VyCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb19wd2QKCiAgICAgICMgQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiAgICAgIC0gPDw6ICpfYXBiX3JlcGxpY2FzCiAgICAgICAgbmFtZTogYXBiX2J1c2luZXNzY2VudHJhbF9yZXBsaWNhcwogICAgICAgIGRlc2NyaXB0aW9uOiBOdW1iZXIgb2YgUmVwbGljYXMgb2YgQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nIHRoYXQgd2lsbCBiZSBpbml0aWFsbHkgZGVwbG95ZWQKICAgICAgICBkZWZhdWx0OiAxCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiAgICAgIC0gPDw6ICpf\
YXBiX3ZvbHVtZV9zaXplCiAgICAgICAgbmFtZTogYXBiX2J1c2luZXNzY2VudHJhbF92b2x1bWVfc2l6ZQogICAgICAgIGRlc2NyaXB0aW9uOiBTcGVjaWZ5IHRoZSBQZXJzaXN0ZW50IFZvbHVtZSBDbGFpbSBzaXplIHRvIGNyZWF0ZSBmb3Igc3RvcmluZyB0aGUgdXNlciBkYXRhLiBGb3IgZXhhbXBsZSwgNjRNaQogICAgICAgIGRlZmF1bHQ6IDY0TWkKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgIyBLZXlzdG9yZSBhbmQgU2VjcmV0CiAgICAgIC0gKl9hcGJfYnVzaW5lc3NjZW50cmFsX3NlY3JldF9uYW1lCiAgICAgIC0gKl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX25hbWUKICAgICAgLSAqX2FwYl9idXNp\
bmVzc2NlbnRyYWxfa2V5c3RvcmVfYWxpYXMKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfcHdkCiAgICAgIC0gPDw6ICpfYXBiX2J1c2luZXNzY2VudHJhbF9ob3N0bmFtZQogICAgICAgIGRlc2NyaXB0aW9uOiBQdWJsaWMgaG9zdG5hbWUgZm9yIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZy4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiAgICAgICMgT0NQIEVuYWJsZW1lbnQKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX2dsb2JhbF9kaXNjb3ZlcnkKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3ByZWZlcl9raWVzZXJ2ZXJfc3ZjCiAgICAgIC0gKl9hcGJfY29udHJv\
bGxlcl90ZW1wbGF0ZV9jYWNoZV90dGwKICAgICAgIyBPdGhlciB1c2VycwogICAgICAtIDw8OiAqX2FwYl9jb250cm9sbGVyX3VzZXIKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgLSA8PDogKl9hcGJfY29udHJvbGxlcl9wd2QKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKCiAgICAgICMgU21hcnQgUm91dGVyCiAgICAgIC0gKl9hcGJfc21hcnRyb3V0ZXJfcHJvdG9jb2wKICAgICAgLSAqX2FwYl9zbWFydHJvdXRlcl91c2VfZXh0ZXJuYWxfcm91dGUKICAgICAgLSA8PDogKl9hcGJfcmVwbGljYXMKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfcmVwbGljYXMKICAg\
ICAgICBkZXNjcmlwdGlvbjogTnVtYmVyIG9mIFJlcGxpY2FzIG9mIFNtYXJ0IFJvdXRlciB0aGF0IHdpbGwgYmUgaW5pdGlhbGx5IGRlcGxveWVkCiAgICAgICAgZGVmYXVsdDogMgogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl92b2x1bWVfc2l6ZQogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl92b2x1bWVfc2l6ZQogICAgICAgIGRlc2NyaXB0aW9uOiBTcGVjaWZ5IHRoZSBQZXJzaXN0ZW50IFZvbHVtZSBDbGFpbSBzaXplIHRvIGNyZWF0ZS4gRm9yIGV4YW1wbGUsIDY0TWkKICAgICAgICBkZWZhdWx0OiA2NE1pCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX2hvc3Ru\
YW1lCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX2hvc3RuYW1lCiAgICAgICAgZGVzY3JpcHRpb246IFB1YmxpYyBob3N0bmFtZSBmb3IgU21hcnQgUm91dGVyLiBHZW5lcmF0ZWQgaWYgZW1wdHkKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfc2VjcmV0X25hbWUKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfc2VjcmV0X25hbWUKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfa2V5c3RvcmVfbmFtZQogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9rZXlzdG9yZV9uYW1lCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6\
ICpfYXBiX2tleXN0b3JlX2FsaWFzCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX2tleXN0b3JlX2FsaWFzCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX2tleXN0b3JlX3B3ZAogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9rZXlzdG9yZV9wd2QKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKCiAgICAgICMgUkggLSBTU08KICAgICAgLSAqX2FwYl9zc29fdXJsCiAgICAgIC0gKl9hcGJfc3NvX3JlYWxtCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnQKICAgICAgICBuYW1lOiBhcGJfc3NvX2J1c2luZXNzY2VudHJhbF9jbGllbnQKICAgICAgICB0aXRsZTogUkgtU1NPIEJ1c2luZXNzIENl\
bnRyYWwgTW9uaXRvcmluZyAtIENsaWVudAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBuYW1lIGZvciBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcuIElmIHRoZSBzZWNyZXQsIHVzZXIgYW5kIHBhc3N3b3JkIGFyZSBwcm92aWRlZCBpdCB3aWxsIGJlIGNyZWF0ZWQuIEZvciBleGFtcGxlLCBidXNpbmVzc2NlbnRyYWwKICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudF9zZWNyZXQKICAgICAgICBuYW1lOiBhcGJfc3NvX2J1c2luZXNzY2VudHJhbF9jbGllbnRfc2VjcmV0CiAgICAgICAgdGl0bGU6IFJILVNTTyBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcgLSBDbGllbnQgU2VjcmV0CiAgICAgICAgZGVzY3JpcHRpb246\
IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IHNlY3JldCBmb3IgQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nLgogICAgICAtICpfYXBiX3Nzb191c2VyCiAgICAgIC0gKl9hcGJfc3NvX3B3ZAogICAgICAtICpfYXBiX3Nzb19kaXNhYmxlX3NzbF9jZXJ0X3ZhbGlkYXRpb24KICAgICAgLSAqX2FwYl9zc29fcHJpbmNpcGFsX2F0dHJpYnV0ZQoKICAgICAgIyBMREFQCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VybAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iaW5kX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2JpbmRfY3JlZGVudGlhbAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9qYWFzX3NlY3VyaXR5X2RvbWFpbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9i\
YXNlX2N0eF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iYXNlX2ZpbHRlcgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfc2NvcGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3RpbWVfbGltaXQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfZGlzdGluZ3Vpc2hlZF9uYW1lX2F0dHJpYnV0ZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9wYXJzZV91c2VybmFtZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9iZWdpbl9zdHJpbmcKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfZW5kX3N0cmluZwogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pZAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlc19jdHhf\
ZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9maWx0ZXIKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9yZWN1cnNpb24KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfZGVmYXVsdF9yb2xlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfbmFtZV9hdHRyaWJ1dGVfaWQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcGFyc2Vfcm9sZV9uYW1lX2Zyb21fZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaXNfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcmVmZXJyYWxfdXNlcl9hdHRyaWJ1dGVfaWRfdG9fY2hlY2sKCiAgICAgICMgUm9sZU1hcHBpbmcKICAgICAgLSAqX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JvbGVzX3Byb3BlcnRpZXMK\
ICAgICAgLSAqX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JlcGxhY2Vfcm9sZQoKICAtIG5hbWU6IG1hbmFnZWQKICAgIGRlc2NyaXB0aW9uOgogICAgICBBbiBlbnZpcm9ubWVudCBmb3IgcnVubmluZyBleGlzdGluZyBwcm9jZXNzZXMgZm9yIHN0YWdpbmcgYW5kIHByb2R1Y3Rpb24gcHVycG9zZXMuCiAgICAgIFRoaXMgZW52aXJvbm1lbnQgaW5jbHVkZXMgc2V2ZXJhbCBncm91cHMgb2YgUHJvY2VzcyBTZXJ2ZXIgcG9kczsgeW91IGNhbiBkZXBsb3kgYW5kIHVuZGVwbG95CiAgICAgIHByb2Nlc3NlcyBvbiBldmVyeSBzdWNoIGdyb3VwIGFuZCBhbHNvIHNjYWxlIHRoZSBncm91cCB1cCBvciBkb3duIGFzIG5lY2Vzc2FyeS4gVXNlIEJ1c2luZXNzCiAgICAgIENlbnRyYWwgTW9u\
aXRvcmluZyB0byBkZXBsb3ksIHJ1biwgYW5kIHN0b3AgdGhlIHByb2Nlc3NlcyBhbmQgdG8gbW9uaXRvciB0aGVpciBleGVjdXRpb24uCgogICAgZnJlZTogdHJ1ZQogICAgbWV0YWRhdGE6CiAgICAgIGRpc3BsYXlOYW1lOiBNYW5hZ2VkIEVudmlyb25tZW50CiAgICBwYXJhbWV0ZXJzOgogICAgICAjIENvbW1vbiBDcmVkZW50aWFscwogICAgICAtICpfYXBiX2tpZV9hZG1pbl91c2VyCiAgICAgIC0gKl9hcGJfa2llX2FkbWluX3B3ZAogICAgICAtICpfYXBiX2ltYWdlX3N0cmVhbV90YWcKCiAgICAgICMgTWF2ZW4KICAgICAgLSAqX2FwYl9tYXZlbl9taXJyb3JfdXJsCiAgICAgIC0gPDw6ICpfYXBiX21hdmVuX3JlcG9fdXJsCiAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAg\
ICAgICBkZXNjcmlwdGlvbjogRXh0ZXJuYWwgTWF2ZW4gUmVwb3NpdG9yeSBVUkwuCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb19pZAogICAgICAtICpfYXBiX21hdmVuX3JlcG9fdXNlcgogICAgICAtICpfYXBiX21hdmVuX3JlcG9fcHdkCgogICAgICAjIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAtIDw8OiAqX2FwYl9yZXBsaWNhcwogICAgICAgIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfcmVwbGljYXMKICAgICAgICBkZWZhdWx0OiAxCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiAgICAgIC0gPDw6ICpfYXBiX3ZvbHVtZV9zaXplCiAgICAgICAgbmFtZTogYXBiX2J1c2luZXNzY2VudHJhbF92b2x1bWVf\
c2l6ZQogICAgICAgIGRlc2NyaXB0aW9uOiBTcGVjaWZ5IHRoZSBQZXJzaXN0ZW50IFZvbHVtZSBDbGFpbSBzaXplIHRvIGNyZWF0ZSBmb3Igc3RvcmluZyB0aGUgdXNlciBkYXRhLiBGb3IgZXhhbXBsZSwgNjRNaQogICAgICAgIGRlZmF1bHQ6IDY0TWkKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgIyMgS2V5c3RvcmUgYW5kIFNlY3JldAogICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9zZWNyZXRfbmFtZQogICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9uYW1lCiAgICAgIC0gKl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX2FsaWFzCiAgICAgIC0gKl9hcGJfYnVzaW5lc3NjZW50cmFs\
X2tleXN0b3JlX3B3ZAogICAgICAtIDw8OiAqX2FwYl9idXNpbmVzc2NlbnRyYWxfaG9zdG5hbWUKICAgICAgICBkZXNjcmlwdGlvbjogUHVibGljIGhvc3RuYW1lIGZvciBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcuIEdlbmVyYXRlZCBpZiBlbXB0eQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAjIE9DUCBFbmFibGVtZW50CiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl9nbG9iYWxfZGlzY292ZXJ5CiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl9wcmVmZXJfa2llc2VydmVyX3N2YwogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfdGVtcGxhdGVfY2FjaGVfdHRsCgogICAgICAjIE90aGVyIHVzZXJzCiAgICAgIC0gPDw6\
ICpfYXBiX2NvbnRyb2xsZXJfdXNlcgogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAtIDw8OiAqX2FwYl9jb250cm9sbGVyX3B3ZAogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwoKICAgICAgIyBTbWFydCBSb3V0ZXIKICAgICAgLSAqX2FwYl9zbWFydHJvdXRlcl9wcm90b2NvbAogICAgICAtICpfYXBiX3NtYXJ0cm91dGVyX3VzZV9leHRlcm5hbF9yb3V0ZQogICAgICAtIDw8OiAqX2FwYl9yZXBsaWNhcwogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9yZXBsaWNhcwogICAgICAgIGRlZmF1bHQ6IDIKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAg\
ICAgLSA8PDogKl9hcGJfdm9sdW1lX3NpemUKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfdm9sdW1lX3NpemUKICAgICAgICBkZXNjcmlwdGlvbjogU3BlY2lmeSB0aGUgUGVyc2lzdGVudCBWb2x1bWUgQ2xhaW0gc2l6ZSB0byBjcmVhdGUuIEZvciBleGFtcGxlLCA2NE1pCiAgICAgICAgZGVmYXVsdDogNjRNaQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9ob3N0bmFtZQogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9ob3N0bmFtZQogICAgICAgIGRlc2NyaXB0aW9uOiBQdWJsaWMgaG9zdG5hbWUgZm9yIFNtYXJ0IFJvdXRlci4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgICAgICAgZGlzcGxheV9ncm91cDogU21h\
cnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX3NlY3JldF9uYW1lCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX3NlY3JldF9uYW1lCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX2tleXN0b3JlX25hbWUKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfa2V5c3RvcmVfbmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9rZXlzdG9yZV9hbGlhcwogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9rZXlzdG9yZV9hbGlhcwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9rZXlzdG9yZV9wd2QKICAgICAgICBu\
YW1lOiBhcGJfc21hcnRyb3V0ZXJfa2V5c3RvcmVfcHdkCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCgogICAgICAjIFByb2Nlc3MgU2VydmVyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX21vZGUKICAgICAgLSBuYW1lOiBhcGJfa2llc2VydmVyX3NldHMKICAgICAgICB0aXRsZTogU2V0cyBvZiBQcm9jZXNzIFNlcnZlcnMKICAgICAgICBkZXNjcmlwdGlvbjoKICAgICAgICAgIE51bWJlciBvZiBzZXRzIG9mIEtpZSBQcm9jZXNzIFNlcnZlciBjbHVzdGVyICsgZGF0YWJhc2UgdGhhdCB3aWxsIGJlIGRlcGxveWVkLgogICAgICAgICAgRWFjaCBzZXQgY2FuIHJ1biBzZXBhcmF0ZSBzZXJ2aWNlcyBhbmQgb3RoZXIgYXNzZXRzLiBBbGwgc2V0cyBjb25uZWN0\
IHRvIHRoZSBzYW1lIFNtYXJ0IFJvdXRlcgogICAgICAgIGRlZmF1bHQ6IDIKICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgIHR5cGU6IG51bWJlcgogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCiAgICAgIC0gPDw6ICpfYXBiX3JlcGxpY2FzCiAgICAgICAgbmFtZTogYXBiX2tpZXNlcnZlcl9yZXBsaWNhcwogICAgICAgIGRlZmF1bHQ6IDMKICAgICAgICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9kYl90eXBlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2RiX3NpemUKCiAgICAgICMjIEtleXN0b3JlIGFuZCBTZWNyZXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfc2VjcmV0X25hbWUKICAgICAg\
LSAqX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9hbGlhcwogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9wd2QKCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3VzZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfcHdkCiAgICAgIC0gPDw6ICpfYXBiX2tpZXNlcnZlcl9ob3N0bmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3N0YXJ0dXBfc3RyYXRlZ3kKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfaW1hZ2Vfc3RyZWFtX25hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfcHJvbWV0aGV1c19leHRfZGlzYWJsZWQKCiAgICAgICMgRXh0\
ZXJuYWwgRGF0YWJhc2UKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZHJpdmVyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RpYWxlY3QKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfaG9zdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9wb3J0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX25hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfdXJsCgogICAgICAjIEpNUwogICAgICAtICpfYXBiX2VuYWJsZV9raWVzZXJ2ZXJfam1zX2ludGVncmF0aW9uCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcgogICAgICAtICpfYXBiX2tpZXNlcnZl\
cl9qbXNfcXVldWVfZXhlY3V0b3IKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yX3RyYW5zYWN0ZWQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3JlcXVlc3QKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3Jlc3BvbnNlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfc2lnbmFsCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9zaWduYWwKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9hdWRpdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfYXVkaXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2F1ZGl0X3RyYW5zYWN0ZWQKICAgICAgLSAqX2FwYl9raWVzZXJ2\
ZXJfam1zX3VzZXJuYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19wYXNzd29yZAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfYW1xX3F1ZXVlcwogICAgICAtICpfYXBiX2FtcV9zZWNyZXRfbmFtZQogICAgICAtICpfYXBiX2FtcV90cnVzdHN0b3JlX25hbWUKICAgICAgLSAqX2FwYl9hbXFfdHJ1c3RzdG9yZV9wd2QKICAgICAgLSAqX2FwYl9hbXFfa2V5c3RvcmVfbmFtZQogICAgICAtICpfYXBiX2FtcV9rZXlzdG9yZV9wd2QKCiAgICAgICMgUkggLSBTU08KICAgICAgLSAqX2FwYl9zc29fdXJsCiAgICAgIC0gKl9hcGJfc3NvX3JlYWxtCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnQKICAgICAgICBuYW1lOiBhcGJfc3NvX2J1c2luZXNzY2VudHJhbF9j\
bGllbnQKICAgICAgICB0aXRsZTogUkgtU1NPIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZyAtIENsaWVudAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBuYW1lIGZvciBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcuIElmIHRoZSBzZWNyZXQsIHVzZXIgYW5kIHBhc3N3b3JkIGFyZSBwcm92aWRlZCBpdCB3aWxsIGJlIGNyZWF0ZWQuIEZvciBleGFtcGxlLCBidXNpbmVzc2NlbnRyYWwKICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudF9zZWNyZXQKICAgICAgICBuYW1lOiBhcGJfc3NvX2J1c2luZXNzY2VudHJhbF9jbGllbnRfc2VjcmV0CiAgICAgICAgdGl0bGU6IFJILVNTTyBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3Jp\
bmcgLSBDbGllbnQgU2VjcmV0CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IHNlY3JldCBmb3IgQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nLgogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50CiAgICAgICAgbmFtZTogYXBiX2tpZXNlcnZlcl9zc29fY2xpZW50CiAgICAgICAgdGl0bGU6IFJILVNTTyBQcm9jZXNzIFNlcnZlciAtIENsaWVudAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBuYW1lIGZvciBQcm9jZXNzIFNlcnZlci4gSWYgdGhlIHNlY3JldCwgdXNlciBhbmQgcGFzc3dvcmQgYXJlIHByb3ZpZGVkIGl0IHdpbGwgYmUgY3JlYXRlZC4gRm9yIGV4YW1wbGUsIGtpZXNl\
cnZlcgogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc3NvX2NsaWVudF9zZWNyZXQKICAgICAgICB0aXRsZTogUkgtU1NPIFByb2Nlc3MgU2VydmVyIC0gQ2xpZW50IFNlY3JldAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBzZWNyZXQgZm9yIFByb2Nlc3MgU2VydmVyLgogICAgICAtICpfYXBiX3Nzb191c2VyCiAgICAgIC0gKl9hcGJfc3NvX3B3ZAogICAgICAtICpfYXBiX3Nzb19kaXNhYmxlX3NzbF9jZXJ0X3ZhbGlkYXRpb24KICAgICAgLSAqX2FwYl9zc29fcHJpbmNpcGFsX2F0dHJpYnV0ZQoKICAgICAgIyBMREFQCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFw\
X3VybAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iaW5kX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2JpbmRfY3JlZGVudGlhbAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9qYWFzX3NlY3VyaXR5X2RvbWFpbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iYXNlX2N0eF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iYXNlX2ZpbHRlcgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfc2NvcGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3RpbWVfbGltaXQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfZGlzdGluZ3Vpc2hlZF9uYW1lX2F0dHJpYnV0ZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9wYXJzZV91c2VybmFtZQogICAgICAtICpfYXBiX2F1dGhf\
bGRhcF91c2VybmFtZV9iZWdpbl9zdHJpbmcKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfZW5kX3N0cmluZwogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pZAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlc19jdHhfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9maWx0ZXIKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9yZWN1cnNpb24KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfZGVmYXVsdF9yb2xlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfbmFtZV9hdHRyaWJ1dGVfaWQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcGFyc2Vfcm9sZV9uYW1lX2Zyb21fZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9s\
ZV9hdHRyaWJ1dGVfaXNfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcmVmZXJyYWxfdXNlcl9hdHRyaWJ1dGVfaWRfdG9fY2hlY2sKCiAgICAgICMgUm9sZU1hcHBpbmcKICAgICAgLSAqX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JvbGVzX3Byb3BlcnRpZXMKICAgICAgLSAqX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JlcGxhY2Vfcm9sZQo="

modules:
  repositories:
    - path: modules
  install:
    - name: rhpam-apb
packages:
  content_sets_file: content_sets.yml
  repositories:
    - name: base
      id: rhel-7-server-rpms
  install:
    - java-1.8.0-openjdk-headless
osbs:
  configuration:
    container_file: container.yaml
  repository:
    name: apbs/rhpam-7-apb-openshift
    branch: rhpam-7-rhel-7
